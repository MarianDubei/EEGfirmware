ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ads1299_send_byte,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	ads1299_send_byte, %function
  24              	ads1299_send_byte:
  25              	.LFB40:
  26              		.file 1 "./ads1299.h"
   1:./ads1299.h   **** /**
   2:./ads1299.h   ****  *  \file ads1299.h
   3:./ads1299.h   ****  *  \brief Configuration settings, register definitions, and function prototypes for using the ADS1
   4:./ads1299.h   ****  *	\author Graham Kelly
   5:./ads1299.h   ****  *	\version 1.0
   6:./ads1299.h   ****  *	\date August 2014
   7:./ads1299.h   ****  *
   8:./ads1299.h   ****  *  All Atmel Software Framework libraries used herein are copyright Atmel and
   9:./ads1299.h   ****  *  subject to their appropriate licenses, which allow free redistribution with
  10:./ads1299.h   ****  *  some restrictions. These restrictions are listed in their appropriate files.
  11:./ads1299.h   ****  *
  12:./ads1299.h   ****  *  \page License
  13:./ads1299.h   ****  *
  14:./ads1299.h   ****  *  Brainboard firmware code is placed under the MIT license
  15:./ads1299.h   ****  *  Copyright (c) 2014 Graham Kelly
  16:./ads1299.h   ****  *
  17:./ads1299.h   ****  *  Permission is hereby granted, free of charge, to any person obtaining a copy
  18:./ads1299.h   ****  *  of this software and associated documentation files (the "Software"), to deal
  19:./ads1299.h   ****  *  in the Software without restriction, including without limitation the rights
  20:./ads1299.h   ****  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  21:./ads1299.h   ****  *  copies of the Software, and to permit persons to whom the Software is
  22:./ads1299.h   ****  *  furnished to do so, subject to the following conditions:
  23:./ads1299.h   ****  *
  24:./ads1299.h   ****  *  The above copyright notice and this permission notice shall be included in
  25:./ads1299.h   ****  *  all copies or substantial portions of the Software.
  26:./ads1299.h   ****  *
  27:./ads1299.h   ****  *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  28:./ads1299.h   ****  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  29:./ads1299.h   ****  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  30:./ads1299.h   ****  *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  31:./ads1299.h   ****  *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 2


  32:./ads1299.h   ****  *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  33:./ads1299.h   ****  *  THE SOFTWARE.
  34:./ads1299.h   ****  *
  35:./ads1299.h   ****  */
  36:./ads1299.h   **** 
  37:./ads1299.h   **** #ifndef _ADS1299_H_
  38:./ads1299.h   **** #define _ADS1299_H_
  39:./ads1299.h   **** 
  40:./ads1299.h   **** #ifdef __cplusplus
  41:./ads1299.h   **** extern "C" {
  42:./ads1299.h   **** #endif
  43:./ads1299.h   **** 
  44:./ads1299.h   **** 
  45:./ads1299.h   **** //#include "comms.h"
  46:./ads1299.h   **** //#include <spi_master.h>
  47:./ads1299.h   **** //#include <gpio.h>
  48:./ads1299.h   **** //#include <delay.h>
  49:./ads1299.h   **** #include <project.h>
  50:./ads1299.h   **** #include "ads1299_spi_adapt.h"
  51:./ads1299.h   **** #include "comms.h"
  52:./ads1299.h   **** 
  53:./ads1299.h   **** /**************************************************************************************************
  54:./ads1299.h   ****  *               Sampling Config                                                                   
  55:./ads1299.h   ****  **************************************************************************************************
  56:./ads1299.h   **** 
  57:./ads1299.h   **** /**
  58:./ads1299.h   ****  *  \brief Default data rate from the ADS1299.
  59:./ads1299.h   ****  *
  60:./ads1299.h   ****  *	To monitor electrode impedance continuously, an AC current is pulsed through each electrode and 
  61:./ads1299.h   ****  *  voltage perturbation observed in the measured signal. This signal will not be easily separable 
  62:./ads1299.h   ****  *  is within the typical 0-100 Hz EEG bandwidth; since the fastest possible AC excitation rate the
  63:./ads1299.h   ****  *  generate is (data rate)/4, the lowest recommended data rate that allows continuous impedance mo
  64:./ads1299.h   ****  *  Using a 500 Hz data rate will generate an AC excitation at 125 Hz, which is dangerously close t
  65:./ads1299.h   ****  *  the EEG band.
  66:./ads1299.h   ****  */
  67:./ads1299.h   **** #define DEFAULT_SAMPLE_RATE			250
  68:./ads1299.h   **** 
  69:./ads1299.h   **** 
  70:./ads1299.h   **** /**************************************************************************************************
  71:./ads1299.h   **** *               Other Useful Definitions                                                           
  72:./ads1299.h   **** ***************************************************************************************************
  73:./ads1299.h   **** 
  74:./ads1299.h   **** 
  75:./ads1299.h   **** #define SIGN_EXT_24(VAL)						((int32_t)((uint32_t)(VAL) ^ (1UL<<(23))) - (1L<<(23)))
  76:./ads1299.h   **** 
  77:./ads1299.h   **** /* Default register values */
  78:./ads1299.h   **** #define ADS1299_REGDEFAULT_ID			ADS1299_DEVICE_ID
  79:./ads1299.h   **** #define ADS1299_REGDEFAULT_CONFIG1		0x96			///< Multiple readback mode, OSC output disabled, DR = F
  80:./ads1299.h   **** #define ADS1299_REGDEFAULT_CONFIG2		0xD0			///< Test signal sourced internally, low-amplitude test 
  81:./ads1299.h   **** #define ADS1299_REGDEFAULT_CONFIG3		0x68			///< Ref buffer off, bias measurement off, internal bias
  82:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF			0x00			///< 95%/5% LOFF comparator threshold, DC lead-off at 6 nA
  83:./ads1299.h   **** #define ADS1299_REGDEFAULT_CHNSET		0xE0			///< Channel off, gain 24, SRB2 disconnected, normal elec
  84:./ads1299.h   **** #define ADS1299_REGDEFAULT_BIAS_SENSP	0x00			///< All BIAS channels disconnected from positive lead
  85:./ads1299.h   **** #define ADS1299_REGDEFAULT_BIAS_SENSN	0x00			///< All BIAS channels disconnected from negative lead
  86:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF_SENSP	0x00			///< All LOFF channels disconnected from positive lead
  87:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF_SENSN	0x00			///< All LOFF channels disconnected from negative lead
  88:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF_FLIP	0x00			///< No flipping in this house; source/pull-up at INP, 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 3


  89:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF_STATP	0x00			///< This is a read-only register; reset value is 0x00
  90:./ads1299.h   **** #define ADS1299_REGDEFAULT_LOFF_STATN	0x00			///< This is a read-only register; reset value is 0x00
  91:./ads1299.h   **** #define ADS1299_REGDEFAULT_GPIO			0x0F			///< All GPIO set to inputs
  92:./ads1299.h   **** #define ADS1299_REGDEFAULT_MISC1		0x00			///< SRB1 disconnected
  93:./ads1299.h   **** #define ADS1299_REGDEFAULT_MISC2		0x00			///< Register not used in this silicon; should stay at 0x0
  94:./ads1299.h   **** #define ADS1299_REGDEFAULT_CONFIG4		0x00			///< Continuous conversion, LOFF comparator powered down
  95:./ads1299.h   **** 	
  96:./ads1299.h   **** 
  97:./ads1299.h   **** /**************************************************************************************************
  98:./ads1299.h   **** *               Typedefs and Struct Declarations/Definitions                                       
  99:./ads1299.h   **** ***************************************************************************************************
 100:./ads1299.h   **** 
 101:./ads1299.h   **** /**
 102:./ads1299.h   ****  *	\brief Error codes for interacting with the ADS1299.
 103:./ads1299.h   ****  *
 104:./ads1299.h   ****  */
 105:./ads1299.h   **** typedef enum
 106:./ads1299.h   **** {
 107:./ads1299.h   **** 	ADS1299_STATUS_OK				= 0,		///< No error.
 108:./ads1299.h   **** 	ADS1299_ERROR_SPI_TIMEOUT		= 1,		///< SPI timed out. Check SPI configuration and hardware connecti
 109:./ads1299.h   **** 	/* Expand with other codes if desired */
 110:./ads1299.h   **** } ads1299_error_t;
 111:./ads1299.h   **** 
 112:./ads1299.h   **** /**
 113:./ads1299.h   ****  *	\brief ADS1299 register addresses.
 114:./ads1299.h   ****  *
 115:./ads1299.h   ****  * Consult the ADS1299 datasheet and user's guide for more information.
 116:./ads1299.h   ****  */
 117:./ads1299.h   **** #define	ADS1299_REGADDR_ID			 0x00			///< Chip ID register. Read-only. ID[4:0] should be 11110.
 118:./ads1299.h   **** #define	ADS1299_REGADDR_CONFIG1		 0x01			///< Configuration register 1. Controls daisy-chain mode; 
 119:./ads1299.h   **** #define	ADS1299_REGADDR_CONFIG2		 0x02			///< Configuration register 2. Controls calibration signal
 120:./ads1299.h   **** #define	ADS1299_REGADDR_CONFIG3		 0x03			///< Configuration register 3. Controls reference buffer p
 121:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF		 0x04			///< Lead-off control register. Controls lead-off frequency, 
 122:./ads1299.h   **** #define	ADS1299_REGADDR_CH1SET		 0x05			///< Channel 1 settings register. Controls channel 1 input 
 123:./ads1299.h   **** #define	ADS1299_REGADDR_CH2SET		 0x06			///< Channel 2 settings register. Controls channel 2 input 
 124:./ads1299.h   **** #define	ADS1299_REGADDR_CH3SET		 0x07			///< Channel 3 settings register. Controls channel 3 input 
 125:./ads1299.h   **** #define	ADS1299_REGADDR_CH4SET		 0x08			///< Channel 4 settings register. Controls channel 4 input 
 126:./ads1299.h   **** #define	ADS1299_REGADDR_CH5SET		 0x09			///< Channel 5 settings register. Controls channel 5 input 
 127:./ads1299.h   **** #define	ADS1299_REGADDR_CH6SET		 0x0A			///< Channel 6 settings register. Controls channel 6 input 
 128:./ads1299.h   **** #define	ADS1299_REGADDR_CH7SET		 0x0B			///< Channel 7 settings register. Controls channel 7 input 
 129:./ads1299.h   **** #define	ADS1299_REGADDR_CH8SET		 0x0C			///< Channel 8 settings register. Controls channel 8 input 
 130:./ads1299.h   **** #define	ADS1299_REGADDR_BIAS_SENSP	 0x0D			///< Bias drive positive sense selection. Selects channe
 131:./ads1299.h   **** #define	ADS1299_REGADDR_BIAS_SENSN	 0x0E			///< Bias drive negative sense selection. Selects channe
 132:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF_SENSP	 0x0F			///< Lead-off positive sense selection. Selects channels
 133:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF_SENSN	 0x10			///< Lead-off negative sense selection. Selects channels
 134:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF_FLIP	 0x11			///< 1: Swaps lead-off current source and sink on the cor
 135:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF_STATP	 0x12			///< Lead-off positive side status register. Read-only. 
 136:./ads1299.h   **** #define	ADS1299_REGADDR_LOFF_STATN	 0x13			///< Lead-off negative side status register. Read-only. 
 137:./ads1299.h   **** #define	ADS1299_REGADDR_GPIO		 0x14			///< GPIO register. Controls state and direction of the ADS12
 138:./ads1299.h   **** #define	ADS1299_REGADDR_MISC1		 0x15			///< Miscellaneous 1. Connects/disconnects SRB1 to all chann
 139:./ads1299.h   **** #define	ADS1299_REGADDR_MISC2		 0x16			///< Miscellaneous 2. No functionality in current revision o
 140:./ads1299.h   **** #define	ADS1299_REGADDR_CONFIG4		 0x17			///< Configuration register 4. Enables/disables single-sho
 141:./ads1299.h   **** 
 142:./ads1299.h   **** /**
 143:./ads1299.h   ****  *	\brief ADS1299 SPI communication opcodes.
 144:./ads1299.h   ****  *	
 145:./ads1299.h   ****  * Consult the ADS1299 datasheet and user's guide for more information.
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 4


 146:./ads1299.h   ****  * For RREG and WREG opcodes, the first byte (opcode) must be ORed with the address of the register
 147:./ads1299.h   ****  * The command is completed with a second byte 000n nnnn, where n nnnn is (# registers to read) - 1
 148:./ads1299.h   ****  */
 149:./ads1299.h   **** #define	ADS1299_OPC_WAKEUP		 0x02			///< Wake up from standby.
 150:./ads1299.h   **** #define	ADS1299_OPC_STANDBY		 0x04			///< Enter standby.
 151:./ads1299.h   **** #define	ADS1299_OPC_RESET		 0x06			///< Reset all registers.	
 152:./ads1299.h   **** #define	ADS1299_OPC_START		 0x08			///< Start data conversions.
 153:./ads1299.h   **** #define	ADS1299_OPC_STOP		 0x0A			///< Stop data conversions.
 154:./ads1299.h   **** 	
 155:./ads1299.h   **** #define	ADS1299_OPC_RDATAC		 0x10			///< Read data continuously (registers cannot be read or writte
 156:./ads1299.h   **** #define	ADS1299_OPC_SDATAC		 0x11			///< Stop continuous data read.
 157:./ads1299.h   **** #define	ADS1299_OPC_RDATA		 0x12			///< Read single data value.
 158:./ads1299.h   **** 	
 159:./ads1299.h   **** #define	ADS1299_OPC_RREG		 0x20			///< Read register value.
 160:./ads1299.h   **** #define	ADS1299_OPC_WREG		 0x40			///< Write register value.
 161:./ads1299.h   **** 
 162:./ads1299.h   **** /* ID REGISTER ************************************************************************************
 163:./ads1299.h   **** 
 164:./ads1299.h   **** /**
 165:./ads1299.h   ****  *  \brief Factory-programmed device ID for ADS1299, stored in ID[3:0].
 166:./ads1299.h   ****  */ 
 167:./ads1299.h   **** // Factory-programmed device ID for ADS1299. Stored in ID[3:0].
 168:./ads1299.h   **** #define ADS1299_DEVICE_ID		0b1110
 169:./ads1299.h   **** 
 170:./ads1299.h   **** /* CONFIG1 REGISTER *******************************************************************************
 171:./ads1299.h   **** 
 172:./ads1299.h   **** /**
 173:./ads1299.h   ****  *  \brief Bit location and size definitions for CONFIG1.CLK_EN bit (oscillator output on CLK pin e
 174:./ads1299.h   ****  *
 175:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 40, for more information.
 176:./ads1299.h   ****  */
 177:./ads1299.h   **** #define ADS1299_REG_CONFIG1_CLOCK_OUTPUT_DISABLED	 (0<<5)
 178:./ads1299.h   **** #define ADS1299_REG_CONFIG1_CLOCK_OUTPUT_ENABLED	 (1<<5)
 179:./ads1299.h   **** 
 180:./ads1299.h   **** /**
 181:./ads1299.h   ****  *  \brief Bit location and size definitions for CONFIG1.DAISY_EN bit.
 182:./ads1299.h   ****  *
 183:./ads1299.h   ****  * Consult the ADS1299 datasheet, pp. 40 and 31-34, for more information.
 184:./ads1299.h   ****  */
 185:./ads1299.h   **** #define ADS1299_REG_CONFIG1_DAISY_CHAIN_MODE		 (0<<6)
 186:./ads1299.h   **** #define ADS1299_REG_CONFIG1_MULTI_READBACK_MODE		 (1<<6)
 187:./ads1299.h   **** 
 188:./ads1299.h   **** /**
 189:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG1.DR (data rate).
 190:./ads1299.h   ****  *
 191:./ads1299.h   ****  * FMOD = FCLK/2, where FCLK is the clock frequency of the ADS1299. This is normally 2.048 MHz.
 192:./ads1299.h   ****  */
 193:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_64			 0		///< Data is output at FMOD/64, or 16 kHz at 2.048
 194:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_128			 1		///< Data is output at FMOD/128, or 8 kHz at 2.04
 195:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_256			 2		///< Data is output at FMOD/256, or 4 kHz at 2.04
 196:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_512			 3		///< Data is output at FMOD/512, or 2 kHz at 2.04
 197:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_1024		 4		///< Data is output at FMOD/1024, or 1 kHz at 2.0
 198:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_2048		 5		///< Data is output at FMOD/2048, or 500 Hz at 2.
 199:./ads1299.h   **** #define	ADS1299_REG_CONFIG1_FMOD_DIV_BY_4096		 6		///< Data is output at FMOD/4096, or 250 Hz at 2.
 200:./ads1299.h   **** 
 201:./ads1299.h   **** /**
 202:./ads1299.h   ****  *  \brief Combined value of reserved bits in CONFIG1 register.
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 5


 203:./ads1299.h   ****  *
 204:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 40, for more information.
 205:./ads1299.h   ****  */
 206:./ads1299.h   **** #define ADS1299_REG_CONFIG1_RESERVED_VALUE			(1<<7)|(1<<4)
 207:./ads1299.h   **** 
 208:./ads1299.h   **** /* CONFIG2 REGISTER *******************************************************************************
 209:./ads1299.h   **** 
 210:./ads1299.h   **** /**
 211:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG2.CAL_FREQ (calibration signal frequency).
 212:./ads1299.h   ****  *
 213:./ads1299.h   ****  * FCLK is the clock frequency of the ADS1299. This is normally 2.048 MHz.
 214:./ads1299.h   ****  */
 215:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_PULSE_FCLK_DIV_2_21		0		///< Calibration signal pulsed at FCLK/2^21
 216:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_PULSE_FCLK_DIV_2_20		1		///< Calibration signal pulsed at FCLK/2^20
 217:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_DC						3		///< Calibration signal is not pulsed.
 218:./ads1299.h   **** 
 219:./ads1299.h   **** 
 220:./ads1299.h   **** /**
 221:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG2.CAL_AMP0 (calibration signal amplitude).
 222:./ads1299.h   ****  */
 223:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_AMP_VREF_DIV_2_4_MV		(0<<2)		///< Calibration signal amplitude is 1
 224:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_AMP_2VREF_DIV_2_4_MV	(1<<2)		///< Calibration signal amplitude is 2
 225:./ads1299.h   **** 
 226:./ads1299.h   **** /**
 227:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG2.INT_CAL (calibration signal source).
 228:./ads1299.h   ****  */
 229:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_EXT						(0<<4)		///< Calibration signal is driven externally.
 230:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_CAL_INT						(1<<4)		///< Calibration signal is driven internally.
 231:./ads1299.h   **** 
 232:./ads1299.h   **** /**
 233:./ads1299.h   ****  *  \brief Combined value of reserved bits in CONFIG2 register.
 234:./ads1299.h   ****  *
 235:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 41, for more information.
 236:./ads1299.h   ****  */
 237:./ads1299.h   **** #define	ADS1299_REG_CONFIG2_RESERVED_VALUE				(6<<5)
 238:./ads1299.h   **** 
 239:./ads1299.h   **** 
 240:./ads1299.h   **** /* CONFIG3 REGISTER *******************************************************************************
 241:./ads1299.h   **** 
 242:./ads1299.h   **** /**
 243:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG3.PD_REFBUF (internal voltage reference buffer enable/dis
 244:./ads1299.h   ****  *
 245:./ads1299.h   ****  * Note that disabling the buffer for the internal voltage reference requires that a reference volt
 246:./ads1299.h   ****  * must be externally applied on VREFP for proper operation. This is not related to the reference E
 247:./ads1299.h   ****  * buffer, which is an external op-amp on the PCB. Brainboard does not apply a voltage to VREFP, an
 248:./ads1299.h   ****  * the buffer must be enabled.
 249:./ads1299.h   ****  */
 250:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_REFBUF_DISABLED			(0<<7)
 251:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_REFBUF_ENABLED			(1<<7)
 252:./ads1299.h   **** 
 253:./ads1299.h   **** /**
 254:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG3.BIAS_MEAS (enable or disable bias measurement through B
 255:./ads1299.h   ****  */
 256:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIAS_MEAS_DISABLED			(0<<4)
 257:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIAS_MEAS_ENABLED			(1<<4)
 258:./ads1299.h   **** 
 259:./ads1299.h   **** /**
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 6


 260:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG3.BIASREF_INT (bias reference internally or externally ge
 261:./ads1299.h   ****  */
 262:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIASREF_EXT					(0<<3)
 263:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIASREF_INT					(1<<3)
 264:./ads1299.h   **** 
 265:./ads1299.h   **** /**
 266:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG3.PD_BIAS (power-down or enable bias buffer amplifier).
 267:./ads1299.h   ****  */
 268:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIASBUF_DISABLED			(0<<2)
 269:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIASBUF_ENABLED				(1<<2)
 270:./ads1299.h   **** 
 271:./ads1299.h   **** /**
 272:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG3.BIAS_LOFF_SENS (detection of bias lead-off en/disable).
 273:./ads1299.h   ****  */
 274:./ads1299.h   **** #define	ADS1299_REG_CONFIG3_BIAS_LOFF_SENSE_DISABLED	(0<<1)
 275:./ads1299.h   **** #define ADS1299_REG_CONFIG3_BIAS_LOFF_SENSE_ENABLED		(1<<1)
 276:./ads1299.h   **** 
 277:./ads1299.h   **** /**
 278:./ads1299.h   ****  *  \brief Combined value of reserved bits in CONFIG3 register.
 279:./ads1299.h   ****  *
 280:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 42, for more information.
 281:./ads1299.h   ****  */
 282:./ads1299.h   **** #define ADS1299_REG_CONFIG3_RESERVED_VALUE				(3<<5)
 283:./ads1299.h   **** 
 284:./ads1299.h   **** /* CONFIG4 REGISTER *******************************************************************************
 285:./ads1299.h   **** 
 286:./ads1299.h   **** /**
 287:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG4.SINGLE_SHOT (single-shot or continuous conversion setti
 288:./ads1299.h   ****  *
 289:./ads1299.h   ****  * This can more easily be set with the RDATAC/SDATAC opcodes.
 290:./ads1299.h   ****  */
 291:./ads1299.h   **** #define ADS1299_REG_CONFIG4_CONTINUOUS_CONVERSION_MODE		(0<<3)
 292:./ads1299.h   **** #define ADS1299_REG_CONFIG4_SINGLE_SHOT_MODE				(1<<3)
 293:./ads1299.h   **** 
 294:./ads1299.h   **** /**
 295:./ads1299.h   ****  *  \brief Bit mask definitions for CONFIG4.PD_LOFF_COMP (power-down lead-off comparators).
 296:./ads1299.h   ****  *
 297:./ads1299.h   ****  */
 298:./ads1299.h   **** #define ADS1299_REG_CONFIG4_LEAD_OFF_DISABLED				(0<<1)
 299:./ads1299.h   **** #define ADS1299_REG_CONFIG4_LEAD_OFF_ENABLED				(1<<1)
 300:./ads1299.h   **** 
 301:./ads1299.h   **** /**
 302:./ads1299.h   ****  *  \brief Combined value of reserved bits in CONFIG4 register.
 303:./ads1299.h   ****  *
 304:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 47, for more information.
 305:./ads1299.h   ****  */
 306:./ads1299.h   **** #define ADS1299_REG_CONFIG4_RESERVED_VALUE		0
 307:./ads1299.h   **** 
 308:./ads1299.h   **** /* LOFF REGISTER **********************************************************************************
 309:./ads1299.h   **** 
 310:./ads1299.h   **** /**
 311:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF.COMP_TH (lead-off comparator threshold).
 312:./ads1299.h   ****  *
 313:./ads1299.h   ****  * Definition names are for the positive side (LOFFP). The corresponding LOFFN thresholds
 314:./ads1299.h   ****  * are the difference between these thresholds and 100%. Default value is _95_PERCENT.
 315:./ads1299.h   ****  */
 316:./ads1299.h   **** #define	ADS1299_REG_LOFF_95_PERCENT					(0<<5)
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 7


 317:./ads1299.h   **** #define	ADS1299_REG_LOFF_92_5_PERCENT				(1<<5)
 318:./ads1299.h   **** #define	ADS1299_REG_LOFF_90_PERCENT					(2<<5)
 319:./ads1299.h   **** #define	ADS1299_REG_LOFF_87_5_PERCENT				(3<<5)
 320:./ads1299.h   **** #define	ADS1299_REG_LOFF_85_PERCENT					(4<<5)
 321:./ads1299.h   **** #define	ADS1299_REG_LOFF_80_PERCENT					(5<<5)
 322:./ads1299.h   **** #define	ADS1299_REG_LOFF_75_PERCENT					(6<<5)
 323:./ads1299.h   **** #define	ADS1299_REG_LOFF_70_PERCENT					(7<<5)	
 324:./ads1299.h   **** 
 325:./ads1299.h   **** /**
 326:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF.ILEAD_OFF (lead-off current magnitude).
 327:./ads1299.h   ****  *
 328:./ads1299.h   ****  * This should be as small as possible for continuous lead-off detection, so as not to noticeably a
 329:./ads1299.h   ****  * the acquired signal. Default is _6_NA.
 330:./ads1299.h   ****  */
 331:./ads1299.h   **** #define	ADS1299_REG_LOFF_6_NA						(0<<2)			///< 6 nA lead-off current.
 332:./ads1299.h   **** #define	ADS1299_REG_LOFF_24_NA						(1<<2)			///< 24 nA lead-off current.
 333:./ads1299.h   **** #define	ADS1299_REG_LOFF_6_UA						(2<<2)			///< 6 uA lead-off current.
 334:./ads1299.h   **** #define	ADS1299_REG_LOFF_24_UA						(3<<2)			///< 24 uA lead-off current.					
 335:./ads1299.h   **** 
 336:./ads1299.h   **** /**
 337:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF.FLEAD_OFF (lead-off current frequency).
 338:./ads1299.h   ****  *
 339:./ads1299.h   ****  * This should be as large as possible for continuous AC lead-off detection to ensure that it is ou
 340:./ads1299.h   ****  * of the EEG frequency band (approx. 0-100 Hz for most applications). The excitation signal can th
 341:./ads1299.h   ****  * be filtered out of the acquired overall signal, and its voltage amplitude measured in order to d
 342:./ads1299.h   ****  * the electrode impedance.
 343:./ads1299.h   ****  * FCLK is the clock frequency of the ADS1299. This is normally 2.048 MHz.
 344:./ads1299.h   ****  * FDR is the output data rate. With the default clock, this must be at least 1 kHz in order to use
 345:./ads1299.h   ****  * continuous AC impedance monitoring, since the excitation frequency of FDR/4 = 250 Hz is the lowe
 346:./ads1299.h   ****  * possible frequency outside of the EEG band. If only a specific band is needed and it is lower th
 347:./ads1299.h   ****  * 62.5 Hz or 125 Hz, the 250/500 Hz settings may be used.
 348:./ads1299.h   ****  */
 349:./ads1299.h   **** #define	ADS1299_REG_LOFF_DC_LEAD_OFF				0		///< Lead-off current is at DC.
 350:./ads1299.h   **** #define	ADS1299_REG_LOFF_AC_LEAD_OFF_FCLK_DIV_2_18	1		///< Lead-off current is at FCLK/2^18, or 7.8
 351:./ads1299.h   **** #define	ADS1299_REG_LOFF_AC_LEAD_OFF_FCLK_DIV_2_16	2		///< Lead-off current is at FCLK/2^16, or 31.
 352:./ads1299.h   **** #define	ADS1299_REG_LOFF_AC_LEAD_OFF_FDR_DIV_4		3		///< Lead-off current is at FDR/4.
 353:./ads1299.h   **** 
 354:./ads1299.h   **** /**
 355:./ads1299.h   ****  *  \brief Combined value of reserved bits in LOFF register.
 356:./ads1299.h   ****  *
 357:./ads1299.h   ****  */
 358:./ads1299.h   **** #define ADS1299_REG_LOFF_RESERVED_VALUE				0
 359:./ads1299.h   **** 
 360:./ads1299.h   **** /* CHnSET REGISTERS *******************************************************************************
 361:./ads1299.h   **** 
 362:./ads1299.h   **** /**
 363:./ads1299.h   ****  *  \brief Bit mask definitions for CHnSET.PD (channel power-down).
 364:./ads1299.h   ****  */
 365:./ads1299.h   **** #define	ADS1299_REG_CHNSET_CHANNEL_ON			(0<<7)
 366:./ads1299.h   **** #define	ADS1299_REG_CHNSET_CHANNEL_OFF			(1<<7)
 367:./ads1299.h   **** 
 368:./ads1299.h   **** /**
 369:./ads1299.h   ****  *  \brief Bit mask definitions for CHnSET.GAIN (channel PGA gain).
 370:./ads1299.h   ****  *
 371:./ads1299.h   ****  * Take care to ensure that the gain is appropriate for the common-mode level of the device inputs.
 372:./ads1299.h   ****  * Higher gain settings have lower input-referred noise.
 373:./ads1299.h   ****  * Consult the ADS1299 datasheet, pages 6-7 and 19-20, for more information.
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 8


 374:./ads1299.h   ****  */
 375:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_1				(0<<4)			///< PGA gain = 1.
 376:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_2				(1<<4)			///< PGA gain = 2.
 377:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_4				(2<<4)			///< PGA gain = 4.
 378:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_6				(3<<4)			///< PGA gain = 6.
 379:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_8				(4<<4)			///< PGA gain = 8.
 380:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_12				(5<<4)			///< PGA gain = 12.
 381:./ads1299.h   **** #define	ADS1299_REG_CHNSET_GAIN_24				(6<<4)			///< PGA gain = 24.
 382:./ads1299.h   **** 
 383:./ads1299.h   **** /**
 384:./ads1299.h   ****  *  \brief Bit mask definitions for CHnSET.SRB2 (channel internal connection to SRB2 pin).
 385:./ads1299.h   ****  */
 386:./ads1299.h   **** #define	ADS1299_REG_CHNSET_SRB2_DISCONNECTED	(0<<3)
 387:./ads1299.h   **** #define	ADS1299_REG_CHNSET_SRB2_CONNECTED		(1<<3)
 388:./ads1299.h   **** 
 389:./ads1299.h   **** /**
 390:./ads1299.h   ****  *  \brief Bit mask definitions for CHnSET.MUX (channel mux setting).
 391:./ads1299.h   ****  *
 392:./ads1299.h   ****  * Controls the channel multiplexing on the ADS1299.
 393:./ads1299.h   ****  * Consult the ADS1299 datasheet, pages 16-17, for more information.
 394:./ads1299.h   ****  */
 395:./ads1299.h   **** #define	ADS1299_REG_CHNSET_NORMAL_ELECTRODE		0			///< Channel is connected to the corresponding pos
 396:./ads1299.h   **** #define	ADS1299_REG_CHNSET_INPUT_SHORTED		1			///< Channel inputs are shorted together. Used for of
 397:./ads1299.h   **** #define	ADS1299_REG_CHNSET_BIAS_MEASUREMENT		2			///< Used with CONFIG3.BIAS_MEAS for bias measurem
 398:./ads1299.h   **** #define	ADS1299_REG_CHNSET_MVDD_SUPPLY			3			///< Used for measuring analog and digital supplies. S
 399:./ads1299.h   **** #define	ADS1299_REG_CHNSET_TEMPERATURE_SENSOR	4			///< Measures device temperature. See ADS1299 dat
 400:./ads1299.h   **** #define	ADS1299_REG_CHNSET_TEST_SIGNAL			5			///< Measures calibration signal. See ADS1299 datashee
 401:./ads1299.h   **** #define	ADS1299_REG_CHNSET_BIAS_DRIVE_P			6			///< Connects positive side of channel to bias drive 
 402:./ads1299.h   **** #define	ADS1299_REG_CHNSET_BIAS_DRIVE_N			7 			///< Connects negative side of channel to bias drive
 403:./ads1299.h   **** 
 404:./ads1299.h   **** /**
 405:./ads1299.h   ****  *  \brief Combined value of reserved bits in CHnSET registers.
 406:./ads1299.h   ****  *
 407:./ads1299.h   ****  */
 408:./ads1299.h   **** #define ADS1299_REG_CHNSET_RESERVED_VALUE		0
 409:./ads1299.h   **** 
 410:./ads1299.h   **** /* BIAS_SENSP REGISTER ****************************************************************************
 411:./ads1299.h   **** 
 412:./ads1299.h   **** /**
 413:./ads1299.h   ****  *  \brief Bit mask definitions for BIAS_SENSP register (read-only).
 414:./ads1299.h   ****  *
 415:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 44, for more information.
 416:./ads1299.h   ****  */
 417:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP8	(1<<7)
 418:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP7	(1<<6)
 419:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP6	(1<<5)
 420:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP5	(1<<4)
 421:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP4	(1<<3)
 422:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP3	(1<<2)
 423:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP2	(1<<1)
 424:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSP_BIASP1	(1<<0)
 425:./ads1299.h   **** 
 426:./ads1299.h   **** 
 427:./ads1299.h   **** /* BIAS_SENSN REGISTER ****************************************************************************
 428:./ads1299.h   **** 
 429:./ads1299.h   **** /**
 430:./ads1299.h   ****  *  \brief Bit mask definitions for BIAS_SENSN register (read-only).
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 9


 431:./ads1299.h   ****  *
 432:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 44, for more information.
 433:./ads1299.h   ****  */
 434:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN8	(1<<7)
 435:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN7	(1<<6)
 436:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN6	(1<<5)
 437:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN5	(1<<4)
 438:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN4	(1<<3)
 439:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN3	(1<<2)
 440:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN2	(1<<1)
 441:./ads1299.h   **** #define ADS1299_REG_BIAS_SENSN_BIASN1	(1<<0)
 442:./ads1299.h   **** 
 443:./ads1299.h   **** /* LOFF_SENSP REGISTER ****************************************************************************
 444:./ads1299.h   **** 
 445:./ads1299.h   **** /**
 446:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF_SENSP register (read-only).
 447:./ads1299.h   ****  *
 448:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 45, for more information.
 449:./ads1299.h   ****  */
 450:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP8	(1<<7)
 451:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP7	(1<<6)
 452:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP6	(1<<5)
 453:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP5	(1<<4)
 454:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP4	(1<<3)
 455:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP3	(1<<2)
 456:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP2	(1<<1)
 457:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSP_LOFFP1	(1<<0)
 458:./ads1299.h   **** 
 459:./ads1299.h   **** 
 460:./ads1299.h   **** /* LOFF_SENSN REGISTER ****************************************************************************
 461:./ads1299.h   **** 
 462:./ads1299.h   **** /**
 463:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF_SENSN register (read-only).
 464:./ads1299.h   ****  *
 465:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 45, for more information.
 466:./ads1299.h   ****  */
 467:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN8	(1<<7)
 468:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN7	(1<<6)
 469:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN6	(1<<5)
 470:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN5	(1<<4)
 471:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN4	(1<<3)
 472:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN3	(1<<2)
 473:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN2	(1<<1)
 474:./ads1299.h   **** #define ADS1299_REG_LOFF_SENSN_LOFFN1	(1<<0)
 475:./ads1299.h   **** 
 476:./ads1299.h   **** /* LOFF_FLIP REGISTER *****************************************************************************
 477:./ads1299.h   **** 
 478:./ads1299.h   **** /**
 479:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF_FLIP register (read-only).
 480:./ads1299.h   ****  *
 481:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 45, for more information.
 482:./ads1299.h   ****  */
 483:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP8	(1<<7)
 484:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP7	(1<<6)
 485:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP6	(1<<5)
 486:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP5	(1<<4)
 487:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP4	(1<<3)
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 10


 488:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP3	(1<<2)
 489:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP2	(1<<1)
 490:./ads1299.h   **** #define ADS1299_REG_LOFF_FLIP_LOFF_FLIP1	(1<<0)
 491:./ads1299.h   **** 
 492:./ads1299.h   **** 
 493:./ads1299.h   **** /* LOFF_STATP REGISTER ****************************************************************************
 494:./ads1299.h   **** 
 495:./ads1299.h   **** /**
 496:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF_STATP register (read-only).
 497:./ads1299.h   ****  *
 498:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 45, for more information.
 499:./ads1299.h   ****  */
 500:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN8P_OFF	(1<<7)
 501:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN7P_OFF	(1<<6)
 502:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN6P_OFF	(1<<5)
 503:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN5P_OFF	(1<<4)
 504:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN4P_OFF	(1<<3)
 505:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN3P_OFF	(1<<2)
 506:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN2P_OFF	(1<<1)
 507:./ads1299.h   **** #define ADS1299_REG_LOFF_STATP_IN1P_OFF	(1<<0)
 508:./ads1299.h   **** 
 509:./ads1299.h   **** /* LOFF_STATN REGISTER ****************************************************************************
 510:./ads1299.h   **** 
 511:./ads1299.h   **** /**
 512:./ads1299.h   ****  *  \brief Bit mask definitions for LOFF_STATN register (read-only).
 513:./ads1299.h   ****  *
 514:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 45, for more information.
 515:./ads1299.h   ****  */
 516:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN8N_OFF	(1<<7)
 517:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN7N_OFF	(1<<6)
 518:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN6N_OFF	(1<<5)
 519:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN5N_OFF	(1<<4)
 520:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN4N_OFF	(1<<3)
 521:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN3N_OFF	(1<<2)
 522:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN2N_OFF	(1<<1)
 523:./ads1299.h   **** #define ADS1299_REG_LOFF_STATN_IN1N_OFF	(1<<0)
 524:./ads1299.h   **** 
 525:./ads1299.h   **** /* GPIO REGISTER **********************************************************************************
 526:./ads1299.h   **** 
 527:./ads1299.h   **** /**
 528:./ads1299.h   ****  *  \brief Bit mask definitions for GPIO.GPIODn (GPIO direction bits).
 529:./ads1299.h   ****  *
 530:./ads1299.h   ****  * The ADS1299 has 4 GPIO pins that can be manipulated via the SPI bus if there are not enough
 531:./ads1299.h   ****  * GPIO pins available on the host.
 532:./ads1299.h   ****  * GPIOD[4:1] controls the logic levels on GPIO pins 4:1.
 533:./ads1299.h   ****  *
 534:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 46, for more information.
 535:./ads1299.h   ****  */
 536:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD4_LOW			(0<<7)
 537:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD4_HIGH		(1<<7)
 538:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD3_LOW			(0<<6)
 539:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD3_HIGH		(1<<6)
 540:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD2_LOW			(0<<5)
 541:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD2_HIGH		(1<<5)
 542:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD1_LOW			(0<<4)
 543:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOD1_HIGH		(1<<4)
 544:./ads1299.h   **** 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 11


 545:./ads1299.h   **** /**
 546:./ads1299.h   ****  *  \brief Bit mask definitions for GPIO.GPIOCn (GPIO level).
 547:./ads1299.h   ****  *
 548:./ads1299.h   ****  * The ADS1299 has 4 GPIO pins that can be manipulated via the SPI bus if there are not enough
 549:./ads1299.h   ****  * GPIO pins available on the host.
 550:./ads1299.h   ****  * GPIOC[4:1] controls the pin direction on GPIO pins 4:1.
 551:./ads1299.h   ****  *
 552:./ads1299.h   ****  * Consult the ADS1299 datasheet, page 46, for more information.
 553:./ads1299.h   ****  */
 554:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC4_OUTPUT		(0<<3)
 555:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC4_INPUT		(1<<3)
 556:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC3_OUTPUT		(0<<2)
 557:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC3_INPUT		(1<<2)
 558:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC2_OUTPUT		(0<<1)
 559:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC2_INPUT		(1<<1)
 560:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC1_OUTPUT		(0<<0)
 561:./ads1299.h   **** #define ADS1299_REG_GPIO_GPIOC1_INPUT		(1<<0)
 562:./ads1299.h   **** 
 563:./ads1299.h   **** /**
 564:./ads1299.h   ****  *  \brief Combined value of reserved bits in GPIO register.
 565:./ads1299.h   ****  *
 566:./ads1299.h   ****  */
 567:./ads1299.h   **** #define ADS1299_REG_GPIO_RESERVED_VALUE				0
 568:./ads1299.h   **** 
 569:./ads1299.h   **** /* MISC1 REGISTER *********************************************************************************
 570:./ads1299.h   **** 
 571:./ads1299.h   **** /**
 572:./ads1299.h   ****  *  \brief Bit mask definitions for MISC1.SRB1 (SRB1 internal connection).
 573:./ads1299.h   ****  */
 574:./ads1299.h   **** #define	ADS1299_REG_MISC1_SRB1_OFF		(0<<5)			///< Stim/ref/bias 1 turned off.
 575:./ads1299.h   **** #define	ADS1299_REG_MISC1_SRB1_ON		(1<<5)			///< Stim/ref/bias 1 connected to all channel inverting
 576:./ads1299.h   **** 
 577:./ads1299.h   **** /**
 578:./ads1299.h   ****  *  \brief Combined value of reserved bits in MISC1 register.
 579:./ads1299.h   ****  *
 580:./ads1299.h   ****  */
 581:./ads1299.h   **** #define ADS1299_REG_MISC1_RESERVED_VALUE				0
 582:./ads1299.h   **** 
 583:./ads1299.h   **** 
 584:./ads1299.h   **** /* MISC2 REGISTER *********************************************************************************
 585:./ads1299.h   **** 
 586:./ads1299.h   **** /**
 587:./ads1299.h   ****  *  \brief Combined value of reserved bits in MISC2 register.
 588:./ads1299.h   ****  *
 589:./ads1299.h   ****  * MISC2 don't do nothin' right now!
 590:./ads1299.h   ****  * Consult the ADS1299 user's guide, page 46, for more information.
 591:./ads1299.h   ****  */
 592:./ads1299.h   **** #define ADS1299_REG_MISC2_RESERVED_VALUE				0
 593:./ads1299.h   **** 
 594:./ads1299.h   **** 
 595:./ads1299.h   **** /**************************************************************************************************
 596:./ads1299.h   **** *               Prototypes                                                                         
 597:./ads1299.h   **** ***************************************************************************************************
 598:./ads1299.h   **** 
 599:./ads1299.h   **** /**
 600:./ads1299.h   ****  *	\brief Initialize the ADS1299.
 601:./ads1299.h   ****  *
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 12


 602:./ads1299.h   ****  * This function performs the power-on reset and initialization procedure documented on page 58 of 
 603:./ads1299.h   ****  * ADS1299 datasheet, up to "Send SDATAC Command."
 604:./ads1299.h   ****  *
 605:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 606:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 607:./ads1299.h   ****  * \param init_regs	Nonzero if initializing registers to firmware default settings; 0 otherwise.
 608:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 609:./ads1299.h   ****  */
 610:./ads1299.h   **** ads1299_error_t ads1299_device_init(uint8_t, uint8_t);
 611:./ads1299.h   **** 
 612:./ads1299.h   **** /**
 613:./ads1299.h   ****  *	\brief Read a single register from the ADS1299.
 614:./ads1299.h   ****  *
 615:./ads1299.h   ****  * This function sends the RREG opcode, logical OR'd with the specified register address, and
 616:./ads1299.h   ****  * writes the obtained register value to a variable. This command will have no effect if the 
 617:./ads1299.h   ****  * device is in continuous read mode.
 618:./ads1299.h   ****  *
 619:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 620:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 621:./ads1299.h   ****  * \param reg_addr The register address of the register to be read.
 622:./ads1299.h   ****  * \param read_reg_val_ptr Pointer to the variable to store the read register value.
 623:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 624:./ads1299.h   ****  */
 625:./ads1299.h   **** ads1299_error_t ads1299_rreg(uint8_t, uint8_t, uint8_t*);
 626:./ads1299.h   **** 
 627:./ads1299.h   **** /**
 628:./ads1299.h   ****  *	\brief Write a single register on the ADS1299.
 629:./ads1299.h   ****  *
 630:./ads1299.h   ****  * This function sends the WREG opcode, logical OR'd with the specified register address, and
 631:./ads1299.h   ****  * then writes the specified value to that register. This command will have no effect if the 
 632:./ads1299.h   ****  * device is in continuous read mode.
 633:./ads1299.h   ****  *
 634:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 635:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 636:./ads1299.h   ****  * \param reg_addr The register address of the register to be written.
 637:./ads1299.h   ****  * \param reg_val_to_write The value to be written to the specified register.
 638:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 639:./ads1299.h   ****  */
 640:./ads1299.h   **** ads1299_error_t ads1299_wreg(uint8_t, uint8_t, uint8_t);
 641:./ads1299.h   **** 
 642:./ads1299.h   **** /**
 643:./ads1299.h   ****  *	\brief Read a single 24-bit data sample for each enabled channel.
 644:./ads1299.h   ****  *
 645:./ads1299.h   ****  * This function reads back the 24-bit status word and 8 channels of 24-bit data.
 646:./ads1299.h   ****  * These 24-bit values are stored right-aligned in 32-bit integers.
 647:./ads1299.h   ****  *
 648:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 649:./ads1299.h   ****  * \param sample_idx The index within each channel array of the sample to be acquired.
 650:./ads1299.h   ****  * \param packet_ptr Pointer to EEG data packet structure.
 651:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 652:./ads1299.h   ****  */
 653:./ads1299.h   **** ads1299_error_t ads1299_rdata32_packet(uint8_t, volatile uint32_t, bboard_data32bit_packet_t*);
 654:./ads1299.h   **** 
 655:./ads1299.h   **** /**
 656:./ads1299.h   ****  *	\brief Read a single 24-bit data sample for each enabled channel.
 657:./ads1299.h   ****  *
 658:./ads1299.h   ****  * This function reads back the 24-bit status word and 8 channels of 24-bit data.
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 13


 659:./ads1299.h   ****  * These 24-bit values are stored right-aligned in 32-bit integers.
 660:./ads1299.h   ****  *
 661:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 662:./ads1299.h   ****  * \param sample_idx The index within each channel array of the sample to be acquired.
 663:./ads1299.h   ****  * \param status ADS1299 status word.
 664:./ads1299.h   ****  * \param data_array Array of 32-bit signed ints (dsp32_t from the ASF is equivalent) for storing E
 665:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 666:./ads1299.h   ****  */
 667:./ads1299.h   **** ads1299_error_t ads1299_rdata32_generic(uint8_t, volatile uint32_t, volatile uint32_t, volatile int
 668:./ads1299.h   **** 
 669:./ads1299.h   **** /**
 670:./ads1299.h   ****  *	\brief Read a single 24-bit data sample for each enabled channel into a specified packet structu
 671:./ads1299.h   ****  *
 672:./ads1299.h   ****  * This function reads back the 24-bit status word and 8 channels of 24-bit data.
 673:./ads1299.h   ****  * These 24-bit values are stored in two arrays: one 3-byte array for the status
 674:./ads1299.h   ****  * word, and a 24-byte array for the data.
 675:./ads1299.h   ****  *
 676:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 677:./ads1299.h   ****  * \param sample_idx The index within each channel array of the sample to be acquired.
 678:./ads1299.h   ****  * \param packet_ptr Pointer to EEG data packet structure.
 679:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 680:./ads1299.h   ****  */
 681:./ads1299.h   **** ads1299_error_t ads1299_rdata24_packet(uint8_t, volatile uint32_t, bboard_data24bit_packet_t*);
 682:./ads1299.h   **** 
 683:./ads1299.h   **** /**
 684:./ads1299.h   ****  *	\brief Read a single 24-bit data sample for each enabled channel into an array of channels.
 685:./ads1299.h   ****  *
 686:./ads1299.h   ****  * This function reads back the 24-bit status word and 8 channels of 24-bit data.
 687:./ads1299.h   ****  * These 24-bit values are stored in two arrays: one 3-byte array for the status
 688:./ads1299.h   ****  * word, and a 24-byte array for the data.
 689:./ads1299.h   ****  *
 690:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 691:./ads1299.h   ****  * \param sample_idx The index within each channel array of the sample to be acquired.
 692:./ads1299.h   ****  * \param status_array Array of 3 bytes representing the 24-bit status word.
 693:./ads1299.h   ****  * \param data_array Array of dimensions [BUFFERSIZE][EEG_CHANNELS][3] representing EEG data.
 694:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 695:./ads1299.h   ****  */
 696:./ads1299.h   **** ads1299_error_t ads1299_rdata24_generic(uint8_t, volatile uint32_t, volatile uint8_t[], volatile ui
 697:./ads1299.h   **** 
 698:./ads1299.h   **** /* INLINE FUNCTIONS *******************************************************************************
 699:./ads1299.h   **** 
 700:./ads1299.h   **** /**
 701:./ads1299.h   ****  *	\brief Send a single byte to the ADS1299 without manipulating chip select.
 702:./ads1299.h   ****  *
 703:./ads1299.h   ****  *	Use this function when multiple bytes need to be sent and you want the chip to remain selected
 704:./ads1299.h   ****  *	throughout the process.
 705:./ads1299.h   ****  *
 706:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 707:./ads1299.h   ****  * \param opcode The opcode to send.
 708:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 709:./ads1299.h   ****  */
 710:./ads1299.h   **** static inline ads1299_error_t ads1299_send_byte_no_cs(uint8_t opcode)
 711:./ads1299.h   **** {
 712:./ads1299.h   **** 	while(!spi_is_tx_ready(SPI_ADDRESS));
 713:./ads1299.h   **** 	spi_put(SPI_ADDRESS, opcode);
 714:./ads1299.h   **** 	while(!spi_is_tx_empty(SPI_ADDRESS));
 715:./ads1299.h   **** 	
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 14


 716:./ads1299.h   **** 	return ADS1299_STATUS_OK;
 717:./ads1299.h   **** }
 718:./ads1299.h   **** 
 719:./ads1299.h   **** /**
 720:./ads1299.h   ****  *	\brief Send a single opcode to the ADS1299.
 721:./ads1299.h   ****  *
 722:./ads1299.h   ****  * This function sends the specified byte to the ADS1299. Chip select is cleared (activated) and se
 723:./ads1299.h   ****  * (inactivated) within the function.
 724:./ads1299.h   ****  *
 725:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 726:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 727:./ads1299.h   ****  * \param opcode The opcode to send.
 728:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 729:./ads1299.h   ****  */
 730:./ads1299.h   **** static inline ads1299_error_t ads1299_send_byte(uint8_t chip_select, uint8_t opcode)
 731:./ads1299.h   **** {
  27              		.loc 1 731 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 0400     		movs	r4, r0
  39 0004 0D00     		movs	r5, r1
 732:./ads1299.h   **** 	//#if UC3
 733:./ads1299.h   **** 	spi_selectChip(SPI_ADDRESS, chip_select);
  40              		.loc 1 733 0
  41 0006 0100     		movs	r1, r0
  42              	.LVL1:
  43 0008 0A48     		ldr	r0, .L4
  44              	.LVL2:
  45 000a FFF7FEFF 		bl	spi_selectChip
  46              	.LVL3:
  47              	.L2:
  48              	.LBB19:
  49              	.LBB20:
  50              	.LBB21:
  51              	.LBB22:
  52              		.file 2 "./ads1299_spi_adapt.h"
   1:./ads1299_spi_adapt.h **** /* ========================================
   2:./ads1299_spi_adapt.h ****  *
   3:./ads1299_spi_adapt.h ****  * Copyright YOUR COMPANY, THE YEAR
   4:./ads1299_spi_adapt.h ****  * All Rights Reserved
   5:./ads1299_spi_adapt.h ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:./ads1299_spi_adapt.h ****  *
   7:./ads1299_spi_adapt.h ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:./ads1299_spi_adapt.h ****  * WHICH IS THE PROPERTY OF your company.
   9:./ads1299_spi_adapt.h ****  *
  10:./ads1299_spi_adapt.h ****  * ========================================
  11:./ads1299_spi_adapt.h **** */
  12:./ads1299_spi_adapt.h **** 
  13:./ads1299_spi_adapt.h **** #ifndef _ADS1299_SPI_ADAPT_H_
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 15


  14:./ads1299_spi_adapt.h **** #define _ADS1299_SPI_ADAPT_H_
  15:./ads1299_spi_adapt.h **** #endif
  16:./ads1299_spi_adapt.h **** 
  17:./ads1299_spi_adapt.h **** /* [] END OF FILE */
  18:./ads1299_spi_adapt.h **** 
  19:./ads1299_spi_adapt.h **** #include <project.h>
  20:./ads1299_spi_adapt.h **** #include <comms.h>
  21:./ads1299_spi_adapt.h **** 
  22:./ads1299_spi_adapt.h **** uint8_t spi;
  23:./ads1299_spi_adapt.h **** #define SPI_ADDRESS (&spi)
  24:./ads1299_spi_adapt.h **** #define MAX_EEG_CHANNELS 8
  25:./ads1299_spi_adapt.h **** #define UC3 true
  26:./ads1299_spi_adapt.h **** 
  27:./ads1299_spi_adapt.h **** #define ADS1299_PIN_PWDN		1
  28:./ads1299_spi_adapt.h **** #define ADS1299_PIN_DRDY		2
  29:./ads1299_spi_adapt.h **** #define ADS1299_PIN_START		3
  30:./ads1299_spi_adapt.h **** #define ADS1299_PIN_RESET		4
  31:./ads1299_spi_adapt.h **** #define SPI_TIMEOUT             15000
  32:./ads1299_spi_adapt.h **** #define ERR_TIMEOUT             -3
  33:./ads1299_spi_adapt.h **** #define DSP_PREBUFFER_NB_SAMPLES    256	
  34:./ads1299_spi_adapt.h **** 
  35:./ads1299_spi_adapt.h **** void spi_put(volatile uint8_t *spi, uint8_t opcode);
  36:./ads1299_spi_adapt.h **** uint16_t spi_get(volatile uint8_t *spi);
  37:./ads1299_spi_adapt.h **** void spi_selectChip(volatile uint8_t *spi, uint8_t chip_select);
  38:./ads1299_spi_adapt.h **** void spi_unselectChip(volatile uint8_t *spi, uint8_t chip_select);
  39:./ads1299_spi_adapt.h **** void delay_s(int delay);
  40:./ads1299_spi_adapt.h **** void delay_ms(int delay);
  41:./ads1299_spi_adapt.h **** void delay_us(int delay);
  42:./ads1299_spi_adapt.h **** static inline uint8 spi_is_tx_ready(volatile uint8_t *spi){
  43:./ads1299_spi_adapt.h **** 	return (spi_ReadTxStatus() & spi_STS_SPI_IDLE) != 0;
  53              		.loc 2 43 0
  54 000e FFF7FEFF 		bl	spi_ReadTxStatus
  55              	.LVL4:
  56              	.LBE22:
  57              	.LBE21:
 712:./ads1299.h   **** 	spi_put(SPI_ADDRESS, opcode);
  58              		.loc 1 712 0
  59 0012 C306     		lsls	r3, r0, #27
  60 0014 FBD5     		bpl	.L2
 713:./ads1299.h   **** 	while(!spi_is_tx_empty(SPI_ADDRESS));
  61              		.loc 1 713 0
  62 0016 2900     		movs	r1, r5
  63 0018 0648     		ldr	r0, .L4
  64 001a FFF7FEFF 		bl	spi_put
  65              	.LVL5:
  66              	.L3:
  67              	.LBB23:
  68              	.LBB24:
  44:./ads1299_spi_adapt.h **** }
  45:./ads1299_spi_adapt.h **** static inline uint8 spi_is_rx_ready(volatile uint8_t *spi){
  46:./ads1299_spi_adapt.h **** 	return (spi_ReadRxStatus() & spi_STS_SPI_IDLE) != 0;
  47:./ads1299_spi_adapt.h **** }
  48:./ads1299_spi_adapt.h **** static inline uint8 spi_is_tx_empty(volatile uint8_t *spi)
  49:./ads1299_spi_adapt.h **** {
  50:./ads1299_spi_adapt.h **** 	return (spi_ReadTxStatus() & spi_STS_BYTE_COMPLETE) != 0; // spi_STS_SPI_IDLE
  69              		.loc 2 50 0
  70 001e FFF7FEFF 		bl	spi_ReadTxStatus
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 16


  71              	.LVL6:
  72              	.LBE24:
  73              	.LBE23:
 714:./ads1299.h   **** 	
  74              		.loc 1 714 0
  75 0022 0307     		lsls	r3, r0, #28
  76 0024 FBD5     		bpl	.L3
  77              	.LVL7:
  78              	.LBE20:
  79              	.LBE19:
 734:./ads1299.h   **** 	
 735:./ads1299.h   **** 	ads1299_send_byte_no_cs(opcode);
 736:./ads1299.h   **** 	
 737:./ads1299.h   **** 	spi_unselectChip(SPI_ADDRESS, chip_select);
  80              		.loc 1 737 0
  81 0026 2100     		movs	r1, r4
  82 0028 0248     		ldr	r0, .L4
  83 002a FFF7FEFF 		bl	spi_unselectChip
  84              	.LVL8:
 738:./ads1299.h   **** 	
 739:./ads1299.h   **** 	return ADS1299_STATUS_OK;
 740:./ads1299.h   **** 	//#else
 741:./ads1299.h   **** 	//#endif
 742:./ads1299.h   **** }
  85              		.loc 1 742 0
  86 002e 0020     		movs	r0, #0
  87              		@ sp needed
  88 0030 70BD     		pop	{r4, r5, r6, pc}
  89              	.L5:
  90 0032 C046     		.align	2
  91              	.L4:
  92 0034 00000000 		.word	spi
  93              		.cfi_endproc
  94              	.LFE40:
  95              		.size	ads1299_send_byte, .-ads1299_send_byte
  96              		.section	.text.updateLed,"ax",%progbits
  97              		.align	2
  98              		.global	updateLed
  99              		.code	16
 100              		.thumb_func
 101              		.type	updateLed, %function
 102              	updateLed:
 103              	.LFB53:
 104              		.file 3 "main.c"
   1:main.c        **** /* ========================================
   2:main.c        ****  *
   3:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   4:main.c        ****  * All Rights Reserved
   5:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:main.c        ****  *
   7:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:main.c        ****  * WHICH IS THE PROPERTY OF your company.
   9:main.c        ****  *
  10:main.c        ****  * ========================================
  11:main.c        **** */
  12:main.c        **** #include <project.h>
  13:main.c        **** #include <stdlib.h>
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 17


  14:main.c        **** #include <stdio.h>
  15:main.c        **** #include <math.h>
  16:main.c        **** #include <ads1299.h>
  17:main.c        **** 
  18:main.c        **** 
  19:main.c        **** #define NSUM 25
  20:main.c        **** 
  21:main.c        **** uint16 generated_number = 0xFFFF;
  22:main.c        **** uint16 generated_numberOld = 0xFFFF;
  23:main.c        **** volatile uint8_t spi_rx_ads1299_status[3];
  24:main.c        **** volatile uint8_t spi_rx_data_buffer[DSP_PREBUFFER_NB_SAMPLES][MAX_EEG_CHANNELS][3];
  25:main.c        **** int numberNotify;
  26:main.c        **** 
  27:main.c        **** /***************************************************************
  28:main.c        ****  * Function to update the LED state in the GATT database
  29:main.c        ****  **************************************************************/
  30:main.c        **** 
  31:main.c        **** 
  32:main.c        **** void updateLed()
  33:main.c        **** {
 105              		.loc 3 33 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 16
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109 0000 00B5     		push	{lr}
 110              		.cfi_def_cfa_offset 4
 111              		.cfi_offset 14, -4
 112 0002 85B0     		sub	sp, sp, #20
 113              		.cfi_def_cfa_offset 24
  34:main.c        ****     CYBLE_GATTS_HANDLE_VALUE_NTF_T 	tempHandle;
  35:main.c        ****    
  36:main.c        ****     uint8 red_State = !red_Read();
 114              		.loc 3 36 0
 115 0004 FFF7FEFF 		bl	red_Read
 116              	.LVL9:
 117 0008 4342     		rsbs	r3, r0, #0
 118 000a 4341     		adcs	r3, r3, r0
 119 000c 6A46     		mov	r2, sp
 120 000e D370     		strb	r3, [r2, #3]
 121 0010 0332     		adds	r2, r2, #3
  37:main.c        ****     
  38:main.c        ****     if(CyBle_GetState() != CYBLE_STATE_CONNECTED)
 122              		.loc 3 38 0
 123 0012 084B     		ldr	r3, .L9
 124 0014 1B78     		ldrb	r3, [r3]
 125 0016 022B     		cmp	r3, #2
 126 0018 0AD1     		bne	.L6
  39:main.c        ****         return;
  40:main.c        ****     
  41:main.c        ****     tempHandle.attrHandle = CYBLE_LEDCAPSENSE_LED_CHAR_HANDLE;
 127              		.loc 3 41 0
 128 001a 01A8     		add	r0, sp, #4
 129 001c 1033     		adds	r3, r3, #16
 130 001e 0381     		strh	r3, [r0, #8]
  42:main.c        ****   	tempHandle.value.val = (uint8 *) &red_State;
 131              		.loc 3 42 0
 132 0020 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 18


  43:main.c        ****     tempHandle.value.len = 1;
 133              		.loc 3 43 0
 134 0022 0123     		movs	r3, #1
 135 0024 8380     		strh	r3, [r0, #4]
  44:main.c        ****     CyBle_GattsWriteAttributeValue(&tempHandle,0,&cyBle_connHandle,CYBLE_GATT_DB_LOCALLY_INITIATED)
 136              		.loc 3 44 0
 137 0026 0023     		movs	r3, #0
 138 0028 034A     		ldr	r2, .L9+4
 139 002a 0021     		movs	r1, #0
 140 002c FFF7FEFF 		bl	CyBle_GattsWriteAttributeValue
 141              	.LVL10:
 142              	.L6:
  45:main.c        **** }
 143              		.loc 3 45 0
 144 0030 05B0     		add	sp, sp, #20
 145              		@ sp needed
 146 0032 00BD     		pop	{pc}
 147              	.L10:
 148              		.align	2
 149              	.L9:
 150 0034 00000000 		.word	cyBle_state
 151 0038 00000000 		.word	cyBle_connHandle
 152              		.cfi_endproc
 153              	.LFE53:
 154              		.size	updateLed, .-updateLed
 155              		.section	.text.updateNumber,"ax",%progbits
 156              		.align	2
 157              		.global	updateNumber
 158              		.code	16
 159              		.thumb_func
 160              		.type	updateNumber, %function
 161              	updateNumber:
 162              	.LFB54:
  46:main.c        **** 
  47:main.c        **** /***************************************************************
  48:main.c        ****  * Function to update the CapSesnse state in the GATT database
  49:main.c        ****  **************************************************************/
  50:main.c        **** void updateNumber()
  51:main.c        **** {
 163              		.loc 3 51 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 00B5     		push	{lr}
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 14, -4
 170 0002 85B0     		sub	sp, sp, #20
 171              		.cfi_def_cfa_offset 24
  52:main.c        ****     if(CyBle_GetState() != CYBLE_STATE_CONNECTED)
 172              		.loc 3 52 0
 173 0004 104B     		ldr	r3, .L15
 174 0006 1B78     		ldrb	r3, [r3]
 175 0008 022B     		cmp	r3, #2
 176 000a 1AD1     		bne	.L11
  53:main.c        ****         return;
  54:main.c        ****     
  55:main.c        **** 	CYBLE_GATTS_HANDLE_VALUE_NTF_T 	tempHandle;
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 19


  56:main.c        ****     
  57:main.c        ****     tempHandle.attrHandle = CYBLE_LEDCAPSENSE_CAPSENSE_CHAR_HANDLE;
 177              		.loc 3 57 0
 178 000c 01A8     		add	r0, sp, #4
 179 000e 1333     		adds	r3, r3, #19
 180 0010 0381     		strh	r3, [r0, #8]
  58:main.c        ****   	tempHandle.value.val = (uint8 *)&generated_number;
 181              		.loc 3 58 0
 182 0012 0E4B     		ldr	r3, .L15+4
 183 0014 0193     		str	r3, [sp, #4]
  59:main.c        ****     tempHandle.value.len = 2; 
 184              		.loc 3 59 0
 185 0016 0223     		movs	r3, #2
 186 0018 8380     		strh	r3, [r0, #4]
  60:main.c        ****     CyBle_GattsWriteAttributeValue(&tempHandle,0,&cyBle_connHandle,CYBLE_GATT_DB_LOCALLY_INITIATED 
 187              		.loc 3 60 0
 188 001a 0023     		movs	r3, #0
 189 001c 0C4A     		ldr	r2, .L15+8
 190 001e 0021     		movs	r1, #0
 191 0020 FFF7FEFF 		bl	CyBle_GattsWriteAttributeValue
 192              	.LVL11:
  61:main.c        ****     
  62:main.c        ****     /* send notification to client if notifications are enabled and finger location has changed */
  63:main.c        ****     //if (numberNotify && (generated_numberOld != generated_number))
  64:main.c        ****     if (numberNotify)
 193              		.loc 3 64 0
 194 0024 0B4B     		ldr	r3, .L15+12
 195 0026 1B68     		ldr	r3, [r3]
 196 0028 002B     		cmp	r3, #0
 197 002a 0AD0     		beq	.L11
  65:main.c        ****     {
  66:main.c        ****         CyBle_GattsNotification(cyBle_connHandle,&tempHandle);
 198              		.loc 3 66 0
 199 002c 084A     		ldr	r2, .L15+8
 200 002e 1378     		ldrb	r3, [r2]
 201 0030 5078     		ldrb	r0, [r2, #1]
 202 0032 0002     		lsls	r0, r0, #8
 203 0034 1843     		orrs	r0, r3
 204 0036 01A9     		add	r1, sp, #4
 205 0038 FFF7FEFF 		bl	CyBle_GattsNotification
 206              	.LVL12:
  67:main.c        ****         generated_numberOld = generated_number;
 207              		.loc 3 67 0
 208 003c 034B     		ldr	r3, .L15+4
 209 003e 1A88     		ldrh	r2, [r3]
 210 0040 5A80     		strh	r2, [r3, #2]
 211              	.L11:
  68:main.c        ****     }    
  69:main.c        **** }
 212              		.loc 3 69 0
 213 0042 05B0     		add	sp, sp, #20
 214              		@ sp needed
 215 0044 00BD     		pop	{pc}
 216              	.L16:
 217 0046 C046     		.align	2
 218              	.L15:
 219 0048 00000000 		.word	cyBle_state
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 20


 220 004c 00000000 		.word	.LANCHOR0
 221 0050 00000000 		.word	cyBle_connHandle
 222 0054 00000000 		.word	numberNotify
 223              		.cfi_endproc
 224              	.LFE54:
 225              		.size	updateNumber, .-updateNumber
 226              		.section	.text.BleCallBack,"ax",%progbits
 227              		.align	2
 228              		.global	BleCallBack
 229              		.code	16
 230              		.thumb_func
 231              		.type	BleCallBack, %function
 232              	BleCallBack:
 233              	.LFB55:
  70:main.c        **** 
  71:main.c        **** /***************************************************************
  72:main.c        ****  * Function to handle the BLE stack
  73:main.c        ****  **************************************************************/
  74:main.c        **** void BleCallBack(uint32 event, void* eventParam)
  75:main.c        **** {
 234              		.loc 3 75 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              	.LVL13:
 239 0000 70B5     		push	{r4, r5, r6, lr}
 240              		.cfi_def_cfa_offset 16
 241              		.cfi_offset 4, -16
 242              		.cfi_offset 5, -12
 243              		.cfi_offset 6, -8
 244              		.cfi_offset 14, -4
 245 0002 0C00     		movs	r4, r1
  76:main.c        ****     CYBLE_GATTS_WRITE_REQ_PARAM_T *wrReqParam;
  77:main.c        **** 
  78:main.c        ****     switch(event)
 246              		.loc 3 78 0
 247 0004 2828     		cmp	r0, #40
 248 0006 08D0     		beq	.L19
 249 0008 02D8     		bhi	.L20
 250 000a 0128     		cmp	r0, #1
 251 000c 05D0     		beq	.L19
 252 000e 43E0     		b	.L17
 253              	.L20:
 254 0010 4128     		cmp	r0, #65
 255 0012 0BD0     		beq	.L21
 256 0014 4C28     		cmp	r0, #76
 257 0016 10D0     		beq	.L22
 258 0018 3EE0     		b	.L17
 259              	.L19:
  79:main.c        ****     {
  80:main.c        ****         /* if there is a disconnect or the stack just turned on from a reset then start the adverti
  81:main.c        ****         case CYBLE_EVT_STACK_ON:
  82:main.c        ****         case CYBLE_EVT_GAP_DEVICE_DISCONNECTED:
  83:main.c        ****             numberNotify = 0;
 260              		.loc 3 83 0
 261 001a 0022     		movs	r2, #0
 262 001c 1F4B     		ldr	r3, .L24
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 21


 263 001e 1A60     		str	r2, [r3]
  84:main.c        ****             CyBle_GappStartAdvertisement(CYBLE_ADVERTISING_FAST);
 264              		.loc 3 84 0
 265 0020 0020     		movs	r0, #0
 266              	.LVL14:
 267 0022 FFF7FEFF 		bl	CyBle_GappStartAdvertisement
 268              	.LVL15:
  85:main.c        ****             pwm_Start();
 269              		.loc 3 85 0
 270 0026 FFF7FEFF 		bl	pwm_Start
 271              	.LVL16:
  86:main.c        ****         break;
 272              		.loc 3 86 0
 273 002a 35E0     		b	.L17
 274              	.LVL17:
 275              	.L21:
  87:main.c        ****         
  88:main.c        ****         /* when a connection is made, update the LED and Capsense states in the GATT database and s
  89:main.c        ****         case CYBLE_EVT_GATT_CONNECT_IND:
  90:main.c        ****             updateLed();
 276              		.loc 3 90 0
 277 002c FFF7FEFF 		bl	updateLed
 278              	.LVL18:
  91:main.c        ****             updateNumber();  
 279              		.loc 3 91 0
 280 0030 FFF7FEFF 		bl	updateNumber
 281              	.LVL19:
  92:main.c        ****             pwm_Stop();
 282              		.loc 3 92 0
 283 0034 FFF7FEFF 		bl	pwm_Stop
 284              	.LVL20:
  93:main.c        **** 		break;
 285              		.loc 3 93 0
 286 0038 2EE0     		b	.L17
 287              	.LVL21:
 288              	.L22:
  94:main.c        **** 
  95:main.c        ****         /* handle a write request */
  96:main.c        ****         case CYBLE_EVT_GATTS_WRITE_REQ:
  97:main.c        ****             wrReqParam = (CYBLE_GATTS_WRITE_REQ_PARAM_T *) eventParam;
  98:main.c        **** 			      
  99:main.c        ****             /* request write the LED value */
 100:main.c        ****             if(wrReqParam->handleValPair.attrHandle == CYBLE_LEDCAPSENSE_LED_CHAR_HANDLE)
 289              		.loc 3 100 0
 290 003a 8B89     		ldrh	r3, [r1, #12]
 291 003c 122B     		cmp	r3, #18
 292 003e 15D1     		bne	.L23
 101:main.c        ****             {
 102:main.c        ****                 /* only update the value and write the response if the requested write is allowed *
 103:main.c        ****                 if(CYBLE_GATT_ERR_NONE == CyBle_GattsWriteAttributeValue(&wrReqParam->handleValPair
 293              		.loc 3 103 0
 294 0040 081D     		adds	r0, r1, #4
 295              	.LVL22:
 296 0042 2E33     		adds	r3, r3, #46
 297 0044 164A     		ldr	r2, .L24+4
 298 0046 0021     		movs	r1, #0
 299              	.LVL23:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 22


 300 0048 FFF7FEFF 		bl	CyBle_GattsWriteAttributeValue
 301              	.LVL24:
 302 004c 0028     		cmp	r0, #0
 303 004e 0DD1     		bne	.L23
 104:main.c        ****                 {
 105:main.c        ****                     red_Write(!wrReqParam->handleValPair.value.val[0]);
 304              		.loc 3 105 0
 305 0050 6368     		ldr	r3, [r4, #4]
 306 0052 1B78     		ldrb	r3, [r3]
 307 0054 5842     		rsbs	r0, r3, #0
 308 0056 5841     		adcs	r0, r0, r3
 309 0058 C0B2     		uxtb	r0, r0
 310 005a FFF7FEFF 		bl	red_Write
 311              	.LVL25:
 106:main.c        ****                     CyBle_GattsWriteRsp(cyBle_connHandle);
 312              		.loc 3 106 0
 313 005e 104A     		ldr	r2, .L24+4
 314 0060 1378     		ldrb	r3, [r2]
 315 0062 5078     		ldrb	r0, [r2, #1]
 316 0064 0002     		lsls	r0, r0, #8
 317 0066 1843     		orrs	r0, r3
 318 0068 FFF7FEFF 		bl	CyBle_GattsWriteRsp
 319              	.LVL26:
 320              	.L23:
 107:main.c        ****                 }
 108:main.c        ****             }
 109:main.c        ****             
 110:main.c        ****             /* request to update the CapSense notification */
 111:main.c        ****             if(wrReqParam->handleValPair.attrHandle == CYBLE_LEDCAPSENSE_CAPSENSE_CAPSENSECCCD_DESC
 321              		.loc 3 111 0
 322 006c A389     		ldrh	r3, [r4, #12]
 323 006e 162B     		cmp	r3, #22
 324 0070 12D1     		bne	.L17
 112:main.c        ****             {
 113:main.c        ****                 CyBle_GattsWriteAttributeValue(&wrReqParam->handleValPair, 0, &cyBle_connHandle, CY
 325              		.loc 3 113 0
 326 0072 0B4D     		ldr	r5, .L24+4
 327 0074 201D     		adds	r0, r4, #4
 328 0076 2A33     		adds	r3, r3, #42
 329 0078 2A00     		movs	r2, r5
 330 007a 0021     		movs	r1, #0
 331 007c FFF7FEFF 		bl	CyBle_GattsWriteAttributeValue
 332              	.LVL27:
 114:main.c        ****                 numberNotify = wrReqParam->handleValPair.value.val[0] & 0x01;
 333              		.loc 3 114 0
 334 0080 6368     		ldr	r3, [r4, #4]
 335 0082 1B78     		ldrb	r3, [r3]
 336 0084 0122     		movs	r2, #1
 337 0086 1340     		ands	r3, r2
 338 0088 044A     		ldr	r2, .L24
 339 008a 1360     		str	r3, [r2]
 115:main.c        ****                 CyBle_GattsWriteRsp(cyBle_connHandle);
 340              		.loc 3 115 0
 341 008c 2B78     		ldrb	r3, [r5]
 342 008e 6878     		ldrb	r0, [r5, #1]
 343 0090 0002     		lsls	r0, r0, #8
 344 0092 1843     		orrs	r0, r3
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 23


 345 0094 FFF7FEFF 		bl	CyBle_GattsWriteRsp
 346              	.LVL28:
 347              	.L17:
 116:main.c        ****             }		
 117:main.c        **** 			break;  
 118:main.c        ****         
 119:main.c        ****         default:
 120:main.c        ****             break;
 121:main.c        ****     }
 122:main.c        **** } 
 348              		.loc 3 122 0
 349              		@ sp needed
 350              	.LVL29:
 351 0098 70BD     		pop	{r4, r5, r6, pc}
 352              	.L25:
 353 009a C046     		.align	2
 354              	.L24:
 355 009c 00000000 		.word	numberNotify
 356 00a0 00000000 		.word	cyBle_connHandle
 357              		.cfi_endproc
 358              	.LFE55:
 359              		.size	BleCallBack, .-BleCallBack
 360              		.section	.text.main,"ax",%progbits
 361              		.align	2
 362              		.global	main
 363              		.code	16
 364              		.thumb_func
 365              		.type	main, %function
 366              	main:
 367              	.LFB56:
 123:main.c        **** 
 124:main.c        **** /***************************************************************
 125:main.c        ****  * Main
 126:main.c        ****  **************************************************************/
 127:main.c        **** int main()
 128:main.c        **** {
 368              		.loc 3 128 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 70B5     		push	{r4, r5, r6, lr}
 373              		.cfi_def_cfa_offset 16
 374              		.cfi_offset 4, -16
 375              		.cfi_offset 5, -12
 376              		.cfi_offset 6, -8
 377              		.cfi_offset 14, -4
 129:main.c        ****     CyGlobalIntEnable; 
 378              		.loc 3 129 0
 379              		.syntax divided
 380              	@ 129 "main.c" 1
 381 0002 62B6     		CPSIE   i
 382              	@ 0 "" 2
 130:main.c        ****     
 131:main.c        ****     spi_Start();
 383              		.loc 3 131 0
 384              		.thumb
 385              		.syntax unified
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 24


 386 0004 FFF7FEFF 		bl	spi_Start
 387              	.LVL30:
 132:main.c        ****     Clock_1_Start();
 388              		.loc 3 132 0
 389 0008 FF20     		movs	r0, #255
 390 000a FFF7FEFF 		bl	Clock_1_StartEx
 391              	.LVL31:
 133:main.c        ****     Clock_2_Start();
 392              		.loc 3 133 0
 393 000e FF20     		movs	r0, #255
 394 0010 FFF7FEFF 		bl	Clock_2_StartEx
 395              	.LVL32:
 134:main.c        ****     /* Start BLE stack and register the callback function */
 135:main.c        ****     
 136:main.c        ****     CyBle_Start(BleCallBack);
 396              		.loc 3 136 0
 397 0014 3448     		ldr	r0, .L38
 398 0016 FFF7FEFF 		bl	CyBle_Start
 399              	.LVL33:
 137:main.c        **** 
 138:main.c        ****     ads1299_device_init(SPI_ADS1299_MAIN_CHIPNUM, 0);
 400              		.loc 3 138 0
 401 001a 0021     		movs	r1, #0
 402 001c 0020     		movs	r0, #0
 403 001e FFF7FEFF 		bl	ads1299_device_init
 404              	.LVL34:
 139:main.c        ****     ads1299_send_byte(SPI_ADS1299_MAIN_CHIPNUM, ADS1299_OPC_RDATAC);
 405              		.loc 3 139 0
 406 0022 1021     		movs	r1, #16
 407 0024 0020     		movs	r0, #0
 408 0026 FFF7FEFF 		bl	ads1299_send_byte
 409              	.LVL35:
 410              	.LBB48:
 411              	.LBB49:
 743:./ads1299.h   **** 
 744:./ads1299.h   **** /**
 745:./ads1299.h   ****  *	\brief Put the ADS1299 in standby mode.
 746:./ads1299.h   ****  *
 747:./ads1299.h   ****  * This function sends the STANDBY opcode to the ADS1299. This places the device in a low-power mod
 748:./ads1299.h   ****  * shutting down all parts of the circuit except for the reference section. Return from standby usi
 749:./ads1299.h   ****  * ads1299_wake(). Do not send any other commands during standby mode.
 750:./ads1299.h   ****  *
 751:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 752:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 753:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 754:./ads1299.h   ****  */
 755:./ads1299.h   **** static inline ads1299_error_t ads1299_standby(uint8_t chip_select)
 756:./ads1299.h   **** {
 757:./ads1299.h   **** 	//#if UC3
 758:./ads1299.h   **** 	ads1299_send_byte(chip_select, ADS1299_OPC_STANDBY);
 759:./ads1299.h   **** 	
 760:./ads1299.h   **** 	return ADS1299_STATUS_OK;
 761:./ads1299.h   **** 	//#else
 762:./ads1299.h   **** 	//#endif
 763:./ads1299.h   **** }
 764:./ads1299.h   **** 
 765:./ads1299.h   **** /**
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 25


 766:./ads1299.h   ****  *	\brief Wake the ADS1299 from standby mode.
 767:./ads1299.h   ****  *
 768:./ads1299.h   ****  * This function sends the WAKEUP opcode to the ADS1299. This returns the device to normal operatio
 769:./ads1299.h   ****  * after entering standby mode using ads1299_standby(). The host must wait 4 ADS1299 clock cycles
 770:./ads1299.h   ****  * (approximately 2 us at 2.048 MHz) after sending this opcode to allow the device to wake up. 
 771:./ads1299.h   ****  *
 772:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 773:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 774:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 775:./ads1299.h   ****  */
 776:./ads1299.h   **** static inline ads1299_error_t ads1299_wake(uint8_t chip_select)
 777:./ads1299.h   **** {
 778:./ads1299.h   **** 	//#if UC3
 779:./ads1299.h   **** 	ads1299_send_byte(chip_select, ADS1299_OPC_WAKEUP);
 780:./ads1299.h   **** 	
 781:./ads1299.h   **** 	return ADS1299_STATUS_OK;
 782:./ads1299.h   **** 	//#else
 783:./ads1299.h   **** 	//#endif
 784:./ads1299.h   **** }
 785:./ads1299.h   **** 
 786:./ads1299.h   **** /**
 787:./ads1299.h   ****  *	\brief Start analog-to-digital conversion on the ADS1299 by setting the START pin.
 788:./ads1299.h   ****  *
 789:./ads1299.h   ****  * This function pulls the START pin high, which begins analog-to-digital conversion on the ADS1299
 790:./ads1299.h   ****  * If conversions are already in progress, this has no effect. Pulling the START pin low 
 791:./ads1299.h   ****  * ads1299_hard_stop_conversion() must follow this command by at least 4 ADS1299 clock cycles 
 792:./ads1299.h   ****  * (approximately 2 us at 2.048 MHz). This command should not be used if ads1299_soft_start_convers
 793:./ads1299.h   ****  * has been used but has not yet been followed by ads1299_soft_stop_conversion().
 794:./ads1299.h   ****  * The START pin is defined at the top of ads1299.h with the macro ADS1299_PIN_START.
 795:./ads1299.h   ****  */
 796:./ads1299.h   **** static inline void ads1299_hard_start_conversion(void)
 797:./ads1299.h   **** {
 798:./ads1299.h   **** 	//#if UC3
 799:./ads1299.h   **** 	#ifdef ADS1299_PIN_START
 800:./ads1299.h   **** 	gpio_set_gpio_pin(ADS1299_PIN_START);
 801:./ads1299.h   **** 	#endif
 802:./ads1299.h   **** 	//#else
 803:./ads1299.h   **** 	//#endif
 804:./ads1299.h   **** }
 805:./ads1299.h   **** 
 806:./ads1299.h   **** /**
 807:./ads1299.h   ****  *	\brief Stop analog-to-digital conversion on the ADS1299 by clearing the START pin.
 808:./ads1299.h   ****  *
 809:./ads1299.h   ****  * This function pulls the START pin low, which halts analog-to-digital conversion on the ADS1299.
 810:./ads1299.h   ****  * This command must follow pulling the START pin high ads1299_hard_start_conversion() by at least 
 811:./ads1299.h   ****  * 4 ADS1299 clock cycles (approximately 2 us at 2.048 MHz).
 812:./ads1299.h   ****  * The START pin is defined at the top of ads1299.h with the macro ADS1299_PIN_START.
 813:./ads1299.h   ****  */
 814:./ads1299.h   **** static inline void ads1299_hard_stop_conversion(void)
 815:./ads1299.h   **** {
 816:./ads1299.h   **** 	//#if UC3
 817:./ads1299.h   **** 	#ifdef ADS1299_PIN_START
 818:./ads1299.h   **** 	gpio_clr_gpio_pin(ADS1299_PIN_START);
 819:./ads1299.h   **** 	#endif
 820:./ads1299.h   **** 	//#else
 821:./ads1299.h   **** 	//#endif
 822:./ads1299.h   **** }
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 26


 823:./ads1299.h   **** 
 824:./ads1299.h   **** /**
 825:./ads1299.h   ****  *	\brief Start analog-to-digital conversion on the ADS1299 using the START opcode.
 826:./ads1299.h   ****  *
 827:./ads1299.h   ****  * This function sends the START opcode, which begins analog-to-digital conversion on the ADS1299.
 828:./ads1299.h   ****  * It is provided in case the START pin is not available for use in the user application.
 829:./ads1299.h   ****  * If conversions are already in progress, this has no effect. The STOP command ads1299_soft_stop_c
 830:./ads1299.h   ****  * must follow this command by at least 4 ADS1299 clock cycles (approximately 2 us at 2.048 MHz). 
 831:./ads1299.h   ****  * This command should not be used if ads1299_hard_start_conversion() has not yet been followed by 
 832:./ads1299.h   ****  * ads1299_hard_stop_conversion().
 833:./ads1299.h   ****  *
 834:./ads1299.h   ****  * \pre Requires spi.h from the Atmel Software Framework and ads1299_spi_adapt.h.
 835:./ads1299.h   ****  * \param chip_select The chip select number of the ADS1299 to be initialized.
 836:./ads1299.h   ****  * \return Zero if successful, or an error code if unsuccessful.
 837:./ads1299.h   ****  */
 838:./ads1299.h   **** static inline ads1299_error_t ads1299_soft_start_conversion(uint8_t chip_select)
 839:./ads1299.h   **** {
 840:./ads1299.h   **** 	//#if UC3
 841:./ads1299.h   **** 	ads1299_send_byte(chip_select, ADS1299_OPC_START);
 412              		.loc 1 841 0
 413 002a 0821     		movs	r1, #8
 414 002c 0020     		movs	r0, #0
 415 002e FFF7FEFF 		bl	ads1299_send_byte
 416              	.LVL36:
 417              	.LBE49:
 418              	.LBE48:
 419              	.LBB50:
 140:main.c        ****  	ads1299_soft_start_conversion(SPI_ADS1299_MAIN_CHIPNUM);
 141:main.c        ****     
 142:main.c        ****     int counter = 0;
 143:main.c        ****     
 144:main.c        ****     uint8_t* num;
 145:main.c        ****     
 146:main.c        ****     for (int m = 0; m < DSP_PREBUFFER_NB_SAMPLES; m++) {
 420              		.loc 3 146 0
 421 0032 0025     		movs	r5, #0
 422 0034 14E0     		b	.L27
 423              	.LVL37:
 424              	.L28:
 425              	.LBB51:
 426              	.LBB52:
 147:main.c        **** 		for (int n = 0; n < MAX_EEG_CHANNELS; n++) {
 148:main.c        ****             for (int j=0; j<3; j++){
 149:main.c        ****                 spi_rx_data_buffer[m][n][j] = 0;
 427              		.loc 3 149 0 discriminator 3
 428 0036 6300     		lsls	r3, r4, #1
 429 0038 1819     		adds	r0, r3, r4
 430 003a 6A00     		lsls	r2, r5, #1
 431 003c 5219     		adds	r2, r2, r5
 432 003e D300     		lsls	r3, r2, #3
 433 0040 C318     		adds	r3, r0, r3
 434 0042 2A4A     		ldr	r2, .L38+4
 435 0044 D318     		adds	r3, r2, r3
 436 0046 0022     		movs	r2, #0
 437 0048 5A54     		strb	r2, [r3, r1]
 148:main.c        ****                 spi_rx_data_buffer[m][n][j] = 0;
 438              		.loc 3 148 0 discriminator 3
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 27


 439 004a 0131     		adds	r1, r1, #1
 440              	.LVL38:
 441 004c 00E0     		b	.L29
 442              	.LVL39:
 443              	.L36:
 444              	.LBE52:
 445 004e 0021     		movs	r1, #0
 446              	.L29:
 447              	.LVL40:
 448              	.LBB53:
 148:main.c        ****                 spi_rx_data_buffer[m][n][j] = 0;
 449              		.loc 3 148 0 is_stmt 0 discriminator 1
 450 0050 0229     		cmp	r1, #2
 451 0052 F0DD     		ble	.L28
 452              	.LBE53:
 147:main.c        **** 		for (int n = 0; n < MAX_EEG_CHANNELS; n++) {
 453              		.loc 3 147 0 is_stmt 1 discriminator 2
 454 0054 0134     		adds	r4, r4, #1
 455              	.LVL41:
 456 0056 00E0     		b	.L30
 457              	.LVL42:
 458              	.L37:
 459              	.LBE51:
 460 0058 0024     		movs	r4, #0
 461              	.L30:
 462              	.LVL43:
 463              	.LBB54:
 147:main.c        **** 		for (int n = 0; n < MAX_EEG_CHANNELS; n++) {
 464              		.loc 3 147 0 is_stmt 0 discriminator 1
 465 005a 072C     		cmp	r4, #7
 466 005c F7DD     		ble	.L36
 467              	.LBE54:
 146:main.c        **** 		for (int n = 0; n < MAX_EEG_CHANNELS; n++) {
 468              		.loc 3 146 0 is_stmt 1 discriminator 2
 469 005e 0135     		adds	r5, r5, #1
 470              	.LVL44:
 471              	.L27:
 146:main.c        **** 		for (int n = 0; n < MAX_EEG_CHANNELS; n++) {
 472              		.loc 3 146 0 is_stmt 0 discriminator 1
 473 0060 FF2D     		cmp	r5, #255
 474 0062 F9DD     		ble	.L37
 475              	.L35:
 476              	.LVL45:
 477              	.LBE50:
 478              	.LBB55:
 479              	.LBB56:
 733:./ads1299.h   **** 	
 480              		.loc 1 733 0 is_stmt 1 discriminator 1
 481 0064 0021     		movs	r1, #0
 482 0066 2248     		ldr	r0, .L38+8
 483 0068 FFF7FEFF 		bl	spi_selectChip
 484              	.LVL46:
 485              	.L31:
 486              	.LBB57:
 487              	.LBB58:
 488              	.LBB59:
 489              	.LBB60:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 28


  43:./ads1299_spi_adapt.h **** }
 490              		.loc 2 43 0
 491 006c FFF7FEFF 		bl	spi_ReadTxStatus
 492              	.LVL47:
 493              	.LBE60:
 494              	.LBE59:
 712:./ads1299.h   **** 	spi_put(SPI_ADDRESS, opcode);
 495              		.loc 1 712 0
 496 0070 C306     		lsls	r3, r0, #27
 497 0072 FBD5     		bpl	.L31
 713:./ads1299.h   **** 	while(!spi_is_tx_empty(SPI_ADDRESS));
 498              		.loc 1 713 0
 499 0074 1221     		movs	r1, #18
 500 0076 1E48     		ldr	r0, .L38+8
 501 0078 FFF7FEFF 		bl	spi_put
 502              	.LVL48:
 503              	.L32:
 504              	.LBB61:
 505              	.LBB62:
 506              		.loc 2 50 0
 507 007c FFF7FEFF 		bl	spi_ReadTxStatus
 508              	.LVL49:
 509              	.LBE62:
 510              	.LBE61:
 714:./ads1299.h   **** 	
 511              		.loc 1 714 0
 512 0080 0307     		lsls	r3, r0, #28
 513 0082 FBD5     		bpl	.L32
 514              	.LVL50:
 515              	.LBE58:
 516              	.LBE57:
 737:./ads1299.h   **** 	
 517              		.loc 1 737 0
 518 0084 1A4C     		ldr	r4, .L38+8
 519 0086 0021     		movs	r1, #0
 520 0088 2000     		movs	r0, r4
 521 008a FFF7FEFF 		bl	spi_unselectChip
 522              	.LVL51:
 523              	.LBE56:
 524              	.LBE55:
 525              	.LBB63:
 526              	.LBB64:
 527              	.LBB65:
 733:./ads1299.h   **** 	
 528              		.loc 1 733 0
 529 008e 0021     		movs	r1, #0
 530 0090 2000     		movs	r0, r4
 531 0092 FFF7FEFF 		bl	spi_selectChip
 532              	.LVL52:
 533              	.L33:
 534              	.LBB66:
 535              	.LBB67:
 536              	.LBB68:
 537              	.LBB69:
  43:./ads1299_spi_adapt.h **** }
 538              		.loc 2 43 0
 539 0096 FFF7FEFF 		bl	spi_ReadTxStatus
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 29


 540              	.LVL53:
 541              	.LBE69:
 542              	.LBE68:
 712:./ads1299.h   **** 	spi_put(SPI_ADDRESS, opcode);
 543              		.loc 1 712 0
 544 009a C306     		lsls	r3, r0, #27
 545 009c FBD5     		bpl	.L33
 713:./ads1299.h   **** 	while(!spi_is_tx_empty(SPI_ADDRESS));
 546              		.loc 1 713 0
 547 009e 0821     		movs	r1, #8
 548 00a0 1348     		ldr	r0, .L38+8
 549 00a2 FFF7FEFF 		bl	spi_put
 550              	.LVL54:
 551              	.L34:
 552              	.LBB70:
 553              	.LBB71:
 554              		.loc 2 50 0
 555 00a6 FFF7FEFF 		bl	spi_ReadTxStatus
 556              	.LVL55:
 557              	.LBE71:
 558              	.LBE70:
 714:./ads1299.h   **** 	
 559              		.loc 1 714 0
 560 00aa 0307     		lsls	r3, r0, #28
 561 00ac FBD5     		bpl	.L34
 562              	.LVL56:
 563              	.LBE67:
 564              	.LBE66:
 737:./ads1299.h   **** 	
 565              		.loc 1 737 0
 566 00ae 0021     		movs	r1, #0
 567 00b0 0F48     		ldr	r0, .L38+8
 568 00b2 FFF7FEFF 		bl	spi_unselectChip
 569              	.LVL57:
 570              	.LBE65:
 571              	.LBE64:
 572              	.LBE63:
 150:main.c        ****             }
 151:main.c        **** 		}
 152:main.c        **** 	}
 153:main.c        ****     
 154:main.c        ****     for(;;)
 155:main.c        ****     {        
 156:main.c        ****                
 157:main.c        ****         ads1299_send_byte(SPI_ADS1299_MAIN_CHIPNUM, ADS1299_OPC_RDATA);
 158:main.c        ****         ads1299_soft_start_conversion(SPI_ADS1299_MAIN_CHIPNUM);
 159:main.c        ****         CyDelay(5);
 573              		.loc 3 159 0
 574 00b6 0520     		movs	r0, #5
 575 00b8 FFF7FEFF 		bl	CyDelay
 576              	.LVL58:
 160:main.c        ****         ads1299_rdata24_generic(SPI_ADS1299_MAIN_CHIPNUM, 0, spi_rx_ads1299_status, spi_rx_data_buf
 577              		.loc 3 160 0
 578 00bc 0B4C     		ldr	r4, .L38+4
 579 00be 2300     		movs	r3, r4
 580 00c0 0C4A     		ldr	r2, .L38+12
 581 00c2 0021     		movs	r1, #0
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 30


 582 00c4 0020     		movs	r0, #0
 583 00c6 FFF7FEFF 		bl	ads1299_rdata24_generic
 584              	.LVL59:
 161:main.c        ****         
 162:main.c        **** 
 163:main.c        ****         generated_number = (uint16) (spi_rx_data_buffer[0][3][1] << 8) | (spi_rx_data_buffer[0][3][
 585              		.loc 3 163 0
 586 00ca A37A     		ldrb	r3, [r4, #10]
 587 00cc 1B02     		lsls	r3, r3, #8
 588 00ce 627A     		ldrb	r2, [r4, #9]
 589 00d0 1343     		orrs	r3, r2
 590 00d2 094A     		ldr	r2, .L38+16
 591 00d4 1380     		strh	r3, [r2]
 164:main.c        ****         updateNumber();       
 592              		.loc 3 164 0
 593 00d6 FFF7FEFF 		bl	updateNumber
 594              	.LVL60:
 165:main.c        **** 
 166:main.c        ****         CyBle_ProcessEvents();
 595              		.loc 3 166 0
 596 00da FFF7FEFF 		bl	CyBle_ProcessEvents
 597              	.LVL61:
 167:main.c        ****         CyBle_EnterLPM(CYBLE_BLESS_DEEPSLEEP);
 598              		.loc 3 167 0
 599 00de 0320     		movs	r0, #3
 600 00e0 FFF7FEFF 		bl	CyBle_EnterLPM
 601              	.LVL62:
 168:main.c        ****         
 169:main.c        ****     }
 602              		.loc 3 169 0
 603 00e4 BEE7     		b	.L35
 604              	.L39:
 605 00e6 C046     		.align	2
 606              	.L38:
 607 00e8 00000000 		.word	BleCallBack
 608 00ec 00000000 		.word	spi_rx_data_buffer
 609 00f0 00000000 		.word	spi
 610 00f4 00000000 		.word	spi_rx_ads1299_status
 611 00f8 00000000 		.word	.LANCHOR0
 612              		.cfi_endproc
 613              	.LFE56:
 614              		.size	main, .-main
 615              		.comm	numberNotify,4,4
 616              		.comm	spi_rx_data_buffer,6144,4
 617              		.comm	spi_rx_ads1299_status,3,4
 618              		.global	generated_numberOld
 619              		.global	generated_number
 620              		.comm	spi,1,1
 621              		.data
 622              		.align	1
 623              		.set	.LANCHOR0,. + 0
 624              		.type	generated_number, %object
 625              		.size	generated_number, 2
 626              	generated_number:
 627 0000 FFFF     		.short	-1
 628              		.type	generated_numberOld, %object
 629              		.size	generated_numberOld, 2
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 31


 630              	generated_numberOld:
 631 0002 FFFF     		.short	-1
 632              		.text
 633              	.Letext0:
 634              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 635              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 636              		.file 6 "Generated_Source\\PSoC4/cytypes.h"
 637              		.file 7 "Generated_Source\\PSoC4/ble_Stack.h"
 638              		.file 8 "Generated_Source\\PSoC4/ble_StackGatt.h"
 639              		.file 9 "Generated_Source\\PSoC4/ble_StackGattServer.h"
 640              		.file 10 "Generated_Source\\PSoC4/ble_eventHandler.h"
 641              		.file 11 "Generated_Source\\PSoC4/spi.h"
 642              		.file 12 "Generated_Source\\PSoC4/red.h"
 643              		.file 13 "Generated_Source\\PSoC4/ble_StackGattDb.h"
 644              		.file 14 "Generated_Source\\PSoC4/ble.h"
 645              		.file 15 "Generated_Source\\PSoC4/pwm.h"
 646              		.file 16 "Generated_Source\\PSoC4/Clock_1.h"
 647              		.file 17 "Generated_Source\\PSoC4/Clock_2.h"
 648              		.file 18 "Generated_Source\\PSoC4/CyLib.h"
 649              		.section	.debug_info,"",%progbits
 650              	.Ldebug_info0:
 651 0000 D70C0000 		.4byte	0xcd7
 652 0004 0400     		.2byte	0x4
 653 0006 00000000 		.4byte	.Ldebug_abbrev0
 654 000a 04       		.byte	0x4
 655 000b 01       		.uleb128 0x1
 656 000c B3010000 		.4byte	.LASF200
 657 0010 0C       		.byte	0xc
 658 0011 49090000 		.4byte	.LASF201
 659 0015 73120000 		.4byte	.LASF202
 660 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 661 001d 00000000 		.4byte	0
 662 0021 00000000 		.4byte	.Ldebug_line0
 663 0025 02       		.uleb128 0x2
 664 0026 01       		.byte	0x1
 665 0027 06       		.byte	0x6
 666 0028 71010000 		.4byte	.LASF0
 667 002c 03       		.uleb128 0x3
 668 002d 7D010000 		.4byte	.LASF9
 669 0031 04       		.byte	0x4
 670 0032 1D       		.byte	0x1d
 671 0033 37000000 		.4byte	0x37
 672 0037 02       		.uleb128 0x2
 673 0038 01       		.byte	0x1
 674 0039 08       		.byte	0x8
 675 003a 1E0E0000 		.4byte	.LASF1
 676 003e 02       		.uleb128 0x2
 677 003f 02       		.byte	0x2
 678 0040 05       		.byte	0x5
 679 0041 CC0E0000 		.4byte	.LASF2
 680 0045 02       		.uleb128 0x2
 681 0046 02       		.byte	0x2
 682 0047 07       		.byte	0x7
 683 0048 BF110000 		.4byte	.LASF3
 684 004c 02       		.uleb128 0x2
 685 004d 04       		.byte	0x4
 686 004e 05       		.byte	0x5
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 32


 687 004f AA010000 		.4byte	.LASF4
 688 0053 02       		.uleb128 0x2
 689 0054 04       		.byte	0x4
 690 0055 07       		.byte	0x7
 691 0056 F1030000 		.4byte	.LASF5
 692 005a 02       		.uleb128 0x2
 693 005b 08       		.byte	0x8
 694 005c 05       		.byte	0x5
 695 005d B8030000 		.4byte	.LASF6
 696 0061 02       		.uleb128 0x2
 697 0062 08       		.byte	0x8
 698 0063 07       		.byte	0x7
 699 0064 41020000 		.4byte	.LASF7
 700 0068 04       		.uleb128 0x4
 701 0069 04       		.byte	0x4
 702 006a 05       		.byte	0x5
 703 006b 696E7400 		.ascii	"int\000"
 704 006f 02       		.uleb128 0x2
 705 0070 04       		.byte	0x4
 706 0071 07       		.byte	0x7
 707 0072 B5060000 		.4byte	.LASF8
 708 0076 03       		.uleb128 0x3
 709 0077 E3120000 		.4byte	.LASF10
 710 007b 05       		.byte	0x5
 711 007c 18       		.byte	0x18
 712 007d 2C000000 		.4byte	0x2c
 713 0081 05       		.uleb128 0x5
 714 0082 E6040000 		.4byte	.LASF11
 715 0086 06       		.byte	0x6
 716 0087 E401     		.2byte	0x1e4
 717 0089 37000000 		.4byte	0x37
 718 008d 05       		.uleb128 0x5
 719 008e 2C0E0000 		.4byte	.LASF12
 720 0092 06       		.byte	0x6
 721 0093 E501     		.2byte	0x1e5
 722 0095 45000000 		.4byte	0x45
 723 0099 05       		.uleb128 0x5
 724 009a 63050000 		.4byte	.LASF13
 725 009e 06       		.byte	0x6
 726 009f E601     		.2byte	0x1e6
 727 00a1 53000000 		.4byte	0x53
 728 00a5 02       		.uleb128 0x2
 729 00a6 04       		.byte	0x4
 730 00a7 04       		.byte	0x4
 731 00a8 7F0D0000 		.4byte	.LASF14
 732 00ac 02       		.uleb128 0x2
 733 00ad 08       		.byte	0x8
 734 00ae 04       		.byte	0x4
 735 00af 0B050000 		.4byte	.LASF15
 736 00b3 02       		.uleb128 0x2
 737 00b4 01       		.byte	0x1
 738 00b5 08       		.byte	0x8
 739 00b6 26100000 		.4byte	.LASF16
 740 00ba 02       		.uleb128 0x2
 741 00bb 08       		.byte	0x8
 742 00bc 04       		.byte	0x4
 743 00bd 4A100000 		.4byte	.LASF17
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 33


 744 00c1 02       		.uleb128 0x2
 745 00c2 04       		.byte	0x4
 746 00c3 07       		.byte	0x7
 747 00c4 540B0000 		.4byte	.LASF18
 748 00c8 06       		.uleb128 0x6
 749 00c9 04       		.byte	0x4
 750 00ca 07       		.uleb128 0x7
 751 00cb 01       		.byte	0x1
 752 00cc 37000000 		.4byte	0x37
 753 00d0 07       		.byte	0x7
 754 00d1 3201     		.2byte	0x132
 755 00d3 88020000 		.4byte	0x288
 756 00d7 08       		.uleb128 0x8
 757 00d8 34080000 		.4byte	.LASF19
 758 00dc 00       		.byte	0
 759 00dd 08       		.uleb128 0x8
 760 00de DE030000 		.4byte	.LASF20
 761 00e2 01       		.byte	0x1
 762 00e3 08       		.uleb128 0x8
 763 00e4 98010000 		.4byte	.LASF21
 764 00e8 02       		.byte	0x2
 765 00e9 08       		.uleb128 0x8
 766 00ea A6110000 		.4byte	.LASF22
 767 00ee 03       		.byte	0x3
 768 00ef 08       		.uleb128 0x8
 769 00f0 6B020000 		.4byte	.LASF23
 770 00f4 04       		.byte	0x4
 771 00f5 08       		.uleb128 0x8
 772 00f6 1E000000 		.4byte	.LASF24
 773 00fa 05       		.byte	0x5
 774 00fb 08       		.uleb128 0x8
 775 00fc 69080000 		.4byte	.LASF25
 776 0100 06       		.byte	0x6
 777 0101 08       		.uleb128 0x8
 778 0102 9C0A0000 		.4byte	.LASF26
 779 0106 20       		.byte	0x20
 780 0107 08       		.uleb128 0x8
 781 0108 3C040000 		.4byte	.LASF27
 782 010c 21       		.byte	0x21
 783 010d 08       		.uleb128 0x8
 784 010e EB080000 		.4byte	.LASF28
 785 0112 22       		.byte	0x22
 786 0113 08       		.uleb128 0x8
 787 0114 E4090000 		.4byte	.LASF29
 788 0118 23       		.byte	0x23
 789 0119 08       		.uleb128 0x8
 790 011a 880C0000 		.4byte	.LASF30
 791 011e 24       		.byte	0x24
 792 011f 08       		.uleb128 0x8
 793 0120 BA0B0000 		.4byte	.LASF31
 794 0124 25       		.byte	0x25
 795 0125 08       		.uleb128 0x8
 796 0126 BE040000 		.4byte	.LASF32
 797 012a 26       		.byte	0x26
 798 012b 08       		.uleb128 0x8
 799 012c 2B100000 		.4byte	.LASF33
 800 0130 27       		.byte	0x27
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 34


 801 0131 08       		.uleb128 0x8
 802 0132 BB100000 		.4byte	.LASF34
 803 0136 28       		.byte	0x28
 804 0137 08       		.uleb128 0x8
 805 0138 0F030000 		.4byte	.LASF35
 806 013c 29       		.byte	0x29
 807 013d 08       		.uleb128 0x8
 808 013e AF000000 		.4byte	.LASF36
 809 0142 2A       		.byte	0x2a
 810 0143 08       		.uleb128 0x8
 811 0144 13040000 		.4byte	.LASF37
 812 0148 2B       		.byte	0x2b
 813 0149 08       		.uleb128 0x8
 814 014a A7130000 		.4byte	.LASF38
 815 014e 2C       		.byte	0x2c
 816 014f 08       		.uleb128 0x8
 817 0150 FF0E0000 		.4byte	.LASF39
 818 0154 2D       		.byte	0x2d
 819 0155 08       		.uleb128 0x8
 820 0156 330E0000 		.4byte	.LASF40
 821 015a 2E       		.byte	0x2e
 822 015b 08       		.uleb128 0x8
 823 015c D2110000 		.4byte	.LASF41
 824 0160 2F       		.byte	0x2f
 825 0161 08       		.uleb128 0x8
 826 0162 200C0000 		.4byte	.LASF42
 827 0166 30       		.byte	0x30
 828 0167 08       		.uleb128 0x8
 829 0168 70140000 		.4byte	.LASF43
 830 016c 31       		.byte	0x31
 831 016d 08       		.uleb128 0x8
 832 016e FF0B0000 		.4byte	.LASF44
 833 0172 32       		.byte	0x32
 834 0173 08       		.uleb128 0x8
 835 0174 C90F0000 		.4byte	.LASF45
 836 0178 33       		.byte	0x33
 837 0179 08       		.uleb128 0x8
 838 017a 58070000 		.4byte	.LASF46
 839 017e 34       		.byte	0x34
 840 017f 08       		.uleb128 0x8
 841 0180 1C060000 		.4byte	.LASF47
 842 0184 35       		.byte	0x35
 843 0185 08       		.uleb128 0x8
 844 0186 6A090000 		.4byte	.LASF48
 845 018a 36       		.byte	0x36
 846 018b 08       		.uleb128 0x8
 847 018c CE0A0000 		.4byte	.LASF49
 848 0190 37       		.byte	0x37
 849 0191 08       		.uleb128 0x8
 850 0192 A50F0000 		.4byte	.LASF50
 851 0196 40       		.byte	0x40
 852 0197 08       		.uleb128 0x8
 853 0198 0A0A0000 		.4byte	.LASF51
 854 019c 41       		.byte	0x41
 855 019d 08       		.uleb128 0x8
 856 019e B0140000 		.4byte	.LASF52
 857 01a2 42       		.byte	0x42
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 35


 858 01a3 08       		.uleb128 0x8
 859 01a4 55120000 		.4byte	.LASF53
 860 01a8 43       		.byte	0x43
 861 01a9 08       		.uleb128 0x8
 862 01aa A7070000 		.4byte	.LASF54
 863 01ae 44       		.byte	0x44
 864 01af 08       		.uleb128 0x8
 865 01b0 580D0000 		.4byte	.LASF55
 866 01b4 45       		.byte	0x45
 867 01b5 08       		.uleb128 0x8
 868 01b6 97090000 		.4byte	.LASF56
 869 01ba 46       		.byte	0x46
 870 01bb 08       		.uleb128 0x8
 871 01bc 4B080000 		.4byte	.LASF57
 872 01c0 47       		.byte	0x47
 873 01c1 08       		.uleb128 0x8
 874 01c2 80130000 		.4byte	.LASF58
 875 01c6 48       		.byte	0x48
 876 01c7 08       		.uleb128 0x8
 877 01c8 53040000 		.4byte	.LASF59
 878 01cc 49       		.byte	0x49
 879 01cd 08       		.uleb128 0x8
 880 01ce 00000000 		.4byte	.LASF60
 881 01d2 4A       		.byte	0x4a
 882 01d3 08       		.uleb128 0x8
 883 01d4 68100000 		.4byte	.LASF61
 884 01d8 4B       		.byte	0x4b
 885 01d9 08       		.uleb128 0x8
 886 01da 50090000 		.4byte	.LASF62
 887 01de 4C       		.byte	0x4c
 888 01df 08       		.uleb128 0x8
 889 01e0 E50B0000 		.4byte	.LASF63
 890 01e4 4D       		.byte	0x4d
 891 01e5 08       		.uleb128 0x8
 892 01e6 87040000 		.4byte	.LASF64
 893 01ea 4E       		.byte	0x4e
 894 01eb 08       		.uleb128 0x8
 895 01ec 6B0F0000 		.4byte	.LASF65
 896 01f0 4F       		.byte	0x4f
 897 01f1 08       		.uleb128 0x8
 898 01f2 82080000 		.4byte	.LASF66
 899 01f6 50       		.byte	0x50
 900 01f7 08       		.uleb128 0x8
 901 01f8 EC040000 		.4byte	.LASF67
 902 01fc 51       		.byte	0x51
 903 01fd 08       		.uleb128 0x8
 904 01fe D40C0000 		.4byte	.LASF68
 905 0202 52       		.byte	0x52
 906 0203 08       		.uleb128 0x8
 907 0204 DE0E0000 		.4byte	.LASF69
 908 0208 53       		.byte	0x53
 909 0209 08       		.uleb128 0x8
 910 020a 850D0000 		.4byte	.LASF70
 911 020e 54       		.byte	0x54
 912 020f 08       		.uleb128 0x8
 913 0210 C5070000 		.4byte	.LASF71
 914 0214 55       		.byte	0x55
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 36


 915 0215 08       		.uleb128 0x8
 916 0216 93060000 		.4byte	.LASF72
 917 021a 56       		.byte	0x56
 918 021b 08       		.uleb128 0x8
 919 021c DD100000 		.4byte	.LASF73
 920 0220 57       		.byte	0x57
 921 0221 08       		.uleb128 0x8
 922 0222 E9070000 		.4byte	.LASF74
 923 0226 58       		.byte	0x58
 924 0227 08       		.uleb128 0x8
 925 0228 E9020000 		.4byte	.LASF75
 926 022c 70       		.byte	0x70
 927 022d 08       		.uleb128 0x8
 928 022e 32140000 		.4byte	.LASF76
 929 0232 71       		.byte	0x71
 930 0233 08       		.uleb128 0x8
 931 0234 490A0000 		.4byte	.LASF77
 932 0238 72       		.byte	0x72
 933 0239 08       		.uleb128 0x8
 934 023a 030B0000 		.4byte	.LASF78
 935 023e 73       		.byte	0x73
 936 023f 08       		.uleb128 0x8
 937 0240 140D0000 		.4byte	.LASF79
 938 0244 74       		.byte	0x74
 939 0245 08       		.uleb128 0x8
 940 0246 CB130000 		.4byte	.LASF80
 941 024a 75       		.byte	0x75
 942 024b 08       		.uleb128 0x8
 943 024c 40010000 		.4byte	.LASF81
 944 0250 76       		.byte	0x76
 945 0251 08       		.uleb128 0x8
 946 0252 7C000000 		.4byte	.LASF82
 947 0256 77       		.byte	0x77
 948 0257 08       		.uleb128 0x8
 949 0258 06110000 		.4byte	.LASF83
 950 025c 78       		.byte	0x78
 951 025d 08       		.uleb128 0x8
 952 025e 29110000 		.4byte	.LASF84
 953 0262 79       		.byte	0x79
 954 0263 08       		.uleb128 0x8
 955 0264 F8050000 		.4byte	.LASF85
 956 0268 7A       		.byte	0x7a
 957 0269 08       		.uleb128 0x8
 958 026a FC130000 		.4byte	.LASF86
 959 026e FA       		.byte	0xfa
 960 026f 08       		.uleb128 0x8
 961 0270 C2060000 		.4byte	.LASF87
 962 0274 FB       		.byte	0xfb
 963 0275 08       		.uleb128 0x8
 964 0276 430F0000 		.4byte	.LASF88
 965 027a FC       		.byte	0xfc
 966 027b 08       		.uleb128 0x8
 967 027c CE140000 		.4byte	.LASF89
 968 0280 FD       		.byte	0xfd
 969 0281 08       		.uleb128 0x8
 970 0282 95050000 		.4byte	.LASF90
 971 0286 FF       		.byte	0xff
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 37


 972 0287 00       		.byte	0
 973 0288 07       		.uleb128 0x7
 974 0289 01       		.byte	0x1
 975 028a 37000000 		.4byte	0x37
 976 028e 07       		.byte	0x7
 977 028f 5D04     		.2byte	0x45d
 978 0291 B4020000 		.4byte	0x2b4
 979 0295 08       		.uleb128 0x8
 980 0296 5D140000 		.4byte	.LASF91
 981 029a 01       		.byte	0x1
 982 029b 08       		.uleb128 0x8
 983 029c 56100000 		.4byte	.LASF92
 984 02a0 02       		.byte	0x2
 985 02a1 08       		.uleb128 0x8
 986 02a2 59130000 		.4byte	.LASF93
 987 02a6 03       		.byte	0x3
 988 02a7 08       		.uleb128 0x8
 989 02a8 42070000 		.4byte	.LASF94
 990 02ac 04       		.byte	0x4
 991 02ad 08       		.uleb128 0x8
 992 02ae 93070000 		.4byte	.LASF95
 993 02b2 FF       		.byte	0xff
 994 02b3 00       		.byte	0
 995 02b4 09       		.uleb128 0x9
 996 02b5 04       		.byte	0x4
 997 02b6 81000000 		.4byte	0x81
 998 02ba 0A       		.uleb128 0xa
 999 02bb 01       		.byte	0x1
 1000 02bc 37000000 		.4byte	0x37
 1001 02c0 08       		.byte	0x8
 1002 02c1 A5       		.byte	0xa5
 1003 02c2 B1030000 		.4byte	0x3b1
 1004 02c6 08       		.uleb128 0x8
 1005 02c7 AE050000 		.4byte	.LASF96
 1006 02cb 00       		.byte	0
 1007 02cc 08       		.uleb128 0x8
 1008 02cd 08010000 		.4byte	.LASF97
 1009 02d1 01       		.byte	0x1
 1010 02d2 08       		.uleb128 0x8
 1011 02d3 CB050000 		.4byte	.LASF98
 1012 02d7 02       		.byte	0x2
 1013 02d8 08       		.uleb128 0x8
 1014 02d9 72050000 		.4byte	.LASF99
 1015 02dd 03       		.byte	0x3
 1016 02de 08       		.uleb128 0x8
 1017 02df 6C040000 		.4byte	.LASF100
 1018 02e3 04       		.byte	0x4
 1019 02e4 08       		.uleb128 0x8
 1020 02e5 75030000 		.4byte	.LASF101
 1021 02e9 05       		.byte	0x5
 1022 02ea 08       		.uleb128 0x8
 1023 02eb E3000000 		.4byte	.LASF102
 1024 02ef 06       		.byte	0x6
 1025 02f0 08       		.uleb128 0x8
 1026 02f1 EB120000 		.4byte	.LASF103
 1027 02f5 07       		.byte	0x7
 1028 02f6 08       		.uleb128 0x8
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 38


 1029 02f7 5E0C0000 		.4byte	.LASF104
 1030 02fb 08       		.byte	0x8
 1031 02fc 08       		.uleb128 0x8
 1032 02fd B20D0000 		.4byte	.LASF105
 1033 0301 09       		.byte	0x9
 1034 0302 08       		.uleb128 0x8
 1035 0303 70070000 		.4byte	.LASF106
 1036 0307 0A       		.byte	0xa
 1037 0308 08       		.uleb128 0x8
 1038 0309 12080000 		.4byte	.LASF107
 1039 030d 0B       		.byte	0xb
 1040 030e 08       		.uleb128 0x8
 1041 030f C2080000 		.4byte	.LASF108
 1042 0313 0C       		.byte	0xc
 1043 0314 08       		.uleb128 0x8
 1044 0315 570E0000 		.4byte	.LASF109
 1045 0319 0D       		.byte	0xd
 1046 031a 08       		.uleb128 0x8
 1047 031b 4C110000 		.4byte	.LASF110
 1048 031f 0E       		.byte	0xe
 1049 0320 08       		.uleb128 0x8
 1050 0321 A40C0000 		.4byte	.LASF111
 1051 0325 0F       		.byte	0xf
 1052 0326 08       		.uleb128 0x8
 1053 0327 2E050000 		.4byte	.LASF112
 1054 032b 10       		.byte	0x10
 1055 032c 08       		.uleb128 0x8
 1056 032d 5D0B0000 		.4byte	.LASF113
 1057 0331 11       		.byte	0x11
 1058 0332 08       		.uleb128 0x8
 1059 0333 87100000 		.4byte	.LASF114
 1060 0337 80       		.byte	0x80
 1061 0338 08       		.uleb128 0x8
 1062 0339 F00F0000 		.4byte	.LASF115
 1063 033d 80       		.byte	0x80
 1064 033e 08       		.uleb128 0x8
 1065 033f 03120000 		.4byte	.LASF116
 1066 0343 80       		.byte	0x80
 1067 0344 08       		.uleb128 0x8
 1068 0345 650A0000 		.4byte	.LASF117
 1069 0349 80       		.byte	0x80
 1070 034a 08       		.uleb128 0x8
 1071 034b B8090000 		.4byte	.LASF118
 1072 034f 80       		.byte	0x80
 1073 0350 08       		.uleb128 0x8
 1074 0351 FC060000 		.4byte	.LASF119
 1075 0355 80       		.byte	0x80
 1076 0356 08       		.uleb128 0x8
 1077 0357 50030000 		.4byte	.LASF120
 1078 035b 80       		.byte	0x80
 1079 035c 08       		.uleb128 0x8
 1080 035d 280F0000 		.4byte	.LASF121
 1081 0361 80       		.byte	0x80
 1082 0362 08       		.uleb128 0x8
 1083 0363 7C0E0000 		.4byte	.LASF122
 1084 0367 81       		.byte	0x81
 1085 0368 08       		.uleb128 0x8
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 39


 1086 0369 80020000 		.4byte	.LASF123
 1087 036d 81       		.byte	0x81
 1088 036e 08       		.uleb128 0x8
 1089 036f E1060000 		.4byte	.LASF124
 1090 0373 81       		.byte	0x81
 1091 0374 08       		.uleb128 0x8
 1092 0375 4E000000 		.4byte	.LASF125
 1093 0379 81       		.byte	0x81
 1094 037a 08       		.uleb128 0x8
 1095 037b 09130000 		.4byte	.LASF126
 1096 037f 82       		.byte	0x82
 1097 0380 08       		.uleb128 0x8
 1098 0381 39060000 		.4byte	.LASF127
 1099 0385 A0       		.byte	0xa0
 1100 0386 08       		.uleb128 0x8
 1101 0387 31120000 		.4byte	.LASF128
 1102 038b A0       		.byte	0xa0
 1103 038c 08       		.uleb128 0x8
 1104 038d 2C030000 		.4byte	.LASF129
 1105 0391 A1       		.byte	0xa1
 1106 0392 08       		.uleb128 0x8
 1107 0393 320D0000 		.4byte	.LASF130
 1108 0397 A2       		.byte	0xa2
 1109 0398 08       		.uleb128 0x8
 1110 0399 6A110000 		.4byte	.LASF131
 1111 039d A3       		.byte	0xa3
 1112 039e 08       		.uleb128 0x8
 1113 039f A1020000 		.4byte	.LASF132
 1114 03a3 FD       		.byte	0xfd
 1115 03a4 08       		.uleb128 0x8
 1116 03a5 0F090000 		.4byte	.LASF133
 1117 03a9 FE       		.byte	0xfe
 1118 03aa 08       		.uleb128 0x8
 1119 03ab 020E0000 		.4byte	.LASF134
 1120 03af FF       		.byte	0xff
 1121 03b0 00       		.byte	0
 1122 03b1 05       		.uleb128 0x5
 1123 03b2 94140000 		.4byte	.LASF135
 1124 03b6 08       		.byte	0x8
 1125 03b7 8901     		.2byte	0x189
 1126 03b9 8D000000 		.4byte	0x8d
 1127 03bd 0B       		.uleb128 0xb
 1128 03be 02       		.byte	0x2
 1129 03bf 08       		.byte	0x8
 1130 03c0 9301     		.2byte	0x193
 1131 03c2 E1030000 		.4byte	0x3e1
 1132 03c6 0C       		.uleb128 0xc
 1133 03c7 C2050000 		.4byte	.LASF136
 1134 03cb 08       		.byte	0x8
 1135 03cc 9A01     		.2byte	0x19a
 1136 03ce 81000000 		.4byte	0x81
 1137 03d2 00       		.byte	0
 1138 03d3 0C       		.uleb128 0xc
 1139 03d4 430A0000 		.4byte	.LASF137
 1140 03d8 08       		.byte	0x8
 1141 03d9 A001     		.2byte	0x1a0
 1142 03db 81000000 		.4byte	0x81
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 40


 1143 03df 01       		.byte	0x1
 1144 03e0 00       		.byte	0
 1145 03e1 05       		.uleb128 0x5
 1146 03e2 9B000000 		.4byte	.LASF138
 1147 03e6 08       		.byte	0x8
 1148 03e7 A201     		.2byte	0x1a2
 1149 03e9 BD030000 		.4byte	0x3bd
 1150 03ed 0B       		.uleb128 0xb
 1151 03ee 08       		.byte	0x8
 1152 03ef 08       		.byte	0x8
 1153 03f0 BE01     		.2byte	0x1be
 1154 03f2 1E040000 		.4byte	0x41e
 1155 03f6 0D       		.uleb128 0xd
 1156 03f7 76616C00 		.ascii	"val\000"
 1157 03fb 08       		.byte	0x8
 1158 03fc C101     		.2byte	0x1c1
 1159 03fe B4020000 		.4byte	0x2b4
 1160 0402 00       		.byte	0
 1161 0403 0D       		.uleb128 0xd
 1162 0404 6C656E00 		.ascii	"len\000"
 1163 0408 08       		.byte	0x8
 1164 0409 C401     		.2byte	0x1c4
 1165 040b 8D000000 		.4byte	0x8d
 1166 040f 04       		.byte	0x4
 1167 0410 0C       		.uleb128 0xc
 1168 0411 32040000 		.4byte	.LASF139
 1169 0415 08       		.byte	0x8
 1170 0416 CB01     		.2byte	0x1cb
 1171 0418 8D000000 		.4byte	0x8d
 1172 041c 06       		.byte	0x6
 1173 041d 00       		.byte	0
 1174 041e 05       		.uleb128 0x5
 1175 041f 58020000 		.4byte	.LASF140
 1176 0423 08       		.byte	0x8
 1177 0424 CD01     		.2byte	0x1cd
 1178 0426 ED030000 		.4byte	0x3ed
 1179 042a 0B       		.uleb128 0xb
 1180 042b 0C       		.byte	0xc
 1181 042c 08       		.byte	0x8
 1182 042d D001     		.2byte	0x1d0
 1183 042f 4E040000 		.4byte	0x44e
 1184 0433 0C       		.uleb128 0xc
 1185 0434 62060000 		.4byte	.LASF141
 1186 0438 08       		.byte	0x8
 1187 0439 D301     		.2byte	0x1d3
 1188 043b 1E040000 		.4byte	0x41e
 1189 043f 00       		.byte	0
 1190 0440 0C       		.uleb128 0xc
 1191 0441 ED050000 		.4byte	.LASF142
 1192 0445 08       		.byte	0x8
 1193 0446 D601     		.2byte	0x1d6
 1194 0448 B1030000 		.4byte	0x3b1
 1195 044c 08       		.byte	0x8
 1196 044d 00       		.byte	0
 1197 044e 05       		.uleb128 0x5
 1198 044f F50C0000 		.4byte	.LASF143
 1199 0453 08       		.byte	0x8
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 41


 1200 0454 D801     		.2byte	0x1d8
 1201 0456 2A040000 		.4byte	0x42a
 1202 045a 03       		.uleb128 0x3
 1203 045b 820B0000 		.4byte	.LASF144
 1204 045f 09       		.byte	0x9
 1205 0460 34       		.byte	0x34
 1206 0461 4E040000 		.4byte	0x44e
 1207 0465 0E       		.uleb128 0xe
 1208 0466 10       		.byte	0x10
 1209 0467 09       		.byte	0x9
 1210 0468 8A       		.byte	0x8a
 1211 0469 86040000 		.4byte	0x486
 1212 046d 0F       		.uleb128 0xf
 1213 046e D8000000 		.4byte	.LASF145
 1214 0472 09       		.byte	0x9
 1215 0473 8D       		.byte	0x8d
 1216 0474 E1030000 		.4byte	0x3e1
 1217 0478 00       		.byte	0
 1218 0479 0F       		.uleb128 0xf
 1219 047a C00A0000 		.4byte	.LASF146
 1220 047e 09       		.byte	0x9
 1221 047f 90       		.byte	0x90
 1222 0480 4E040000 		.4byte	0x44e
 1223 0484 04       		.byte	0x4
 1224 0485 00       		.byte	0
 1225 0486 03       		.uleb128 0x3
 1226 0487 CB020000 		.4byte	.LASF147
 1227 048b 09       		.byte	0x9
 1228 048c 92       		.byte	0x92
 1229 048d 65040000 		.4byte	0x465
 1230 0491 07       		.uleb128 0x7
 1231 0492 01       		.byte	0x1
 1232 0493 37000000 		.4byte	0x37
 1233 0497 0A       		.byte	0xa
 1234 0498 5A08     		.2byte	0x85a
 1235 049a BD040000 		.4byte	0x4bd
 1236 049e 08       		.uleb128 0x8
 1237 049f 3A000000 		.4byte	.LASF148
 1238 04a3 00       		.byte	0
 1239 04a4 08       		.uleb128 0x8
 1240 04a5 A10B0000 		.4byte	.LASF149
 1241 04a9 01       		.byte	0x1
 1242 04aa 08       		.uleb128 0x8
 1243 04ab 2F130000 		.4byte	.LASF150
 1244 04af 02       		.byte	0x2
 1245 04b0 08       		.uleb128 0x8
 1246 04b1 A0030000 		.4byte	.LASF151
 1247 04b5 03       		.byte	0x3
 1248 04b6 08       		.uleb128 0x8
 1249 04b7 A5040000 		.4byte	.LASF152
 1250 04bb 04       		.byte	0x4
 1251 04bc 00       		.byte	0
 1252 04bd 05       		.uleb128 0x5
 1253 04be D5120000 		.4byte	.LASF153
 1254 04c2 0A       		.byte	0xa
 1255 04c3 6808     		.2byte	0x868
 1256 04c5 91040000 		.4byte	0x491
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 42


 1257 04c9 10       		.uleb128 0x10
 1258 04ca D9040000 		.4byte	0x4d9
 1259 04ce D9040000 		.4byte	0x4d9
 1260 04d2 11       		.uleb128 0x11
 1261 04d3 C1000000 		.4byte	0xc1
 1262 04d7 02       		.byte	0x2
 1263 04d8 00       		.byte	0
 1264 04d9 12       		.uleb128 0x12
 1265 04da 76000000 		.4byte	0x76
 1266 04de 0A       		.uleb128 0xa
 1267 04df 01       		.byte	0x1
 1268 04e0 37000000 		.4byte	0x37
 1269 04e4 01       		.byte	0x1
 1270 04e5 6A       		.byte	0x6a
 1271 04e6 F7040000 		.4byte	0x4f7
 1272 04ea 08       		.uleb128 0x8
 1273 04eb 8A0F0000 		.4byte	.LASF154
 1274 04ef 00       		.byte	0
 1275 04f0 08       		.uleb128 0x8
 1276 04f1 26010000 		.4byte	.LASF155
 1277 04f5 01       		.byte	0x1
 1278 04f6 00       		.byte	0
 1279 04f7 03       		.uleb128 0x3
 1280 04f8 61010000 		.4byte	.LASF156
 1281 04fc 01       		.byte	0x1
 1282 04fd 6E       		.byte	0x6e
 1283 04fe DE040000 		.4byte	0x4de
 1284 0502 13       		.uleb128 0x13
 1285 0503 03040000 		.4byte	.LASF157
 1286 0507 02       		.byte	0x2
 1287 0508 2A       		.byte	0x2a
 1288 0509 81000000 		.4byte	0x81
 1289 050d 03       		.byte	0x3
 1290 050e 1E050000 		.4byte	0x51e
 1291 0512 14       		.uleb128 0x14
 1292 0513 73706900 		.ascii	"spi\000"
 1293 0517 02       		.byte	0x2
 1294 0518 2A       		.byte	0x2a
 1295 0519 1E050000 		.4byte	0x51e
 1296 051d 00       		.byte	0
 1297 051e 09       		.uleb128 0x9
 1298 051f 04       		.byte	0x4
 1299 0520 D9040000 		.4byte	0x4d9
 1300 0524 13       		.uleb128 0x13
 1301 0525 440B0000 		.4byte	.LASF158
 1302 0529 02       		.byte	0x2
 1303 052a 30       		.byte	0x30
 1304 052b 81000000 		.4byte	0x81
 1305 052f 03       		.byte	0x3
 1306 0530 40050000 		.4byte	0x540
 1307 0534 14       		.uleb128 0x14
 1308 0535 73706900 		.ascii	"spi\000"
 1309 0539 02       		.byte	0x2
 1310 053a 30       		.byte	0x30
 1311 053b 1E050000 		.4byte	0x51e
 1312 053f 00       		.byte	0
 1313 0540 15       		.uleb128 0x15
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 43


 1314 0541 250A0000 		.4byte	.LASF159
 1315 0545 01       		.byte	0x1
 1316 0546 4603     		.2byte	0x346
 1317 0548 F7040000 		.4byte	0x4f7
 1318 054c 03       		.byte	0x3
 1319 054d 5E050000 		.4byte	0x55e
 1320 0551 16       		.uleb128 0x16
 1321 0552 A60D0000 		.4byte	.LASF160
 1322 0556 01       		.byte	0x1
 1323 0557 4603     		.2byte	0x346
 1324 0559 76000000 		.4byte	0x76
 1325 055d 00       		.byte	0
 1326 055e 15       		.uleb128 0x15
 1327 055f 12050000 		.4byte	.LASF161
 1328 0563 01       		.byte	0x1
 1329 0564 DA02     		.2byte	0x2da
 1330 0566 F7040000 		.4byte	0x4f7
 1331 056a 03       		.byte	0x3
 1332 056b 88050000 		.4byte	0x588
 1333 056f 16       		.uleb128 0x16
 1334 0570 A60D0000 		.4byte	.LASF160
 1335 0574 01       		.byte	0x1
 1336 0575 DA02     		.2byte	0x2da
 1337 0577 76000000 		.4byte	0x76
 1338 057b 16       		.uleb128 0x16
 1339 057c E6140000 		.4byte	.LASF162
 1340 0580 01       		.byte	0x1
 1341 0581 DA02     		.2byte	0x2da
 1342 0583 76000000 		.4byte	0x76
 1343 0587 00       		.byte	0
 1344 0588 15       		.uleb128 0x15
 1345 0589 2A070000 		.4byte	.LASF163
 1346 058d 01       		.byte	0x1
 1347 058e C602     		.2byte	0x2c6
 1348 0590 F7040000 		.4byte	0x4f7
 1349 0594 03       		.byte	0x3
 1350 0595 A6050000 		.4byte	0x5a6
 1351 0599 16       		.uleb128 0x16
 1352 059a E6140000 		.4byte	.LASF162
 1353 059e 01       		.byte	0x1
 1354 059f C602     		.2byte	0x2c6
 1355 05a1 76000000 		.4byte	0x76
 1356 05a5 00       		.byte	0
 1357 05a6 17       		.uleb128 0x17
 1358 05a7 5E050000 		.4byte	0x55e
 1359 05ab 00000000 		.4byte	.LFB40
 1360 05af 38000000 		.4byte	.LFE40-.LFB40
 1361 05b3 01       		.uleb128 0x1
 1362 05b4 9C       		.byte	0x9c
 1363 05b5 87060000 		.4byte	0x687
 1364 05b9 18       		.uleb128 0x18
 1365 05ba 6F050000 		.4byte	0x56f
 1366 05be 00000000 		.4byte	.LLST0
 1367 05c2 18       		.uleb128 0x18
 1368 05c3 7B050000 		.4byte	0x57b
 1369 05c7 21000000 		.4byte	.LLST1
 1370 05cb 19       		.uleb128 0x19
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 44


 1371 05cc 88050000 		.4byte	0x588
 1372 05d0 0E000000 		.4byte	.LBB19
 1373 05d4 18000000 		.4byte	.LBE19-.LBB19
 1374 05d8 01       		.byte	0x1
 1375 05d9 DF02     		.2byte	0x2df
 1376 05db 50060000 		.4byte	0x650
 1377 05df 18       		.uleb128 0x18
 1378 05e0 99050000 		.4byte	0x599
 1379 05e4 42000000 		.4byte	.LLST2
 1380 05e8 19       		.uleb128 0x19
 1381 05e9 02050000 		.4byte	0x502
 1382 05ed 0E000000 		.4byte	.LBB21
 1383 05f1 04000000 		.4byte	.LBE21-.LBB21
 1384 05f5 01       		.byte	0x1
 1385 05f6 C802     		.2byte	0x2c8
 1386 05f8 0F060000 		.4byte	0x60f
 1387 05fc 18       		.uleb128 0x18
 1388 05fd 12050000 		.4byte	0x512
 1389 0601 55000000 		.4byte	.LLST3
 1390 0605 1A       		.uleb128 0x1a
 1391 0606 12000000 		.4byte	.LVL4
 1392 060a EB0B0000 		.4byte	0xbeb
 1393 060e 00       		.byte	0
 1394 060f 19       		.uleb128 0x19
 1395 0610 24050000 		.4byte	0x524
 1396 0614 1E000000 		.4byte	.LBB23
 1397 0618 04000000 		.4byte	.LBE23-.LBB23
 1398 061c 01       		.byte	0x1
 1399 061d CA02     		.2byte	0x2ca
 1400 061f 36060000 		.4byte	0x636
 1401 0623 18       		.uleb128 0x18
 1402 0624 34050000 		.4byte	0x534
 1403 0628 6D000000 		.4byte	.LLST4
 1404 062c 1A       		.uleb128 0x1a
 1405 062d 22000000 		.4byte	.LVL6
 1406 0631 EB0B0000 		.4byte	0xbeb
 1407 0635 00       		.byte	0
 1408 0636 1B       		.uleb128 0x1b
 1409 0637 1E000000 		.4byte	.LVL5
 1410 063b F60B0000 		.4byte	0xbf6
 1411 063f 1C       		.uleb128 0x1c
 1412 0640 01       		.uleb128 0x1
 1413 0641 50       		.byte	0x50
 1414 0642 05       		.uleb128 0x5
 1415 0643 03       		.byte	0x3
 1416 0644 00000000 		.4byte	spi
 1417 0648 1C       		.uleb128 0x1c
 1418 0649 01       		.uleb128 0x1
 1419 064a 51       		.byte	0x51
 1420 064b 02       		.uleb128 0x2
 1421 064c 75       		.byte	0x75
 1422 064d 00       		.sleb128 0
 1423 064e 00       		.byte	0
 1424 064f 00       		.byte	0
 1425 0650 1D       		.uleb128 0x1d
 1426 0651 0E000000 		.4byte	.LVL3
 1427 0655 010C0000 		.4byte	0xc01
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 45


 1428 0659 6D060000 		.4byte	0x66d
 1429 065d 1C       		.uleb128 0x1c
 1430 065e 01       		.uleb128 0x1
 1431 065f 50       		.byte	0x50
 1432 0660 05       		.uleb128 0x5
 1433 0661 03       		.byte	0x3
 1434 0662 00000000 		.4byte	spi
 1435 0666 1C       		.uleb128 0x1c
 1436 0667 01       		.uleb128 0x1
 1437 0668 51       		.byte	0x51
 1438 0669 02       		.uleb128 0x2
 1439 066a 74       		.byte	0x74
 1440 066b 00       		.sleb128 0
 1441 066c 00       		.byte	0
 1442 066d 1B       		.uleb128 0x1b
 1443 066e 2E000000 		.4byte	.LVL8
 1444 0672 0C0C0000 		.4byte	0xc0c
 1445 0676 1C       		.uleb128 0x1c
 1446 0677 01       		.uleb128 0x1
 1447 0678 50       		.byte	0x50
 1448 0679 05       		.uleb128 0x5
 1449 067a 03       		.byte	0x3
 1450 067b 00000000 		.4byte	spi
 1451 067f 1C       		.uleb128 0x1c
 1452 0680 01       		.uleb128 0x1
 1453 0681 51       		.byte	0x51
 1454 0682 02       		.uleb128 0x2
 1455 0683 74       		.byte	0x74
 1456 0684 00       		.sleb128 0
 1457 0685 00       		.byte	0
 1458 0686 00       		.byte	0
 1459 0687 1E       		.uleb128 0x1e
 1460 0688 BF0F0000 		.4byte	.LASF166
 1461 068c 03       		.byte	0x3
 1462 068d 20       		.byte	0x20
 1463 068e 00000000 		.4byte	.LFB53
 1464 0692 3C000000 		.4byte	.LFE53-.LFB53
 1465 0696 01       		.uleb128 0x1
 1466 0697 9C       		.byte	0x9c
 1467 0698 DC060000 		.4byte	0x6dc
 1468 069c 1F       		.uleb128 0x1f
 1469 069d F70D0000 		.4byte	.LASF164
 1470 06a1 03       		.byte	0x3
 1471 06a2 22       		.byte	0x22
 1472 06a3 5A040000 		.4byte	0x45a
 1473 06a7 02       		.uleb128 0x2
 1474 06a8 91       		.byte	0x91
 1475 06a9 6C       		.sleb128 -20
 1476 06aa 1F       		.uleb128 0x1f
 1477 06ab 24050000 		.4byte	.LASF165
 1478 06af 03       		.byte	0x3
 1479 06b0 24       		.byte	0x24
 1480 06b1 81000000 		.4byte	0x81
 1481 06b5 02       		.uleb128 0x2
 1482 06b6 91       		.byte	0x91
 1483 06b7 6B       		.sleb128 -21
 1484 06b8 1A       		.uleb128 0x1a
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 46


 1485 06b9 08000000 		.4byte	.LVL9
 1486 06bd 170C0000 		.4byte	0xc17
 1487 06c1 1B       		.uleb128 0x1b
 1488 06c2 30000000 		.4byte	.LVL10
 1489 06c6 220C0000 		.4byte	0xc22
 1490 06ca 1C       		.uleb128 0x1c
 1491 06cb 01       		.uleb128 0x1
 1492 06cc 50       		.byte	0x50
 1493 06cd 02       		.uleb128 0x2
 1494 06ce 91       		.byte	0x91
 1495 06cf 6C       		.sleb128 -20
 1496 06d0 1C       		.uleb128 0x1c
 1497 06d1 01       		.uleb128 0x1
 1498 06d2 51       		.byte	0x51
 1499 06d3 01       		.uleb128 0x1
 1500 06d4 30       		.byte	0x30
 1501 06d5 1C       		.uleb128 0x1c
 1502 06d6 01       		.uleb128 0x1
 1503 06d7 53       		.byte	0x53
 1504 06d8 01       		.uleb128 0x1
 1505 06d9 30       		.byte	0x30
 1506 06da 00       		.byte	0
 1507 06db 00       		.byte	0
 1508 06dc 1E       		.uleb128 0x1e
 1509 06dd A1080000 		.4byte	.LASF167
 1510 06e1 03       		.byte	0x3
 1511 06e2 32       		.byte	0x32
 1512 06e3 00000000 		.4byte	.LFB54
 1513 06e7 58000000 		.4byte	.LFE54-.LFB54
 1514 06eb 01       		.uleb128 0x1
 1515 06ec 9C       		.byte	0x9c
 1516 06ed 2E070000 		.4byte	0x72e
 1517 06f1 1F       		.uleb128 0x1f
 1518 06f2 F70D0000 		.4byte	.LASF164
 1519 06f6 03       		.byte	0x3
 1520 06f7 37       		.byte	0x37
 1521 06f8 5A040000 		.4byte	0x45a
 1522 06fc 02       		.uleb128 0x2
 1523 06fd 91       		.byte	0x91
 1524 06fe 6C       		.sleb128 -20
 1525 06ff 1D       		.uleb128 0x1d
 1526 0700 24000000 		.4byte	.LVL11
 1527 0704 220C0000 		.4byte	0xc22
 1528 0708 1D070000 		.4byte	0x71d
 1529 070c 1C       		.uleb128 0x1c
 1530 070d 01       		.uleb128 0x1
 1531 070e 50       		.byte	0x50
 1532 070f 02       		.uleb128 0x2
 1533 0710 91       		.byte	0x91
 1534 0711 6C       		.sleb128 -20
 1535 0712 1C       		.uleb128 0x1c
 1536 0713 01       		.uleb128 0x1
 1537 0714 51       		.byte	0x51
 1538 0715 01       		.uleb128 0x1
 1539 0716 30       		.byte	0x30
 1540 0717 1C       		.uleb128 0x1c
 1541 0718 01       		.uleb128 0x1
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 47


 1542 0719 53       		.byte	0x53
 1543 071a 01       		.uleb128 0x1
 1544 071b 30       		.byte	0x30
 1545 071c 00       		.byte	0
 1546 071d 1B       		.uleb128 0x1b
 1547 071e 3C000000 		.4byte	.LVL12
 1548 0722 2E0C0000 		.4byte	0xc2e
 1549 0726 1C       		.uleb128 0x1c
 1550 0727 01       		.uleb128 0x1
 1551 0728 51       		.byte	0x51
 1552 0729 02       		.uleb128 0x2
 1553 072a 91       		.byte	0x91
 1554 072b 6C       		.sleb128 -20
 1555 072c 00       		.byte	0
 1556 072d 00       		.byte	0
 1557 072e 20       		.uleb128 0x20
 1558 072f 87060000 		.4byte	.LASF203
 1559 0733 03       		.byte	0x3
 1560 0734 4A       		.byte	0x4a
 1561 0735 00000000 		.4byte	.LFB55
 1562 0739 A4000000 		.4byte	.LFE55-.LFB55
 1563 073d 01       		.uleb128 0x1
 1564 073e 9C       		.byte	0x9c
 1565 073f FB070000 		.4byte	0x7fb
 1566 0743 21       		.uleb128 0x21
 1567 0744 0C080000 		.4byte	.LASF168
 1568 0748 03       		.byte	0x3
 1569 0749 4A       		.byte	0x4a
 1570 074a 99000000 		.4byte	0x99
 1571 074e 85000000 		.4byte	.LLST5
 1572 0752 21       		.uleb128 0x21
 1573 0753 CA120000 		.4byte	.LASF169
 1574 0757 03       		.byte	0x3
 1575 0758 4A       		.byte	0x4a
 1576 0759 C8000000 		.4byte	0xc8
 1577 075d D8000000 		.4byte	.LLST6
 1578 0761 22       		.uleb128 0x22
 1579 0762 A3050000 		.4byte	.LASF170
 1580 0766 03       		.byte	0x3
 1581 0767 4C       		.byte	0x4c
 1582 0768 FB070000 		.4byte	0x7fb
 1583 076c 30010000 		.4byte	.LLST7
 1584 0770 1D       		.uleb128 0x1d
 1585 0771 26000000 		.4byte	.LVL15
 1586 0775 390C0000 		.4byte	0xc39
 1587 0779 83070000 		.4byte	0x783
 1588 077d 1C       		.uleb128 0x1c
 1589 077e 01       		.uleb128 0x1
 1590 077f 50       		.byte	0x50
 1591 0780 01       		.uleb128 0x1
 1592 0781 30       		.byte	0x30
 1593 0782 00       		.byte	0
 1594 0783 1A       		.uleb128 0x1a
 1595 0784 2A000000 		.4byte	.LVL16
 1596 0788 450C0000 		.4byte	0xc45
 1597 078c 1A       		.uleb128 0x1a
 1598 078d 30000000 		.4byte	.LVL18
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 48


 1599 0791 87060000 		.4byte	0x687
 1600 0795 1A       		.uleb128 0x1a
 1601 0796 34000000 		.4byte	.LVL19
 1602 079a DC060000 		.4byte	0x6dc
 1603 079e 1A       		.uleb128 0x1a
 1604 079f 38000000 		.4byte	.LVL20
 1605 07a3 500C0000 		.4byte	0xc50
 1606 07a7 1D       		.uleb128 0x1d
 1607 07a8 4C000000 		.4byte	.LVL24
 1608 07ac 220C0000 		.4byte	0xc22
 1609 07b0 C0070000 		.4byte	0x7c0
 1610 07b4 1C       		.uleb128 0x1c
 1611 07b5 01       		.uleb128 0x1
 1612 07b6 50       		.byte	0x50
 1613 07b7 02       		.uleb128 0x2
 1614 07b8 74       		.byte	0x74
 1615 07b9 04       		.sleb128 4
 1616 07ba 1C       		.uleb128 0x1c
 1617 07bb 01       		.uleb128 0x1
 1618 07bc 51       		.byte	0x51
 1619 07bd 01       		.uleb128 0x1
 1620 07be 30       		.byte	0x30
 1621 07bf 00       		.byte	0
 1622 07c0 1A       		.uleb128 0x1a
 1623 07c1 5E000000 		.4byte	.LVL25
 1624 07c5 5B0C0000 		.4byte	0xc5b
 1625 07c9 1A       		.uleb128 0x1a
 1626 07ca 6C000000 		.4byte	.LVL26
 1627 07ce 660C0000 		.4byte	0xc66
 1628 07d2 1D       		.uleb128 0x1d
 1629 07d3 80000000 		.4byte	.LVL27
 1630 07d7 220C0000 		.4byte	0xc22
 1631 07db F1070000 		.4byte	0x7f1
 1632 07df 1C       		.uleb128 0x1c
 1633 07e0 01       		.uleb128 0x1
 1634 07e1 50       		.byte	0x50
 1635 07e2 02       		.uleb128 0x2
 1636 07e3 74       		.byte	0x74
 1637 07e4 04       		.sleb128 4
 1638 07e5 1C       		.uleb128 0x1c
 1639 07e6 01       		.uleb128 0x1
 1640 07e7 51       		.byte	0x51
 1641 07e8 01       		.uleb128 0x1
 1642 07e9 30       		.byte	0x30
 1643 07ea 1C       		.uleb128 0x1c
 1644 07eb 01       		.uleb128 0x1
 1645 07ec 52       		.byte	0x52
 1646 07ed 02       		.uleb128 0x2
 1647 07ee 75       		.byte	0x75
 1648 07ef 00       		.sleb128 0
 1649 07f0 00       		.byte	0
 1650 07f1 1A       		.uleb128 0x1a
 1651 07f2 98000000 		.4byte	.LVL28
 1652 07f6 660C0000 		.4byte	0xc66
 1653 07fa 00       		.byte	0
 1654 07fb 09       		.uleb128 0x9
 1655 07fc 04       		.byte	0x4
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 49


 1656 07fd 86040000 		.4byte	0x486
 1657 0801 23       		.uleb128 0x23
 1658 0802 58140000 		.4byte	.LASF204
 1659 0806 03       		.byte	0x3
 1660 0807 7F       		.byte	0x7f
 1661 0808 68000000 		.4byte	0x68
 1662 080c 00000000 		.4byte	.LFB56
 1663 0810 FC000000 		.4byte	.LFE56-.LFB56
 1664 0814 01       		.uleb128 0x1
 1665 0815 9C       		.byte	0x9c
 1666 0816 410B0000 		.4byte	0xb41
 1667 081a 24       		.uleb128 0x24
 1668 081b D60E0000 		.4byte	.LASF171
 1669 081f 03       		.byte	0x3
 1670 0820 8E       		.byte	0x8e
 1671 0821 68000000 		.4byte	0x68
 1672 0825 00       		.byte	0
 1673 0826 25       		.uleb128 0x25
 1674 0827 6E756D00 		.ascii	"num\000"
 1675 082b 03       		.byte	0x3
 1676 082c 90       		.byte	0x90
 1677 082d 410B0000 		.4byte	0xb41
 1678 0831 26       		.uleb128 0x26
 1679 0832 40050000 		.4byte	0x540
 1680 0836 2A000000 		.4byte	.LBB48
 1681 083a 08000000 		.4byte	.LBE48-.LBB48
 1682 083e 03       		.byte	0x3
 1683 083f 8C       		.byte	0x8c
 1684 0840 62080000 		.4byte	0x862
 1685 0844 18       		.uleb128 0x18
 1686 0845 51050000 		.4byte	0x551
 1687 0849 4E010000 		.4byte	.LLST8
 1688 084d 1B       		.uleb128 0x1b
 1689 084e 32000000 		.4byte	.LVL36
 1690 0852 5E050000 		.4byte	0x55e
 1691 0856 1C       		.uleb128 0x1c
 1692 0857 01       		.uleb128 0x1
 1693 0858 50       		.byte	0x50
 1694 0859 01       		.uleb128 0x1
 1695 085a 30       		.byte	0x30
 1696 085b 1C       		.uleb128 0x1c
 1697 085c 01       		.uleb128 0x1
 1698 085d 51       		.byte	0x51
 1699 085e 01       		.uleb128 0x1
 1700 085f 38       		.byte	0x38
 1701 0860 00       		.byte	0
 1702 0861 00       		.byte	0
 1703 0862 27       		.uleb128 0x27
 1704 0863 32000000 		.4byte	.LBB50
 1705 0867 32000000 		.4byte	.LBE50-.LBB50
 1706 086b A3080000 		.4byte	0x8a3
 1707 086f 28       		.uleb128 0x28
 1708 0870 6D00     		.ascii	"m\000"
 1709 0872 03       		.byte	0x3
 1710 0873 92       		.byte	0x92
 1711 0874 68000000 		.4byte	0x68
 1712 0878 62010000 		.4byte	.LLST9
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 50


 1713 087c 29       		.uleb128 0x29
 1714 087d 00000000 		.4byte	.Ldebug_ranges0+0
 1715 0881 28       		.uleb128 0x28
 1716 0882 6E00     		.ascii	"n\000"
 1717 0884 03       		.byte	0x3
 1718 0885 93       		.byte	0x93
 1719 0886 68000000 		.4byte	0x68
 1720 088a 81010000 		.4byte	.LLST10
 1721 088e 29       		.uleb128 0x29
 1722 088f 18000000 		.4byte	.Ldebug_ranges0+0x18
 1723 0893 28       		.uleb128 0x28
 1724 0894 6A00     		.ascii	"j\000"
 1725 0896 03       		.byte	0x3
 1726 0897 94       		.byte	0x94
 1727 0898 68000000 		.4byte	0x68
 1728 089c 9F010000 		.4byte	.LLST11
 1729 08a0 00       		.byte	0
 1730 08a1 00       		.byte	0
 1731 08a2 00       		.byte	0
 1732 08a3 26       		.uleb128 0x26
 1733 08a4 5E050000 		.4byte	0x55e
 1734 08a8 64000000 		.4byte	.LBB55
 1735 08ac 2A000000 		.4byte	.LBE55-.LBB55
 1736 08b0 03       		.byte	0x3
 1737 08b1 9D       		.byte	0x9d
 1738 08b2 7E090000 		.4byte	0x97e
 1739 08b6 18       		.uleb128 0x18
 1740 08b7 7B050000 		.4byte	0x57b
 1741 08bb BD010000 		.4byte	.LLST12
 1742 08bf 18       		.uleb128 0x18
 1743 08c0 6F050000 		.4byte	0x56f
 1744 08c4 D1010000 		.4byte	.LLST13
 1745 08c8 19       		.uleb128 0x19
 1746 08c9 88050000 		.4byte	0x588
 1747 08cd 6C000000 		.4byte	.LBB57
 1748 08d1 18000000 		.4byte	.LBE57-.LBB57
 1749 08d5 01       		.byte	0x1
 1750 08d6 DF02     		.2byte	0x2df
 1751 08d8 4C090000 		.4byte	0x94c
 1752 08dc 18       		.uleb128 0x18
 1753 08dd 99050000 		.4byte	0x599
 1754 08e1 E5010000 		.4byte	.LLST14
 1755 08e5 19       		.uleb128 0x19
 1756 08e6 02050000 		.4byte	0x502
 1757 08ea 6C000000 		.4byte	.LBB59
 1758 08ee 04000000 		.4byte	.LBE59-.LBB59
 1759 08f2 01       		.byte	0x1
 1760 08f3 C802     		.2byte	0x2c8
 1761 08f5 0C090000 		.4byte	0x90c
 1762 08f9 18       		.uleb128 0x18
 1763 08fa 12050000 		.4byte	0x512
 1764 08fe F9010000 		.4byte	.LLST15
 1765 0902 1A       		.uleb128 0x1a
 1766 0903 70000000 		.4byte	.LVL47
 1767 0907 EB0B0000 		.4byte	0xbeb
 1768 090b 00       		.byte	0
 1769 090c 19       		.uleb128 0x19
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 51


 1770 090d 24050000 		.4byte	0x524
 1771 0911 7C000000 		.4byte	.LBB61
 1772 0915 04000000 		.4byte	.LBE61-.LBB61
 1773 0919 01       		.byte	0x1
 1774 091a CA02     		.2byte	0x2ca
 1775 091c 33090000 		.4byte	0x933
 1776 0920 18       		.uleb128 0x18
 1777 0921 34050000 		.4byte	0x534
 1778 0925 11020000 		.4byte	.LLST16
 1779 0929 1A       		.uleb128 0x1a
 1780 092a 80000000 		.4byte	.LVL49
 1781 092e EB0B0000 		.4byte	0xbeb
 1782 0932 00       		.byte	0
 1783 0933 1B       		.uleb128 0x1b
 1784 0934 7C000000 		.4byte	.LVL48
 1785 0938 F60B0000 		.4byte	0xbf6
 1786 093c 1C       		.uleb128 0x1c
 1787 093d 01       		.uleb128 0x1
 1788 093e 50       		.byte	0x50
 1789 093f 05       		.uleb128 0x5
 1790 0940 03       		.byte	0x3
 1791 0941 00000000 		.4byte	spi
 1792 0945 1C       		.uleb128 0x1c
 1793 0946 01       		.uleb128 0x1
 1794 0947 51       		.byte	0x51
 1795 0948 01       		.uleb128 0x1
 1796 0949 42       		.byte	0x42
 1797 094a 00       		.byte	0
 1798 094b 00       		.byte	0
 1799 094c 1D       		.uleb128 0x1d
 1800 094d 6C000000 		.4byte	.LVL46
 1801 0951 010C0000 		.4byte	0xc01
 1802 0955 68090000 		.4byte	0x968
 1803 0959 1C       		.uleb128 0x1c
 1804 095a 01       		.uleb128 0x1
 1805 095b 50       		.byte	0x50
 1806 095c 05       		.uleb128 0x5
 1807 095d 03       		.byte	0x3
 1808 095e 00000000 		.4byte	spi
 1809 0962 1C       		.uleb128 0x1c
 1810 0963 01       		.uleb128 0x1
 1811 0964 51       		.byte	0x51
 1812 0965 01       		.uleb128 0x1
 1813 0966 30       		.byte	0x30
 1814 0967 00       		.byte	0
 1815 0968 1B       		.uleb128 0x1b
 1816 0969 8E000000 		.4byte	.LVL51
 1817 096d 0C0C0000 		.4byte	0xc0c
 1818 0971 1C       		.uleb128 0x1c
 1819 0972 01       		.uleb128 0x1
 1820 0973 50       		.byte	0x50
 1821 0974 02       		.uleb128 0x2
 1822 0975 74       		.byte	0x74
 1823 0976 00       		.sleb128 0
 1824 0977 1C       		.uleb128 0x1c
 1825 0978 01       		.uleb128 0x1
 1826 0979 51       		.byte	0x51
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 52


 1827 097a 01       		.uleb128 0x1
 1828 097b 30       		.byte	0x30
 1829 097c 00       		.byte	0
 1830 097d 00       		.byte	0
 1831 097e 26       		.uleb128 0x26
 1832 097f 40050000 		.4byte	0x540
 1833 0983 8E000000 		.4byte	.LBB63
 1834 0987 28000000 		.4byte	.LBE63-.LBB63
 1835 098b 03       		.byte	0x3
 1836 098c 9E       		.byte	0x9e
 1837 098d 6D0A0000 		.4byte	0xa6d
 1838 0991 18       		.uleb128 0x18
 1839 0992 51050000 		.4byte	0x551
 1840 0996 29020000 		.4byte	.LLST17
 1841 099a 2A       		.uleb128 0x2a
 1842 099b 5E050000 		.4byte	0x55e
 1843 099f 8E000000 		.4byte	.LBB64
 1844 09a3 28000000 		.4byte	.LBE64-.LBB64
 1845 09a7 01       		.byte	0x1
 1846 09a8 4903     		.2byte	0x349
 1847 09aa 18       		.uleb128 0x18
 1848 09ab 7B050000 		.4byte	0x57b
 1849 09af 3D020000 		.4byte	.LLST18
 1850 09b3 18       		.uleb128 0x18
 1851 09b4 6F050000 		.4byte	0x56f
 1852 09b8 29020000 		.4byte	.LLST17
 1853 09bc 19       		.uleb128 0x19
 1854 09bd 88050000 		.4byte	0x588
 1855 09c1 96000000 		.4byte	.LBB66
 1856 09c5 18000000 		.4byte	.LBE66-.LBB66
 1857 09c9 01       		.byte	0x1
 1858 09ca DF02     		.2byte	0x2df
 1859 09cc 3D0A0000 		.4byte	0xa3d
 1860 09d0 18       		.uleb128 0x18
 1861 09d1 99050000 		.4byte	0x599
 1862 09d5 51020000 		.4byte	.LLST20
 1863 09d9 19       		.uleb128 0x19
 1864 09da 02050000 		.4byte	0x502
 1865 09de 96000000 		.4byte	.LBB68
 1866 09e2 04000000 		.4byte	.LBE68-.LBB68
 1867 09e6 01       		.byte	0x1
 1868 09e7 C802     		.2byte	0x2c8
 1869 09e9 000A0000 		.4byte	0xa00
 1870 09ed 18       		.uleb128 0x18
 1871 09ee 12050000 		.4byte	0x512
 1872 09f2 65020000 		.4byte	.LLST21
 1873 09f6 1A       		.uleb128 0x1a
 1874 09f7 9A000000 		.4byte	.LVL53
 1875 09fb EB0B0000 		.4byte	0xbeb
 1876 09ff 00       		.byte	0
 1877 0a00 19       		.uleb128 0x19
 1878 0a01 24050000 		.4byte	0x524
 1879 0a05 A6000000 		.4byte	.LBB70
 1880 0a09 04000000 		.4byte	.LBE70-.LBB70
 1881 0a0d 01       		.byte	0x1
 1882 0a0e CA02     		.2byte	0x2ca
 1883 0a10 270A0000 		.4byte	0xa27
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 53


 1884 0a14 18       		.uleb128 0x18
 1885 0a15 34050000 		.4byte	0x534
 1886 0a19 7D020000 		.4byte	.LLST22
 1887 0a1d 1A       		.uleb128 0x1a
 1888 0a1e AA000000 		.4byte	.LVL55
 1889 0a22 EB0B0000 		.4byte	0xbeb
 1890 0a26 00       		.byte	0
 1891 0a27 1B       		.uleb128 0x1b
 1892 0a28 A6000000 		.4byte	.LVL54
 1893 0a2c F60B0000 		.4byte	0xbf6
 1894 0a30 1C       		.uleb128 0x1c
 1895 0a31 01       		.uleb128 0x1
 1896 0a32 50       		.byte	0x50
 1897 0a33 02       		.uleb128 0x2
 1898 0a34 74       		.byte	0x74
 1899 0a35 00       		.sleb128 0
 1900 0a36 1C       		.uleb128 0x1c
 1901 0a37 01       		.uleb128 0x1
 1902 0a38 51       		.byte	0x51
 1903 0a39 01       		.uleb128 0x1
 1904 0a3a 38       		.byte	0x38
 1905 0a3b 00       		.byte	0
 1906 0a3c 00       		.byte	0
 1907 0a3d 1D       		.uleb128 0x1d
 1908 0a3e 96000000 		.4byte	.LVL52
 1909 0a42 010C0000 		.4byte	0xc01
 1910 0a46 560A0000 		.4byte	0xa56
 1911 0a4a 1C       		.uleb128 0x1c
 1912 0a4b 01       		.uleb128 0x1
 1913 0a4c 50       		.byte	0x50
 1914 0a4d 02       		.uleb128 0x2
 1915 0a4e 74       		.byte	0x74
 1916 0a4f 00       		.sleb128 0
 1917 0a50 1C       		.uleb128 0x1c
 1918 0a51 01       		.uleb128 0x1
 1919 0a52 51       		.byte	0x51
 1920 0a53 01       		.uleb128 0x1
 1921 0a54 30       		.byte	0x30
 1922 0a55 00       		.byte	0
 1923 0a56 1B       		.uleb128 0x1b
 1924 0a57 B6000000 		.4byte	.LVL57
 1925 0a5b 0C0C0000 		.4byte	0xc0c
 1926 0a5f 1C       		.uleb128 0x1c
 1927 0a60 01       		.uleb128 0x1
 1928 0a61 50       		.byte	0x50
 1929 0a62 02       		.uleb128 0x2
 1930 0a63 74       		.byte	0x74
 1931 0a64 00       		.sleb128 0
 1932 0a65 1C       		.uleb128 0x1c
 1933 0a66 01       		.uleb128 0x1
 1934 0a67 51       		.byte	0x51
 1935 0a68 01       		.uleb128 0x1
 1936 0a69 30       		.byte	0x30
 1937 0a6a 00       		.byte	0
 1938 0a6b 00       		.byte	0
 1939 0a6c 00       		.byte	0
 1940 0a6d 1A       		.uleb128 0x1a
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 54


 1941 0a6e 08000000 		.4byte	.LVL30
 1942 0a72 720C0000 		.4byte	0xc72
 1943 0a76 1D       		.uleb128 0x1d
 1944 0a77 0E000000 		.4byte	.LVL31
 1945 0a7b 7D0C0000 		.4byte	0xc7d
 1946 0a7f 8A0A0000 		.4byte	0xa8a
 1947 0a83 1C       		.uleb128 0x1c
 1948 0a84 01       		.uleb128 0x1
 1949 0a85 50       		.byte	0x50
 1950 0a86 02       		.uleb128 0x2
 1951 0a87 08       		.byte	0x8
 1952 0a88 FF       		.byte	0xff
 1953 0a89 00       		.byte	0
 1954 0a8a 1D       		.uleb128 0x1d
 1955 0a8b 14000000 		.4byte	.LVL32
 1956 0a8f 880C0000 		.4byte	0xc88
 1957 0a93 9E0A0000 		.4byte	0xa9e
 1958 0a97 1C       		.uleb128 0x1c
 1959 0a98 01       		.uleb128 0x1
 1960 0a99 50       		.byte	0x50
 1961 0a9a 02       		.uleb128 0x2
 1962 0a9b 08       		.byte	0x8
 1963 0a9c FF       		.byte	0xff
 1964 0a9d 00       		.byte	0
 1965 0a9e 1D       		.uleb128 0x1d
 1966 0a9f 1A000000 		.4byte	.LVL33
 1967 0aa3 930C0000 		.4byte	0xc93
 1968 0aa7 B50A0000 		.4byte	0xab5
 1969 0aab 1C       		.uleb128 0x1c
 1970 0aac 01       		.uleb128 0x1
 1971 0aad 50       		.byte	0x50
 1972 0aae 05       		.uleb128 0x5
 1973 0aaf 03       		.byte	0x3
 1974 0ab0 00000000 		.4byte	BleCallBack
 1975 0ab4 00       		.byte	0
 1976 0ab5 1D       		.uleb128 0x1d
 1977 0ab6 22000000 		.4byte	.LVL34
 1978 0aba 9F0C0000 		.4byte	0xc9f
 1979 0abe CD0A0000 		.4byte	0xacd
 1980 0ac2 1C       		.uleb128 0x1c
 1981 0ac3 01       		.uleb128 0x1
 1982 0ac4 50       		.byte	0x50
 1983 0ac5 01       		.uleb128 0x1
 1984 0ac6 30       		.byte	0x30
 1985 0ac7 1C       		.uleb128 0x1c
 1986 0ac8 01       		.uleb128 0x1
 1987 0ac9 51       		.byte	0x51
 1988 0aca 01       		.uleb128 0x1
 1989 0acb 30       		.byte	0x30
 1990 0acc 00       		.byte	0
 1991 0acd 1D       		.uleb128 0x1d
 1992 0ace 2A000000 		.4byte	.LVL35
 1993 0ad2 5E050000 		.4byte	0x55e
 1994 0ad6 E50A0000 		.4byte	0xae5
 1995 0ada 1C       		.uleb128 0x1c
 1996 0adb 01       		.uleb128 0x1
 1997 0adc 50       		.byte	0x50
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 55


 1998 0add 01       		.uleb128 0x1
 1999 0ade 30       		.byte	0x30
 2000 0adf 1C       		.uleb128 0x1c
 2001 0ae0 01       		.uleb128 0x1
 2002 0ae1 51       		.byte	0x51
 2003 0ae2 01       		.uleb128 0x1
 2004 0ae3 40       		.byte	0x40
 2005 0ae4 00       		.byte	0
 2006 0ae5 1D       		.uleb128 0x1d
 2007 0ae6 BC000000 		.4byte	.LVL58
 2008 0aea AB0C0000 		.4byte	0xcab
 2009 0aee F80A0000 		.4byte	0xaf8
 2010 0af2 1C       		.uleb128 0x1c
 2011 0af3 01       		.uleb128 0x1
 2012 0af4 50       		.byte	0x50
 2013 0af5 01       		.uleb128 0x1
 2014 0af6 35       		.byte	0x35
 2015 0af7 00       		.byte	0
 2016 0af8 1D       		.uleb128 0x1d
 2017 0af9 CA000000 		.4byte	.LVL59
 2018 0afd B60C0000 		.4byte	0xcb6
 2019 0b01 1F0B0000 		.4byte	0xb1f
 2020 0b05 1C       		.uleb128 0x1c
 2021 0b06 01       		.uleb128 0x1
 2022 0b07 50       		.byte	0x50
 2023 0b08 01       		.uleb128 0x1
 2024 0b09 30       		.byte	0x30
 2025 0b0a 1C       		.uleb128 0x1c
 2026 0b0b 01       		.uleb128 0x1
 2027 0b0c 51       		.byte	0x51
 2028 0b0d 01       		.uleb128 0x1
 2029 0b0e 30       		.byte	0x30
 2030 0b0f 1C       		.uleb128 0x1c
 2031 0b10 01       		.uleb128 0x1
 2032 0b11 52       		.byte	0x52
 2033 0b12 05       		.uleb128 0x5
 2034 0b13 03       		.byte	0x3
 2035 0b14 00000000 		.4byte	spi_rx_ads1299_status
 2036 0b18 1C       		.uleb128 0x1c
 2037 0b19 01       		.uleb128 0x1
 2038 0b1a 53       		.byte	0x53
 2039 0b1b 02       		.uleb128 0x2
 2040 0b1c 74       		.byte	0x74
 2041 0b1d 00       		.sleb128 0
 2042 0b1e 00       		.byte	0
 2043 0b1f 1A       		.uleb128 0x1a
 2044 0b20 DA000000 		.4byte	.LVL60
 2045 0b24 DC060000 		.4byte	0x6dc
 2046 0b28 1A       		.uleb128 0x1a
 2047 0b29 DE000000 		.4byte	.LVL61
 2048 0b2d C20C0000 		.4byte	0xcc2
 2049 0b31 1B       		.uleb128 0x1b
 2050 0b32 E4000000 		.4byte	.LVL62
 2051 0b36 CE0C0000 		.4byte	0xcce
 2052 0b3a 1C       		.uleb128 0x1c
 2053 0b3b 01       		.uleb128 0x1
 2054 0b3c 50       		.byte	0x50
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 56


 2055 0b3d 01       		.uleb128 0x1
 2056 0b3e 33       		.byte	0x33
 2057 0b3f 00       		.byte	0
 2058 0b40 00       		.byte	0
 2059 0b41 09       		.uleb128 0x9
 2060 0b42 04       		.byte	0x4
 2061 0b43 76000000 		.4byte	0x76
 2062 0b47 2B       		.uleb128 0x2b
 2063 0b48 D8090000 		.4byte	.LASF172
 2064 0b4c 0A       		.byte	0xa
 2065 0b4d B30A     		.2byte	0xab3
 2066 0b4f BD040000 		.4byte	0x4bd
 2067 0b53 2B       		.uleb128 0x2b
 2068 0b54 D40B0000 		.4byte	.LASF173
 2069 0b58 0A       		.byte	0xa
 2070 0b59 B40A     		.2byte	0xab4
 2071 0b5b E1030000 		.4byte	0x3e1
 2072 0b5f 2C       		.uleb128 0x2c
 2073 0b60 73706900 		.ascii	"spi\000"
 2074 0b64 02       		.byte	0x2
 2075 0b65 16       		.byte	0x16
 2076 0b66 76000000 		.4byte	0x76
 2077 0b6a 05       		.uleb128 0x5
 2078 0b6b 03       		.byte	0x3
 2079 0b6c 00000000 		.4byte	spi
 2080 0b70 2D       		.uleb128 0x2d
 2081 0b71 BB0E0000 		.4byte	.LASF174
 2082 0b75 03       		.byte	0x3
 2083 0b76 15       		.byte	0x15
 2084 0b77 8D000000 		.4byte	0x8d
 2085 0b7b 05       		.uleb128 0x5
 2086 0b7c 03       		.byte	0x3
 2087 0b7d 00000000 		.4byte	generated_number
 2088 0b81 2D       		.uleb128 0x2d
 2089 0b82 A70E0000 		.4byte	.LASF175
 2090 0b86 03       		.byte	0x3
 2091 0b87 16       		.byte	0x16
 2092 0b88 8D000000 		.4byte	0x8d
 2093 0b8c 05       		.uleb128 0x5
 2094 0b8d 03       		.byte	0x3
 2095 0b8e 00000000 		.4byte	generated_numberOld
 2096 0b92 2D       		.uleb128 0x2d
 2097 0b93 550F0000 		.4byte	.LASF176
 2098 0b97 03       		.byte	0x3
 2099 0b98 17       		.byte	0x17
 2100 0b99 A30B0000 		.4byte	0xba3
 2101 0b9d 05       		.uleb128 0x5
 2102 0b9e 03       		.byte	0x3
 2103 0b9f 00000000 		.4byte	spi_rx_ads1299_status
 2104 0ba3 12       		.uleb128 0x12
 2105 0ba4 C9040000 		.4byte	0x4c9
 2106 0ba8 10       		.uleb128 0x10
 2107 0ba9 D9040000 		.4byte	0x4d9
 2108 0bad C40B0000 		.4byte	0xbc4
 2109 0bb1 11       		.uleb128 0x11
 2110 0bb2 C1000000 		.4byte	0xc1
 2111 0bb6 FF       		.byte	0xff
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 57


 2112 0bb7 11       		.uleb128 0x11
 2113 0bb8 C1000000 		.4byte	0xc1
 2114 0bbc 07       		.byte	0x7
 2115 0bbd 11       		.uleb128 0x11
 2116 0bbe C1000000 		.4byte	0xc1
 2117 0bc2 02       		.byte	0x2
 2118 0bc3 00       		.byte	0
 2119 0bc4 2D       		.uleb128 0x2d
 2120 0bc5 4B0C0000 		.4byte	.LASF177
 2121 0bc9 03       		.byte	0x3
 2122 0bca 18       		.byte	0x18
 2123 0bcb D50B0000 		.4byte	0xbd5
 2124 0bcf 05       		.uleb128 0x5
 2125 0bd0 03       		.byte	0x3
 2126 0bd1 00000000 		.4byte	spi_rx_data_buffer
 2127 0bd5 12       		.uleb128 0x12
 2128 0bd6 A80B0000 		.4byte	0xba8
 2129 0bda 2D       		.uleb128 0x2d
 2130 0bdb 3C090000 		.4byte	.LASF178
 2131 0bdf 03       		.byte	0x3
 2132 0be0 19       		.byte	0x19
 2133 0be1 68000000 		.4byte	0x68
 2134 0be5 05       		.uleb128 0x5
 2135 0be6 03       		.byte	0x3
 2136 0be7 00000000 		.4byte	numberNotify
 2137 0beb 2E       		.uleb128 0x2e
 2138 0bec 6F130000 		.4byte	.LASF179
 2139 0bf0 6F130000 		.4byte	.LASF179
 2140 0bf4 0B       		.byte	0xb
 2141 0bf5 5C       		.byte	0x5c
 2142 0bf6 2E       		.uleb128 0x2e
 2143 0bf7 6A050000 		.4byte	.LASF180
 2144 0bfb 6A050000 		.4byte	.LASF180
 2145 0bff 02       		.byte	0x2
 2146 0c00 23       		.byte	0x23
 2147 0c01 2E       		.uleb128 0x2e
 2148 0c02 350B0000 		.4byte	.LASF181
 2149 0c06 350B0000 		.4byte	.LASF181
 2150 0c0a 02       		.byte	0x2
 2151 0c0b 25       		.byte	0x25
 2152 0c0c 2E       		.uleb128 0x2e
 2153 0c0d 87010000 		.4byte	.LASF182
 2154 0c11 87010000 		.4byte	.LASF182
 2155 0c15 02       		.byte	0x2
 2156 0c16 26       		.byte	0x26
 2157 0c17 2E       		.uleb128 0x2e
 2158 0c18 CB0C0000 		.4byte	.LASF183
 2159 0c1c CB0C0000 		.4byte	.LASF183
 2160 0c20 0C       		.byte	0xc
 2161 0c21 32       		.byte	0x32
 2162 0c22 2F       		.uleb128 0x2f
 2163 0c23 68060000 		.4byte	.LASF184
 2164 0c27 68060000 		.4byte	.LASF184
 2165 0c2b 0D       		.byte	0xd
 2166 0c2c 8401     		.2byte	0x184
 2167 0c2e 2E       		.uleb128 0x2e
 2168 0c2f C6030000 		.4byte	.LASF185
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 58


 2169 0c33 C6030000 		.4byte	.LASF185
 2170 0c37 09       		.byte	0x9
 2171 0c38 F2       		.byte	0xf2
 2172 0c39 2F       		.uleb128 0x2f
 2173 0c3a DA0D0000 		.4byte	.LASF186
 2174 0c3e DA0D0000 		.4byte	.LASF186
 2175 0c42 0E       		.byte	0xe
 2176 0c43 8002     		.2byte	0x280
 2177 0c45 2E       		.uleb128 0x2e
 2178 0c46 9C110000 		.4byte	.LASF187
 2179 0c4a 9C110000 		.4byte	.LASF187
 2180 0c4e 0F       		.byte	0xf
 2181 0c4f 92       		.byte	0x92
 2182 0c50 2E       		.uleb128 0x2e
 2183 0c51 9C0F0000 		.4byte	.LASF188
 2184 0c55 9C0F0000 		.4byte	.LASF188
 2185 0c59 0F       		.byte	0xf
 2186 0c5a 93       		.byte	0x93
 2187 0c5b 2E       		.uleb128 0x2e
 2188 0c5c 410C0000 		.4byte	.LASF189
 2189 0c60 410C0000 		.4byte	.LASF189
 2190 0c64 0C       		.byte	0xc
 2191 0c65 33       		.byte	0x33
 2192 0c66 2F       		.uleb128 0x2f
 2193 0c67 45130000 		.4byte	.LASF190
 2194 0c6b 45130000 		.4byte	.LASF190
 2195 0c6f 09       		.byte	0x9
 2196 0c70 C201     		.2byte	0x1c2
 2197 0c72 2E       		.uleb128 0x2e
 2198 0c73 72000000 		.4byte	.LASF191
 2199 0c77 72000000 		.4byte	.LASF191
 2200 0c7b 0B       		.byte	0xb
 2201 0c7c 4D       		.byte	0x4d
 2202 0c7d 2E       		.uleb128 0x2e
 2203 0c7e 8C110000 		.4byte	.LASF192
 2204 0c82 8C110000 		.4byte	.LASF192
 2205 0c86 10       		.byte	0x10
 2206 0c87 1D       		.byte	0x1d
 2207 0c88 2E       		.uleb128 0x2e
 2208 0c89 EC130000 		.4byte	.LASF193
 2209 0c8d EC130000 		.4byte	.LASF193
 2210 0c91 11       		.byte	0x11
 2211 0c92 1D       		.byte	0x1d
 2212 0c93 2F       		.uleb128 0x2f
 2213 0c94 8B090000 		.4byte	.LASF194
 2214 0c98 8B090000 		.4byte	.LASF194
 2215 0c9c 0E       		.byte	0xe
 2216 0c9d 7002     		.2byte	0x270
 2217 0c9f 2F       		.uleb128 0x2f
 2218 0ca0 210B0000 		.4byte	.LASF195
 2219 0ca4 210B0000 		.4byte	.LASF195
 2220 0ca8 01       		.byte	0x1
 2221 0ca9 6202     		.2byte	0x262
 2222 0cab 2E       		.uleb128 0x2e
 2223 0cac FB110000 		.4byte	.LASF196
 2224 0cb0 FB110000 		.4byte	.LASF196
 2225 0cb4 12       		.byte	0x12
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 59


 2226 0cb5 D9       		.byte	0xd9
 2227 0cb6 2F       		.uleb128 0x2f
 2228 0cb7 1A140000 		.4byte	.LASF197
 2229 0cbb 1A140000 		.4byte	.LASF197
 2230 0cbf 01       		.byte	0x1
 2231 0cc0 B802     		.2byte	0x2b8
 2232 0cc2 2F       		.uleb128 0x2f
 2233 0cc3 AE080000 		.4byte	.LASF198
 2234 0cc7 AE080000 		.4byte	.LASF198
 2235 0ccb 07       		.byte	0x7
 2236 0ccc CC07     		.2byte	0x7cc
 2237 0cce 2F       		.uleb128 0x2f
 2238 0ccf 54050000 		.4byte	.LASF199
 2239 0cd3 54050000 		.4byte	.LASF199
 2240 0cd7 07       		.byte	0x7
 2241 0cd8 9507     		.2byte	0x795
 2242 0cda 00       		.byte	0
 2243              		.section	.debug_abbrev,"",%progbits
 2244              	.Ldebug_abbrev0:
 2245 0000 01       		.uleb128 0x1
 2246 0001 11       		.uleb128 0x11
 2247 0002 01       		.byte	0x1
 2248 0003 25       		.uleb128 0x25
 2249 0004 0E       		.uleb128 0xe
 2250 0005 13       		.uleb128 0x13
 2251 0006 0B       		.uleb128 0xb
 2252 0007 03       		.uleb128 0x3
 2253 0008 0E       		.uleb128 0xe
 2254 0009 1B       		.uleb128 0x1b
 2255 000a 0E       		.uleb128 0xe
 2256 000b 55       		.uleb128 0x55
 2257 000c 17       		.uleb128 0x17
 2258 000d 11       		.uleb128 0x11
 2259 000e 01       		.uleb128 0x1
 2260 000f 10       		.uleb128 0x10
 2261 0010 17       		.uleb128 0x17
 2262 0011 00       		.byte	0
 2263 0012 00       		.byte	0
 2264 0013 02       		.uleb128 0x2
 2265 0014 24       		.uleb128 0x24
 2266 0015 00       		.byte	0
 2267 0016 0B       		.uleb128 0xb
 2268 0017 0B       		.uleb128 0xb
 2269 0018 3E       		.uleb128 0x3e
 2270 0019 0B       		.uleb128 0xb
 2271 001a 03       		.uleb128 0x3
 2272 001b 0E       		.uleb128 0xe
 2273 001c 00       		.byte	0
 2274 001d 00       		.byte	0
 2275 001e 03       		.uleb128 0x3
 2276 001f 16       		.uleb128 0x16
 2277 0020 00       		.byte	0
 2278 0021 03       		.uleb128 0x3
 2279 0022 0E       		.uleb128 0xe
 2280 0023 3A       		.uleb128 0x3a
 2281 0024 0B       		.uleb128 0xb
 2282 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 60


 2283 0026 0B       		.uleb128 0xb
 2284 0027 49       		.uleb128 0x49
 2285 0028 13       		.uleb128 0x13
 2286 0029 00       		.byte	0
 2287 002a 00       		.byte	0
 2288 002b 04       		.uleb128 0x4
 2289 002c 24       		.uleb128 0x24
 2290 002d 00       		.byte	0
 2291 002e 0B       		.uleb128 0xb
 2292 002f 0B       		.uleb128 0xb
 2293 0030 3E       		.uleb128 0x3e
 2294 0031 0B       		.uleb128 0xb
 2295 0032 03       		.uleb128 0x3
 2296 0033 08       		.uleb128 0x8
 2297 0034 00       		.byte	0
 2298 0035 00       		.byte	0
 2299 0036 05       		.uleb128 0x5
 2300 0037 16       		.uleb128 0x16
 2301 0038 00       		.byte	0
 2302 0039 03       		.uleb128 0x3
 2303 003a 0E       		.uleb128 0xe
 2304 003b 3A       		.uleb128 0x3a
 2305 003c 0B       		.uleb128 0xb
 2306 003d 3B       		.uleb128 0x3b
 2307 003e 05       		.uleb128 0x5
 2308 003f 49       		.uleb128 0x49
 2309 0040 13       		.uleb128 0x13
 2310 0041 00       		.byte	0
 2311 0042 00       		.byte	0
 2312 0043 06       		.uleb128 0x6
 2313 0044 0F       		.uleb128 0xf
 2314 0045 00       		.byte	0
 2315 0046 0B       		.uleb128 0xb
 2316 0047 0B       		.uleb128 0xb
 2317 0048 00       		.byte	0
 2318 0049 00       		.byte	0
 2319 004a 07       		.uleb128 0x7
 2320 004b 04       		.uleb128 0x4
 2321 004c 01       		.byte	0x1
 2322 004d 0B       		.uleb128 0xb
 2323 004e 0B       		.uleb128 0xb
 2324 004f 49       		.uleb128 0x49
 2325 0050 13       		.uleb128 0x13
 2326 0051 3A       		.uleb128 0x3a
 2327 0052 0B       		.uleb128 0xb
 2328 0053 3B       		.uleb128 0x3b
 2329 0054 05       		.uleb128 0x5
 2330 0055 01       		.uleb128 0x1
 2331 0056 13       		.uleb128 0x13
 2332 0057 00       		.byte	0
 2333 0058 00       		.byte	0
 2334 0059 08       		.uleb128 0x8
 2335 005a 28       		.uleb128 0x28
 2336 005b 00       		.byte	0
 2337 005c 03       		.uleb128 0x3
 2338 005d 0E       		.uleb128 0xe
 2339 005e 1C       		.uleb128 0x1c
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 61


 2340 005f 0B       		.uleb128 0xb
 2341 0060 00       		.byte	0
 2342 0061 00       		.byte	0
 2343 0062 09       		.uleb128 0x9
 2344 0063 0F       		.uleb128 0xf
 2345 0064 00       		.byte	0
 2346 0065 0B       		.uleb128 0xb
 2347 0066 0B       		.uleb128 0xb
 2348 0067 49       		.uleb128 0x49
 2349 0068 13       		.uleb128 0x13
 2350 0069 00       		.byte	0
 2351 006a 00       		.byte	0
 2352 006b 0A       		.uleb128 0xa
 2353 006c 04       		.uleb128 0x4
 2354 006d 01       		.byte	0x1
 2355 006e 0B       		.uleb128 0xb
 2356 006f 0B       		.uleb128 0xb
 2357 0070 49       		.uleb128 0x49
 2358 0071 13       		.uleb128 0x13
 2359 0072 3A       		.uleb128 0x3a
 2360 0073 0B       		.uleb128 0xb
 2361 0074 3B       		.uleb128 0x3b
 2362 0075 0B       		.uleb128 0xb
 2363 0076 01       		.uleb128 0x1
 2364 0077 13       		.uleb128 0x13
 2365 0078 00       		.byte	0
 2366 0079 00       		.byte	0
 2367 007a 0B       		.uleb128 0xb
 2368 007b 13       		.uleb128 0x13
 2369 007c 01       		.byte	0x1
 2370 007d 0B       		.uleb128 0xb
 2371 007e 0B       		.uleb128 0xb
 2372 007f 3A       		.uleb128 0x3a
 2373 0080 0B       		.uleb128 0xb
 2374 0081 3B       		.uleb128 0x3b
 2375 0082 05       		.uleb128 0x5
 2376 0083 01       		.uleb128 0x1
 2377 0084 13       		.uleb128 0x13
 2378 0085 00       		.byte	0
 2379 0086 00       		.byte	0
 2380 0087 0C       		.uleb128 0xc
 2381 0088 0D       		.uleb128 0xd
 2382 0089 00       		.byte	0
 2383 008a 03       		.uleb128 0x3
 2384 008b 0E       		.uleb128 0xe
 2385 008c 3A       		.uleb128 0x3a
 2386 008d 0B       		.uleb128 0xb
 2387 008e 3B       		.uleb128 0x3b
 2388 008f 05       		.uleb128 0x5
 2389 0090 49       		.uleb128 0x49
 2390 0091 13       		.uleb128 0x13
 2391 0092 38       		.uleb128 0x38
 2392 0093 0B       		.uleb128 0xb
 2393 0094 00       		.byte	0
 2394 0095 00       		.byte	0
 2395 0096 0D       		.uleb128 0xd
 2396 0097 0D       		.uleb128 0xd
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 62


 2397 0098 00       		.byte	0
 2398 0099 03       		.uleb128 0x3
 2399 009a 08       		.uleb128 0x8
 2400 009b 3A       		.uleb128 0x3a
 2401 009c 0B       		.uleb128 0xb
 2402 009d 3B       		.uleb128 0x3b
 2403 009e 05       		.uleb128 0x5
 2404 009f 49       		.uleb128 0x49
 2405 00a0 13       		.uleb128 0x13
 2406 00a1 38       		.uleb128 0x38
 2407 00a2 0B       		.uleb128 0xb
 2408 00a3 00       		.byte	0
 2409 00a4 00       		.byte	0
 2410 00a5 0E       		.uleb128 0xe
 2411 00a6 13       		.uleb128 0x13
 2412 00a7 01       		.byte	0x1
 2413 00a8 0B       		.uleb128 0xb
 2414 00a9 0B       		.uleb128 0xb
 2415 00aa 3A       		.uleb128 0x3a
 2416 00ab 0B       		.uleb128 0xb
 2417 00ac 3B       		.uleb128 0x3b
 2418 00ad 0B       		.uleb128 0xb
 2419 00ae 01       		.uleb128 0x1
 2420 00af 13       		.uleb128 0x13
 2421 00b0 00       		.byte	0
 2422 00b1 00       		.byte	0
 2423 00b2 0F       		.uleb128 0xf
 2424 00b3 0D       		.uleb128 0xd
 2425 00b4 00       		.byte	0
 2426 00b5 03       		.uleb128 0x3
 2427 00b6 0E       		.uleb128 0xe
 2428 00b7 3A       		.uleb128 0x3a
 2429 00b8 0B       		.uleb128 0xb
 2430 00b9 3B       		.uleb128 0x3b
 2431 00ba 0B       		.uleb128 0xb
 2432 00bb 49       		.uleb128 0x49
 2433 00bc 13       		.uleb128 0x13
 2434 00bd 38       		.uleb128 0x38
 2435 00be 0B       		.uleb128 0xb
 2436 00bf 00       		.byte	0
 2437 00c0 00       		.byte	0
 2438 00c1 10       		.uleb128 0x10
 2439 00c2 01       		.uleb128 0x1
 2440 00c3 01       		.byte	0x1
 2441 00c4 49       		.uleb128 0x49
 2442 00c5 13       		.uleb128 0x13
 2443 00c6 01       		.uleb128 0x1
 2444 00c7 13       		.uleb128 0x13
 2445 00c8 00       		.byte	0
 2446 00c9 00       		.byte	0
 2447 00ca 11       		.uleb128 0x11
 2448 00cb 21       		.uleb128 0x21
 2449 00cc 00       		.byte	0
 2450 00cd 49       		.uleb128 0x49
 2451 00ce 13       		.uleb128 0x13
 2452 00cf 2F       		.uleb128 0x2f
 2453 00d0 0B       		.uleb128 0xb
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 63


 2454 00d1 00       		.byte	0
 2455 00d2 00       		.byte	0
 2456 00d3 12       		.uleb128 0x12
 2457 00d4 35       		.uleb128 0x35
 2458 00d5 00       		.byte	0
 2459 00d6 49       		.uleb128 0x49
 2460 00d7 13       		.uleb128 0x13
 2461 00d8 00       		.byte	0
 2462 00d9 00       		.byte	0
 2463 00da 13       		.uleb128 0x13
 2464 00db 2E       		.uleb128 0x2e
 2465 00dc 01       		.byte	0x1
 2466 00dd 03       		.uleb128 0x3
 2467 00de 0E       		.uleb128 0xe
 2468 00df 3A       		.uleb128 0x3a
 2469 00e0 0B       		.uleb128 0xb
 2470 00e1 3B       		.uleb128 0x3b
 2471 00e2 0B       		.uleb128 0xb
 2472 00e3 27       		.uleb128 0x27
 2473 00e4 19       		.uleb128 0x19
 2474 00e5 49       		.uleb128 0x49
 2475 00e6 13       		.uleb128 0x13
 2476 00e7 20       		.uleb128 0x20
 2477 00e8 0B       		.uleb128 0xb
 2478 00e9 01       		.uleb128 0x1
 2479 00ea 13       		.uleb128 0x13
 2480 00eb 00       		.byte	0
 2481 00ec 00       		.byte	0
 2482 00ed 14       		.uleb128 0x14
 2483 00ee 05       		.uleb128 0x5
 2484 00ef 00       		.byte	0
 2485 00f0 03       		.uleb128 0x3
 2486 00f1 08       		.uleb128 0x8
 2487 00f2 3A       		.uleb128 0x3a
 2488 00f3 0B       		.uleb128 0xb
 2489 00f4 3B       		.uleb128 0x3b
 2490 00f5 0B       		.uleb128 0xb
 2491 00f6 49       		.uleb128 0x49
 2492 00f7 13       		.uleb128 0x13
 2493 00f8 00       		.byte	0
 2494 00f9 00       		.byte	0
 2495 00fa 15       		.uleb128 0x15
 2496 00fb 2E       		.uleb128 0x2e
 2497 00fc 01       		.byte	0x1
 2498 00fd 03       		.uleb128 0x3
 2499 00fe 0E       		.uleb128 0xe
 2500 00ff 3A       		.uleb128 0x3a
 2501 0100 0B       		.uleb128 0xb
 2502 0101 3B       		.uleb128 0x3b
 2503 0102 05       		.uleb128 0x5
 2504 0103 27       		.uleb128 0x27
 2505 0104 19       		.uleb128 0x19
 2506 0105 49       		.uleb128 0x49
 2507 0106 13       		.uleb128 0x13
 2508 0107 20       		.uleb128 0x20
 2509 0108 0B       		.uleb128 0xb
 2510 0109 01       		.uleb128 0x1
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 64


 2511 010a 13       		.uleb128 0x13
 2512 010b 00       		.byte	0
 2513 010c 00       		.byte	0
 2514 010d 16       		.uleb128 0x16
 2515 010e 05       		.uleb128 0x5
 2516 010f 00       		.byte	0
 2517 0110 03       		.uleb128 0x3
 2518 0111 0E       		.uleb128 0xe
 2519 0112 3A       		.uleb128 0x3a
 2520 0113 0B       		.uleb128 0xb
 2521 0114 3B       		.uleb128 0x3b
 2522 0115 05       		.uleb128 0x5
 2523 0116 49       		.uleb128 0x49
 2524 0117 13       		.uleb128 0x13
 2525 0118 00       		.byte	0
 2526 0119 00       		.byte	0
 2527 011a 17       		.uleb128 0x17
 2528 011b 2E       		.uleb128 0x2e
 2529 011c 01       		.byte	0x1
 2530 011d 31       		.uleb128 0x31
 2531 011e 13       		.uleb128 0x13
 2532 011f 11       		.uleb128 0x11
 2533 0120 01       		.uleb128 0x1
 2534 0121 12       		.uleb128 0x12
 2535 0122 06       		.uleb128 0x6
 2536 0123 40       		.uleb128 0x40
 2537 0124 18       		.uleb128 0x18
 2538 0125 9742     		.uleb128 0x2117
 2539 0127 19       		.uleb128 0x19
 2540 0128 01       		.uleb128 0x1
 2541 0129 13       		.uleb128 0x13
 2542 012a 00       		.byte	0
 2543 012b 00       		.byte	0
 2544 012c 18       		.uleb128 0x18
 2545 012d 05       		.uleb128 0x5
 2546 012e 00       		.byte	0
 2547 012f 31       		.uleb128 0x31
 2548 0130 13       		.uleb128 0x13
 2549 0131 02       		.uleb128 0x2
 2550 0132 17       		.uleb128 0x17
 2551 0133 00       		.byte	0
 2552 0134 00       		.byte	0
 2553 0135 19       		.uleb128 0x19
 2554 0136 1D       		.uleb128 0x1d
 2555 0137 01       		.byte	0x1
 2556 0138 31       		.uleb128 0x31
 2557 0139 13       		.uleb128 0x13
 2558 013a 11       		.uleb128 0x11
 2559 013b 01       		.uleb128 0x1
 2560 013c 12       		.uleb128 0x12
 2561 013d 06       		.uleb128 0x6
 2562 013e 58       		.uleb128 0x58
 2563 013f 0B       		.uleb128 0xb
 2564 0140 59       		.uleb128 0x59
 2565 0141 05       		.uleb128 0x5
 2566 0142 01       		.uleb128 0x1
 2567 0143 13       		.uleb128 0x13
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 65


 2568 0144 00       		.byte	0
 2569 0145 00       		.byte	0
 2570 0146 1A       		.uleb128 0x1a
 2571 0147 898201   		.uleb128 0x4109
 2572 014a 00       		.byte	0
 2573 014b 11       		.uleb128 0x11
 2574 014c 01       		.uleb128 0x1
 2575 014d 31       		.uleb128 0x31
 2576 014e 13       		.uleb128 0x13
 2577 014f 00       		.byte	0
 2578 0150 00       		.byte	0
 2579 0151 1B       		.uleb128 0x1b
 2580 0152 898201   		.uleb128 0x4109
 2581 0155 01       		.byte	0x1
 2582 0156 11       		.uleb128 0x11
 2583 0157 01       		.uleb128 0x1
 2584 0158 31       		.uleb128 0x31
 2585 0159 13       		.uleb128 0x13
 2586 015a 00       		.byte	0
 2587 015b 00       		.byte	0
 2588 015c 1C       		.uleb128 0x1c
 2589 015d 8A8201   		.uleb128 0x410a
 2590 0160 00       		.byte	0
 2591 0161 02       		.uleb128 0x2
 2592 0162 18       		.uleb128 0x18
 2593 0163 9142     		.uleb128 0x2111
 2594 0165 18       		.uleb128 0x18
 2595 0166 00       		.byte	0
 2596 0167 00       		.byte	0
 2597 0168 1D       		.uleb128 0x1d
 2598 0169 898201   		.uleb128 0x4109
 2599 016c 01       		.byte	0x1
 2600 016d 11       		.uleb128 0x11
 2601 016e 01       		.uleb128 0x1
 2602 016f 31       		.uleb128 0x31
 2603 0170 13       		.uleb128 0x13
 2604 0171 01       		.uleb128 0x1
 2605 0172 13       		.uleb128 0x13
 2606 0173 00       		.byte	0
 2607 0174 00       		.byte	0
 2608 0175 1E       		.uleb128 0x1e
 2609 0176 2E       		.uleb128 0x2e
 2610 0177 01       		.byte	0x1
 2611 0178 3F       		.uleb128 0x3f
 2612 0179 19       		.uleb128 0x19
 2613 017a 03       		.uleb128 0x3
 2614 017b 0E       		.uleb128 0xe
 2615 017c 3A       		.uleb128 0x3a
 2616 017d 0B       		.uleb128 0xb
 2617 017e 3B       		.uleb128 0x3b
 2618 017f 0B       		.uleb128 0xb
 2619 0180 11       		.uleb128 0x11
 2620 0181 01       		.uleb128 0x1
 2621 0182 12       		.uleb128 0x12
 2622 0183 06       		.uleb128 0x6
 2623 0184 40       		.uleb128 0x40
 2624 0185 18       		.uleb128 0x18
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 66


 2625 0186 9742     		.uleb128 0x2117
 2626 0188 19       		.uleb128 0x19
 2627 0189 01       		.uleb128 0x1
 2628 018a 13       		.uleb128 0x13
 2629 018b 00       		.byte	0
 2630 018c 00       		.byte	0
 2631 018d 1F       		.uleb128 0x1f
 2632 018e 34       		.uleb128 0x34
 2633 018f 00       		.byte	0
 2634 0190 03       		.uleb128 0x3
 2635 0191 0E       		.uleb128 0xe
 2636 0192 3A       		.uleb128 0x3a
 2637 0193 0B       		.uleb128 0xb
 2638 0194 3B       		.uleb128 0x3b
 2639 0195 0B       		.uleb128 0xb
 2640 0196 49       		.uleb128 0x49
 2641 0197 13       		.uleb128 0x13
 2642 0198 02       		.uleb128 0x2
 2643 0199 18       		.uleb128 0x18
 2644 019a 00       		.byte	0
 2645 019b 00       		.byte	0
 2646 019c 20       		.uleb128 0x20
 2647 019d 2E       		.uleb128 0x2e
 2648 019e 01       		.byte	0x1
 2649 019f 3F       		.uleb128 0x3f
 2650 01a0 19       		.uleb128 0x19
 2651 01a1 03       		.uleb128 0x3
 2652 01a2 0E       		.uleb128 0xe
 2653 01a3 3A       		.uleb128 0x3a
 2654 01a4 0B       		.uleb128 0xb
 2655 01a5 3B       		.uleb128 0x3b
 2656 01a6 0B       		.uleb128 0xb
 2657 01a7 27       		.uleb128 0x27
 2658 01a8 19       		.uleb128 0x19
 2659 01a9 11       		.uleb128 0x11
 2660 01aa 01       		.uleb128 0x1
 2661 01ab 12       		.uleb128 0x12
 2662 01ac 06       		.uleb128 0x6
 2663 01ad 40       		.uleb128 0x40
 2664 01ae 18       		.uleb128 0x18
 2665 01af 9742     		.uleb128 0x2117
 2666 01b1 19       		.uleb128 0x19
 2667 01b2 01       		.uleb128 0x1
 2668 01b3 13       		.uleb128 0x13
 2669 01b4 00       		.byte	0
 2670 01b5 00       		.byte	0
 2671 01b6 21       		.uleb128 0x21
 2672 01b7 05       		.uleb128 0x5
 2673 01b8 00       		.byte	0
 2674 01b9 03       		.uleb128 0x3
 2675 01ba 0E       		.uleb128 0xe
 2676 01bb 3A       		.uleb128 0x3a
 2677 01bc 0B       		.uleb128 0xb
 2678 01bd 3B       		.uleb128 0x3b
 2679 01be 0B       		.uleb128 0xb
 2680 01bf 49       		.uleb128 0x49
 2681 01c0 13       		.uleb128 0x13
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 67


 2682 01c1 02       		.uleb128 0x2
 2683 01c2 17       		.uleb128 0x17
 2684 01c3 00       		.byte	0
 2685 01c4 00       		.byte	0
 2686 01c5 22       		.uleb128 0x22
 2687 01c6 34       		.uleb128 0x34
 2688 01c7 00       		.byte	0
 2689 01c8 03       		.uleb128 0x3
 2690 01c9 0E       		.uleb128 0xe
 2691 01ca 3A       		.uleb128 0x3a
 2692 01cb 0B       		.uleb128 0xb
 2693 01cc 3B       		.uleb128 0x3b
 2694 01cd 0B       		.uleb128 0xb
 2695 01ce 49       		.uleb128 0x49
 2696 01cf 13       		.uleb128 0x13
 2697 01d0 02       		.uleb128 0x2
 2698 01d1 17       		.uleb128 0x17
 2699 01d2 00       		.byte	0
 2700 01d3 00       		.byte	0
 2701 01d4 23       		.uleb128 0x23
 2702 01d5 2E       		.uleb128 0x2e
 2703 01d6 01       		.byte	0x1
 2704 01d7 3F       		.uleb128 0x3f
 2705 01d8 19       		.uleb128 0x19
 2706 01d9 03       		.uleb128 0x3
 2707 01da 0E       		.uleb128 0xe
 2708 01db 3A       		.uleb128 0x3a
 2709 01dc 0B       		.uleb128 0xb
 2710 01dd 3B       		.uleb128 0x3b
 2711 01de 0B       		.uleb128 0xb
 2712 01df 49       		.uleb128 0x49
 2713 01e0 13       		.uleb128 0x13
 2714 01e1 8701     		.uleb128 0x87
 2715 01e3 19       		.uleb128 0x19
 2716 01e4 11       		.uleb128 0x11
 2717 01e5 01       		.uleb128 0x1
 2718 01e6 12       		.uleb128 0x12
 2719 01e7 06       		.uleb128 0x6
 2720 01e8 40       		.uleb128 0x40
 2721 01e9 18       		.uleb128 0x18
 2722 01ea 9742     		.uleb128 0x2117
 2723 01ec 19       		.uleb128 0x19
 2724 01ed 01       		.uleb128 0x1
 2725 01ee 13       		.uleb128 0x13
 2726 01ef 00       		.byte	0
 2727 01f0 00       		.byte	0
 2728 01f1 24       		.uleb128 0x24
 2729 01f2 34       		.uleb128 0x34
 2730 01f3 00       		.byte	0
 2731 01f4 03       		.uleb128 0x3
 2732 01f5 0E       		.uleb128 0xe
 2733 01f6 3A       		.uleb128 0x3a
 2734 01f7 0B       		.uleb128 0xb
 2735 01f8 3B       		.uleb128 0x3b
 2736 01f9 0B       		.uleb128 0xb
 2737 01fa 49       		.uleb128 0x49
 2738 01fb 13       		.uleb128 0x13
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 68


 2739 01fc 1C       		.uleb128 0x1c
 2740 01fd 0B       		.uleb128 0xb
 2741 01fe 00       		.byte	0
 2742 01ff 00       		.byte	0
 2743 0200 25       		.uleb128 0x25
 2744 0201 34       		.uleb128 0x34
 2745 0202 00       		.byte	0
 2746 0203 03       		.uleb128 0x3
 2747 0204 08       		.uleb128 0x8
 2748 0205 3A       		.uleb128 0x3a
 2749 0206 0B       		.uleb128 0xb
 2750 0207 3B       		.uleb128 0x3b
 2751 0208 0B       		.uleb128 0xb
 2752 0209 49       		.uleb128 0x49
 2753 020a 13       		.uleb128 0x13
 2754 020b 00       		.byte	0
 2755 020c 00       		.byte	0
 2756 020d 26       		.uleb128 0x26
 2757 020e 1D       		.uleb128 0x1d
 2758 020f 01       		.byte	0x1
 2759 0210 31       		.uleb128 0x31
 2760 0211 13       		.uleb128 0x13
 2761 0212 11       		.uleb128 0x11
 2762 0213 01       		.uleb128 0x1
 2763 0214 12       		.uleb128 0x12
 2764 0215 06       		.uleb128 0x6
 2765 0216 58       		.uleb128 0x58
 2766 0217 0B       		.uleb128 0xb
 2767 0218 59       		.uleb128 0x59
 2768 0219 0B       		.uleb128 0xb
 2769 021a 01       		.uleb128 0x1
 2770 021b 13       		.uleb128 0x13
 2771 021c 00       		.byte	0
 2772 021d 00       		.byte	0
 2773 021e 27       		.uleb128 0x27
 2774 021f 0B       		.uleb128 0xb
 2775 0220 01       		.byte	0x1
 2776 0221 11       		.uleb128 0x11
 2777 0222 01       		.uleb128 0x1
 2778 0223 12       		.uleb128 0x12
 2779 0224 06       		.uleb128 0x6
 2780 0225 01       		.uleb128 0x1
 2781 0226 13       		.uleb128 0x13
 2782 0227 00       		.byte	0
 2783 0228 00       		.byte	0
 2784 0229 28       		.uleb128 0x28
 2785 022a 34       		.uleb128 0x34
 2786 022b 00       		.byte	0
 2787 022c 03       		.uleb128 0x3
 2788 022d 08       		.uleb128 0x8
 2789 022e 3A       		.uleb128 0x3a
 2790 022f 0B       		.uleb128 0xb
 2791 0230 3B       		.uleb128 0x3b
 2792 0231 0B       		.uleb128 0xb
 2793 0232 49       		.uleb128 0x49
 2794 0233 13       		.uleb128 0x13
 2795 0234 02       		.uleb128 0x2
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 69


 2796 0235 17       		.uleb128 0x17
 2797 0236 00       		.byte	0
 2798 0237 00       		.byte	0
 2799 0238 29       		.uleb128 0x29
 2800 0239 0B       		.uleb128 0xb
 2801 023a 01       		.byte	0x1
 2802 023b 55       		.uleb128 0x55
 2803 023c 17       		.uleb128 0x17
 2804 023d 00       		.byte	0
 2805 023e 00       		.byte	0
 2806 023f 2A       		.uleb128 0x2a
 2807 0240 1D       		.uleb128 0x1d
 2808 0241 01       		.byte	0x1
 2809 0242 31       		.uleb128 0x31
 2810 0243 13       		.uleb128 0x13
 2811 0244 11       		.uleb128 0x11
 2812 0245 01       		.uleb128 0x1
 2813 0246 12       		.uleb128 0x12
 2814 0247 06       		.uleb128 0x6
 2815 0248 58       		.uleb128 0x58
 2816 0249 0B       		.uleb128 0xb
 2817 024a 59       		.uleb128 0x59
 2818 024b 05       		.uleb128 0x5
 2819 024c 00       		.byte	0
 2820 024d 00       		.byte	0
 2821 024e 2B       		.uleb128 0x2b
 2822 024f 34       		.uleb128 0x34
 2823 0250 00       		.byte	0
 2824 0251 03       		.uleb128 0x3
 2825 0252 0E       		.uleb128 0xe
 2826 0253 3A       		.uleb128 0x3a
 2827 0254 0B       		.uleb128 0xb
 2828 0255 3B       		.uleb128 0x3b
 2829 0256 05       		.uleb128 0x5
 2830 0257 49       		.uleb128 0x49
 2831 0258 13       		.uleb128 0x13
 2832 0259 3F       		.uleb128 0x3f
 2833 025a 19       		.uleb128 0x19
 2834 025b 3C       		.uleb128 0x3c
 2835 025c 19       		.uleb128 0x19
 2836 025d 00       		.byte	0
 2837 025e 00       		.byte	0
 2838 025f 2C       		.uleb128 0x2c
 2839 0260 34       		.uleb128 0x34
 2840 0261 00       		.byte	0
 2841 0262 03       		.uleb128 0x3
 2842 0263 08       		.uleb128 0x8
 2843 0264 3A       		.uleb128 0x3a
 2844 0265 0B       		.uleb128 0xb
 2845 0266 3B       		.uleb128 0x3b
 2846 0267 0B       		.uleb128 0xb
 2847 0268 49       		.uleb128 0x49
 2848 0269 13       		.uleb128 0x13
 2849 026a 3F       		.uleb128 0x3f
 2850 026b 19       		.uleb128 0x19
 2851 026c 02       		.uleb128 0x2
 2852 026d 18       		.uleb128 0x18
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 70


 2853 026e 00       		.byte	0
 2854 026f 00       		.byte	0
 2855 0270 2D       		.uleb128 0x2d
 2856 0271 34       		.uleb128 0x34
 2857 0272 00       		.byte	0
 2858 0273 03       		.uleb128 0x3
 2859 0274 0E       		.uleb128 0xe
 2860 0275 3A       		.uleb128 0x3a
 2861 0276 0B       		.uleb128 0xb
 2862 0277 3B       		.uleb128 0x3b
 2863 0278 0B       		.uleb128 0xb
 2864 0279 49       		.uleb128 0x49
 2865 027a 13       		.uleb128 0x13
 2866 027b 3F       		.uleb128 0x3f
 2867 027c 19       		.uleb128 0x19
 2868 027d 02       		.uleb128 0x2
 2869 027e 18       		.uleb128 0x18
 2870 027f 00       		.byte	0
 2871 0280 00       		.byte	0
 2872 0281 2E       		.uleb128 0x2e
 2873 0282 2E       		.uleb128 0x2e
 2874 0283 00       		.byte	0
 2875 0284 3F       		.uleb128 0x3f
 2876 0285 19       		.uleb128 0x19
 2877 0286 3C       		.uleb128 0x3c
 2878 0287 19       		.uleb128 0x19
 2879 0288 6E       		.uleb128 0x6e
 2880 0289 0E       		.uleb128 0xe
 2881 028a 03       		.uleb128 0x3
 2882 028b 0E       		.uleb128 0xe
 2883 028c 3A       		.uleb128 0x3a
 2884 028d 0B       		.uleb128 0xb
 2885 028e 3B       		.uleb128 0x3b
 2886 028f 0B       		.uleb128 0xb
 2887 0290 00       		.byte	0
 2888 0291 00       		.byte	0
 2889 0292 2F       		.uleb128 0x2f
 2890 0293 2E       		.uleb128 0x2e
 2891 0294 00       		.byte	0
 2892 0295 3F       		.uleb128 0x3f
 2893 0296 19       		.uleb128 0x19
 2894 0297 3C       		.uleb128 0x3c
 2895 0298 19       		.uleb128 0x19
 2896 0299 6E       		.uleb128 0x6e
 2897 029a 0E       		.uleb128 0xe
 2898 029b 03       		.uleb128 0x3
 2899 029c 0E       		.uleb128 0xe
 2900 029d 3A       		.uleb128 0x3a
 2901 029e 0B       		.uleb128 0xb
 2902 029f 3B       		.uleb128 0x3b
 2903 02a0 05       		.uleb128 0x5
 2904 02a1 00       		.byte	0
 2905 02a2 00       		.byte	0
 2906 02a3 00       		.byte	0
 2907              		.section	.debug_loc,"",%progbits
 2908              	.Ldebug_loc0:
 2909              	.LLST0:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 71


 2910 0000 00000000 		.4byte	.LVL0
 2911 0004 0A000000 		.4byte	.LVL2
 2912 0008 0100     		.2byte	0x1
 2913 000a 50       		.byte	0x50
 2914 000b 0A000000 		.4byte	.LVL2
 2915 000f 38000000 		.4byte	.LFE40
 2916 0013 0400     		.2byte	0x4
 2917 0015 F3       		.byte	0xf3
 2918 0016 01       		.uleb128 0x1
 2919 0017 50       		.byte	0x50
 2920 0018 9F       		.byte	0x9f
 2921 0019 00000000 		.4byte	0
 2922 001d 00000000 		.4byte	0
 2923              	.LLST1:
 2924 0021 00000000 		.4byte	.LVL0
 2925 0025 08000000 		.4byte	.LVL1
 2926 0029 0100     		.2byte	0x1
 2927 002b 51       		.byte	0x51
 2928 002c 08000000 		.4byte	.LVL1
 2929 0030 38000000 		.4byte	.LFE40
 2930 0034 0400     		.2byte	0x4
 2931 0036 F3       		.byte	0xf3
 2932 0037 01       		.uleb128 0x1
 2933 0038 51       		.byte	0x51
 2934 0039 9F       		.byte	0x9f
 2935 003a 00000000 		.4byte	0
 2936 003e 00000000 		.4byte	0
 2937              	.LLST2:
 2938 0042 0E000000 		.4byte	.LVL3
 2939 0046 26000000 		.4byte	.LVL7
 2940 004a 0100     		.2byte	0x1
 2941 004c 55       		.byte	0x55
 2942 004d 00000000 		.4byte	0
 2943 0051 00000000 		.4byte	0
 2944              	.LLST3:
 2945 0055 0E000000 		.4byte	.LVL3
 2946 0059 12000000 		.4byte	.LVL4
 2947 005d 0600     		.2byte	0x6
 2948 005f 03       		.byte	0x3
 2949 0060 00000000 		.4byte	spi
 2950 0064 9F       		.byte	0x9f
 2951 0065 00000000 		.4byte	0
 2952 0069 00000000 		.4byte	0
 2953              	.LLST4:
 2954 006d 1E000000 		.4byte	.LVL5
 2955 0071 22000000 		.4byte	.LVL6
 2956 0075 0600     		.2byte	0x6
 2957 0077 03       		.byte	0x3
 2958 0078 00000000 		.4byte	spi
 2959 007c 9F       		.byte	0x9f
 2960 007d 00000000 		.4byte	0
 2961 0081 00000000 		.4byte	0
 2962              	.LLST5:
 2963 0085 00000000 		.4byte	.LVL13
 2964 0089 22000000 		.4byte	.LVL14
 2965 008d 0100     		.2byte	0x1
 2966 008f 50       		.byte	0x50
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 72


 2967 0090 22000000 		.4byte	.LVL14
 2968 0094 2C000000 		.4byte	.LVL17
 2969 0098 0400     		.2byte	0x4
 2970 009a F3       		.byte	0xf3
 2971 009b 01       		.uleb128 0x1
 2972 009c 50       		.byte	0x50
 2973 009d 9F       		.byte	0x9f
 2974 009e 2C000000 		.4byte	.LVL17
 2975 00a2 2F000000 		.4byte	.LVL18-1
 2976 00a6 0100     		.2byte	0x1
 2977 00a8 50       		.byte	0x50
 2978 00a9 2F000000 		.4byte	.LVL18-1
 2979 00ad 3A000000 		.4byte	.LVL21
 2980 00b1 0400     		.2byte	0x4
 2981 00b3 F3       		.byte	0xf3
 2982 00b4 01       		.uleb128 0x1
 2983 00b5 50       		.byte	0x50
 2984 00b6 9F       		.byte	0x9f
 2985 00b7 3A000000 		.4byte	.LVL21
 2986 00bb 42000000 		.4byte	.LVL22
 2987 00bf 0100     		.2byte	0x1
 2988 00c1 50       		.byte	0x50
 2989 00c2 42000000 		.4byte	.LVL22
 2990 00c6 A4000000 		.4byte	.LFE55
 2991 00ca 0400     		.2byte	0x4
 2992 00cc F3       		.byte	0xf3
 2993 00cd 01       		.uleb128 0x1
 2994 00ce 50       		.byte	0x50
 2995 00cf 9F       		.byte	0x9f
 2996 00d0 00000000 		.4byte	0
 2997 00d4 00000000 		.4byte	0
 2998              	.LLST6:
 2999 00d8 00000000 		.4byte	.LVL13
 3000 00dc 25000000 		.4byte	.LVL15-1
 3001 00e0 0100     		.2byte	0x1
 3002 00e2 51       		.byte	0x51
 3003 00e3 25000000 		.4byte	.LVL15-1
 3004 00e7 2C000000 		.4byte	.LVL17
 3005 00eb 0100     		.2byte	0x1
 3006 00ed 54       		.byte	0x54
 3007 00ee 2C000000 		.4byte	.LVL17
 3008 00f2 2F000000 		.4byte	.LVL18-1
 3009 00f6 0100     		.2byte	0x1
 3010 00f8 51       		.byte	0x51
 3011 00f9 2F000000 		.4byte	.LVL18-1
 3012 00fd 3A000000 		.4byte	.LVL21
 3013 0101 0100     		.2byte	0x1
 3014 0103 54       		.byte	0x54
 3015 0104 3A000000 		.4byte	.LVL21
 3016 0108 48000000 		.4byte	.LVL23
 3017 010c 0100     		.2byte	0x1
 3018 010e 51       		.byte	0x51
 3019 010f 48000000 		.4byte	.LVL23
 3020 0113 98000000 		.4byte	.LVL29
 3021 0117 0100     		.2byte	0x1
 3022 0119 54       		.byte	0x54
 3023 011a 98000000 		.4byte	.LVL29
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 73


 3024 011e A4000000 		.4byte	.LFE55
 3025 0122 0400     		.2byte	0x4
 3026 0124 F3       		.byte	0xf3
 3027 0125 01       		.uleb128 0x1
 3028 0126 51       		.byte	0x51
 3029 0127 9F       		.byte	0x9f
 3030 0128 00000000 		.4byte	0
 3031 012c 00000000 		.4byte	0
 3032              	.LLST7:
 3033 0130 3A000000 		.4byte	.LVL21
 3034 0134 48000000 		.4byte	.LVL23
 3035 0138 0100     		.2byte	0x1
 3036 013a 51       		.byte	0x51
 3037 013b 48000000 		.4byte	.LVL23
 3038 013f 98000000 		.4byte	.LVL28
 3039 0143 0100     		.2byte	0x1
 3040 0145 54       		.byte	0x54
 3041 0146 00000000 		.4byte	0
 3042 014a 00000000 		.4byte	0
 3043              	.LLST8:
 3044 014e 2A000000 		.4byte	.LVL35
 3045 0152 32000000 		.4byte	.LVL36
 3046 0156 0200     		.2byte	0x2
 3047 0158 30       		.byte	0x30
 3048 0159 9F       		.byte	0x9f
 3049 015a 00000000 		.4byte	0
 3050 015e 00000000 		.4byte	0
 3051              	.LLST9:
 3052 0162 32000000 		.4byte	.LVL36
 3053 0166 36000000 		.4byte	.LVL37
 3054 016a 0200     		.2byte	0x2
 3055 016c 30       		.byte	0x30
 3056 016d 9F       		.byte	0x9f
 3057 016e 36000000 		.4byte	.LVL37
 3058 0172 FC000000 		.4byte	.LFE56
 3059 0176 0100     		.2byte	0x1
 3060 0178 55       		.byte	0x55
 3061 0179 00000000 		.4byte	0
 3062 017d 00000000 		.4byte	0
 3063              	.LLST10:
 3064 0181 36000000 		.4byte	.LVL37
 3065 0185 58000000 		.4byte	.LVL42
 3066 0189 0100     		.2byte	0x1
 3067 018b 54       		.byte	0x54
 3068 018c 5A000000 		.4byte	.LVL43
 3069 0190 60000000 		.4byte	.LVL44
 3070 0194 0100     		.2byte	0x1
 3071 0196 54       		.byte	0x54
 3072 0197 00000000 		.4byte	0
 3073 019b 00000000 		.4byte	0
 3074              	.LLST11:
 3075 019f 36000000 		.4byte	.LVL37
 3076 01a3 4E000000 		.4byte	.LVL39
 3077 01a7 0100     		.2byte	0x1
 3078 01a9 51       		.byte	0x51
 3079 01aa 50000000 		.4byte	.LVL40
 3080 01ae 58000000 		.4byte	.LVL42
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 74


 3081 01b2 0100     		.2byte	0x1
 3082 01b4 51       		.byte	0x51
 3083 01b5 00000000 		.4byte	0
 3084 01b9 00000000 		.4byte	0
 3085              	.LLST12:
 3086 01bd 64000000 		.4byte	.LVL45
 3087 01c1 8E000000 		.4byte	.LVL51
 3088 01c5 0200     		.2byte	0x2
 3089 01c7 42       		.byte	0x42
 3090 01c8 9F       		.byte	0x9f
 3091 01c9 00000000 		.4byte	0
 3092 01cd 00000000 		.4byte	0
 3093              	.LLST13:
 3094 01d1 64000000 		.4byte	.LVL45
 3095 01d5 8E000000 		.4byte	.LVL51
 3096 01d9 0200     		.2byte	0x2
 3097 01db 30       		.byte	0x30
 3098 01dc 9F       		.byte	0x9f
 3099 01dd 00000000 		.4byte	0
 3100 01e1 00000000 		.4byte	0
 3101              	.LLST14:
 3102 01e5 6C000000 		.4byte	.LVL46
 3103 01e9 84000000 		.4byte	.LVL50
 3104 01ed 0200     		.2byte	0x2
 3105 01ef 42       		.byte	0x42
 3106 01f0 9F       		.byte	0x9f
 3107 01f1 00000000 		.4byte	0
 3108 01f5 00000000 		.4byte	0
 3109              	.LLST15:
 3110 01f9 6C000000 		.4byte	.LVL46
 3111 01fd 70000000 		.4byte	.LVL47
 3112 0201 0600     		.2byte	0x6
 3113 0203 03       		.byte	0x3
 3114 0204 00000000 		.4byte	spi
 3115 0208 9F       		.byte	0x9f
 3116 0209 00000000 		.4byte	0
 3117 020d 00000000 		.4byte	0
 3118              	.LLST16:
 3119 0211 7C000000 		.4byte	.LVL48
 3120 0215 80000000 		.4byte	.LVL49
 3121 0219 0600     		.2byte	0x6
 3122 021b 03       		.byte	0x3
 3123 021c 00000000 		.4byte	spi
 3124 0220 9F       		.byte	0x9f
 3125 0221 00000000 		.4byte	0
 3126 0225 00000000 		.4byte	0
 3127              	.LLST17:
 3128 0229 8E000000 		.4byte	.LVL51
 3129 022d B6000000 		.4byte	.LVL57
 3130 0231 0200     		.2byte	0x2
 3131 0233 30       		.byte	0x30
 3132 0234 9F       		.byte	0x9f
 3133 0235 00000000 		.4byte	0
 3134 0239 00000000 		.4byte	0
 3135              	.LLST18:
 3136 023d 8E000000 		.4byte	.LVL51
 3137 0241 B6000000 		.4byte	.LVL57
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 75


 3138 0245 0200     		.2byte	0x2
 3139 0247 38       		.byte	0x38
 3140 0248 9F       		.byte	0x9f
 3141 0249 00000000 		.4byte	0
 3142 024d 00000000 		.4byte	0
 3143              	.LLST20:
 3144 0251 96000000 		.4byte	.LVL52
 3145 0255 AE000000 		.4byte	.LVL56
 3146 0259 0200     		.2byte	0x2
 3147 025b 38       		.byte	0x38
 3148 025c 9F       		.byte	0x9f
 3149 025d 00000000 		.4byte	0
 3150 0261 00000000 		.4byte	0
 3151              	.LLST21:
 3152 0265 96000000 		.4byte	.LVL52
 3153 0269 9A000000 		.4byte	.LVL53
 3154 026d 0600     		.2byte	0x6
 3155 026f 03       		.byte	0x3
 3156 0270 00000000 		.4byte	spi
 3157 0274 9F       		.byte	0x9f
 3158 0275 00000000 		.4byte	0
 3159 0279 00000000 		.4byte	0
 3160              	.LLST22:
 3161 027d A6000000 		.4byte	.LVL54
 3162 0281 AA000000 		.4byte	.LVL55
 3163 0285 0600     		.2byte	0x6
 3164 0287 03       		.byte	0x3
 3165 0288 00000000 		.4byte	spi
 3166 028c 9F       		.byte	0x9f
 3167 028d 00000000 		.4byte	0
 3168 0291 00000000 		.4byte	0
 3169              		.section	.debug_aranges,"",%progbits
 3170 0000 3C000000 		.4byte	0x3c
 3171 0004 0200     		.2byte	0x2
 3172 0006 00000000 		.4byte	.Ldebug_info0
 3173 000a 04       		.byte	0x4
 3174 000b 00       		.byte	0
 3175 000c 0000     		.2byte	0
 3176 000e 0000     		.2byte	0
 3177 0010 00000000 		.4byte	.LFB40
 3178 0014 38000000 		.4byte	.LFE40-.LFB40
 3179 0018 00000000 		.4byte	.LFB53
 3180 001c 3C000000 		.4byte	.LFE53-.LFB53
 3181 0020 00000000 		.4byte	.LFB54
 3182 0024 58000000 		.4byte	.LFE54-.LFB54
 3183 0028 00000000 		.4byte	.LFB55
 3184 002c A4000000 		.4byte	.LFE55-.LFB55
 3185 0030 00000000 		.4byte	.LFB56
 3186 0034 FC000000 		.4byte	.LFE56-.LFB56
 3187 0038 00000000 		.4byte	0
 3188 003c 00000000 		.4byte	0
 3189              		.section	.debug_ranges,"",%progbits
 3190              	.Ldebug_ranges0:
 3191 0000 36000000 		.4byte	.LBB51
 3192 0004 58000000 		.4byte	.LBE51
 3193 0008 5A000000 		.4byte	.LBB54
 3194 000c 5E000000 		.4byte	.LBE54
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 76


 3195 0010 00000000 		.4byte	0
 3196 0014 00000000 		.4byte	0
 3197 0018 36000000 		.4byte	.LBB52
 3198 001c 4E000000 		.4byte	.LBE52
 3199 0020 50000000 		.4byte	.LBB53
 3200 0024 54000000 		.4byte	.LBE53
 3201 0028 00000000 		.4byte	0
 3202 002c 00000000 		.4byte	0
 3203 0030 00000000 		.4byte	.LFB40
 3204 0034 38000000 		.4byte	.LFE40
 3205 0038 00000000 		.4byte	.LFB53
 3206 003c 3C000000 		.4byte	.LFE53
 3207 0040 00000000 		.4byte	.LFB54
 3208 0044 58000000 		.4byte	.LFE54
 3209 0048 00000000 		.4byte	.LFB55
 3210 004c A4000000 		.4byte	.LFE55
 3211 0050 00000000 		.4byte	.LFB56
 3212 0054 FC000000 		.4byte	.LFE56
 3213 0058 00000000 		.4byte	0
 3214 005c 00000000 		.4byte	0
 3215              		.section	.debug_line,"",%progbits
 3216              	.Ldebug_line0:
 3217 0000 3C030000 		.section	.debug_str,"MS",%progbits,1
 3217      02001502 
 3217      00000201 
 3217      FB0E0D00 
 3217      01010101 
 3218              	.LASF60:
 3219 0000 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BLOB_RSP\000"
 3219      455F4556 
 3219      545F4741 
 3219      5454435F 
 3219      52454144 
 3220              	.LASF24:
 3221 001e 4359424C 		.ascii	"CYBLE_EVT_STACK_BUSY_STATUS\000"
 3221      455F4556 
 3221      545F5354 
 3221      41434B5F 
 3221      42555359 
 3222              	.LASF148:
 3223 003a 4359424C 		.ascii	"CYBLE_STATE_STOPPED\000"
 3223      455F5354 
 3223      4154455F 
 3223      53544F50 
 3223      50454400 
 3224              	.LASF125:
 3225 004e 4359424C 		.ascii	"CYBLE_GATTS_ERR_HPS_INVALID_REQUEST\000"
 3225      455F4741 
 3225      5454535F 
 3225      4552525F 
 3225      4850535F 
 3226              	.LASF191:
 3227 0072 7370695F 		.ascii	"spi_Start\000"
 3227      53746172 
 3227      7400
 3228              	.LASF82:
 3229 007c 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_READ\000"
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 77


 3229      455F4556 
 3229      545F4C32 
 3229      4341505F 
 3229      43424643 
 3230              	.LASF138:
 3231 009b 4359424C 		.ascii	"CYBLE_CONN_HANDLE_T\000"
 3231      455F434F 
 3231      4E4E5F48 
 3231      414E444C 
 3231      455F5400 
 3232              	.LASF36:
 3233 00af 4359424C 		.ascii	"CYBLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 3233      455F4556 
 3233      545F4741 
 3233      505F434F 
 3233      4E4E4543 
 3234              	.LASF145:
 3235 00d8 636F6E6E 		.ascii	"connHandle\000"
 3235      48616E64 
 3235      6C6500
 3236              	.LASF102:
 3237 00e3 4359424C 		.ascii	"CYBLE_GATT_ERR_REQUEST_NOT_SUPPORTED\000"
 3237      455F4741 
 3237      54545F45 
 3237      52525F52 
 3237      45515545 
 3238              	.LASF97:
 3239 0108 4359424C 		.ascii	"CYBLE_GATT_ERR_INVALID_HANDLE\000"
 3239      455F4741 
 3239      54545F45 
 3239      52525F49 
 3239      4E56414C 
 3240              	.LASF155:
 3241 0126 41445331 		.ascii	"ADS1299_ERROR_SPI_TIMEOUT\000"
 3241      3239395F 
 3241      4552524F 
 3241      525F5350 
 3241      495F5449 
 3242              	.LASF81:
 3243 0140 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 3243      455F4556 
 3243      545F4C32 
 3243      4341505F 
 3243      43424643 
 3244              	.LASF156:
 3245 0161 61647331 		.ascii	"ads1299_error_t\000"
 3245      3239395F 
 3245      6572726F 
 3245      725F7400 
 3246              	.LASF0:
 3247 0171 7369676E 		.ascii	"signed char\000"
 3247      65642063 
 3247      68617200 
 3248              	.LASF9:
 3249 017d 5F5F7569 		.ascii	"__uint8_t\000"
 3249      6E74385F 
 3249      7400
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 78


 3250              	.LASF182:
 3251 0187 7370695F 		.ascii	"spi_unselectChip\000"
 3251      756E7365 
 3251      6C656374 
 3251      43686970 
 3251      00
 3252              	.LASF21:
 3253 0198 4359424C 		.ascii	"CYBLE_EVT_TIMEOUT\000"
 3253      455F4556 
 3253      545F5449 
 3253      4D454F55 
 3253      5400
 3254              	.LASF4:
 3255 01aa 6C6F6E67 		.ascii	"long int\000"
 3255      20696E74 
 3255      00
 3256              	.LASF200:
 3257 01b3 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3257      43313120 
 3257      352E342E 
 3257      31203230 
 3257      31363036 
 3258 01e6 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3258      20726576 
 3258      6973696F 
 3258      6E203233 
 3258      37373135 
 3259 0219 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3259      66756E63 
 3259      74696F6E 
 3259      2D736563 
 3259      74696F6E 
 3260              	.LASF7:
 3261 0241 6C6F6E67 		.ascii	"long long unsigned int\000"
 3261      206C6F6E 
 3261      6720756E 
 3261      7369676E 
 3261      65642069 
 3262              	.LASF140:
 3263 0258 4359424C 		.ascii	"CYBLE_GATT_VALUE_T\000"
 3263      455F4741 
 3263      54545F56 
 3263      414C5545 
 3263      5F5400
 3264              	.LASF23:
 3265 026b 4359424C 		.ascii	"CYBLE_EVT_HCI_STATUS\000"
 3265      455F4556 
 3265      545F4843 
 3265      495F5354 
 3265      41545553 
 3266              	.LASF123:
 3267 0280 4359424C 		.ascii	"CYBLE_GATTS_ERR_OPERATION_FAILED\000"
 3267      455F4741 
 3267      5454535F 
 3267      4552525F 
 3267      4F504552 
 3268              	.LASF132:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 79


 3269 02a1 4359424C 		.ascii	"CYBLE_GATT_ERR_CCCD_IMPROPERLY_CONFIGURED\000"
 3269      455F4741 
 3269      54545F45 
 3269      52525F43 
 3269      4343445F 
 3270              	.LASF147:
 3271 02cb 4359424C 		.ascii	"CYBLE_GATTS_WRITE_REQ_PARAM_T\000"
 3271      455F4741 
 3271      5454535F 
 3271      57524954 
 3271      455F5245 
 3272              	.LASF75:
 3273 02e9 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 3273      455F4556 
 3273      545F4C32 
 3273      4341505F 
 3273      434F4E4E 
 3274              	.LASF35:
 3275 030f 4359424C 		.ascii	"CYBLE_EVT_GAP_ENCRYPT_CHANGE\000"
 3275      455F4556 
 3275      545F4741 
 3275      505F454E 
 3275      43525950 
 3276              	.LASF129:
 3277 032c 4359424C 		.ascii	"CYBLE_GATT_ERR_ANCS_INVALID_COMMAND\000"
 3277      455F4741 
 3277      54545F45 
 3277      52525F41 
 3277      4E43535F 
 3278              	.LASF120:
 3279 0350 4359424C 		.ascii	"CYBLE_GATT_ERR_OP_CODE_NOT_SUPPORTED\000"
 3279      455F4741 
 3279      54545F45 
 3279      52525F4F 
 3279      505F434F 
 3280              	.LASF101:
 3281 0375 4359424C 		.ascii	"CYBLE_GATT_ERR_INSUFFICIENT_AUTHENTICATION\000"
 3281      455F4741 
 3281      54545F45 
 3281      52525F49 
 3281      4E535546 
 3282              	.LASF151:
 3283 03a0 4359424C 		.ascii	"CYBLE_STATE_ADVERTISING\000"
 3283      455F5354 
 3283      4154455F 
 3283      41445645 
 3283      52544953 
 3284              	.LASF6:
 3285 03b8 6C6F6E67 		.ascii	"long long int\000"
 3285      206C6F6E 
 3285      6720696E 
 3285      7400
 3286              	.LASF185:
 3287 03c6 4379426C 		.ascii	"CyBle_GattsNotification\000"
 3287      655F4761 
 3287      7474734E 
 3287      6F746966 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 80


 3287      69636174 
 3288              	.LASF20:
 3289 03de 4359424C 		.ascii	"CYBLE_EVT_STACK_ON\000"
 3289      455F4556 
 3289      545F5354 
 3289      41434B5F 
 3289      4F4E00
 3290              	.LASF5:
 3291 03f1 6C6F6E67 		.ascii	"long unsigned int\000"
 3291      20756E73 
 3291      69676E65 
 3291      6420696E 
 3291      7400
 3292              	.LASF157:
 3293 0403 7370695F 		.ascii	"spi_is_tx_ready\000"
 3293      69735F74 
 3293      785F7265 
 3293      61647900 
 3294              	.LASF37:
 3295 0413 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_START_STOP\000"
 3295      455F4556 
 3295      545F4741 
 3295      50435F53 
 3295      43414E5F 
 3296              	.LASF139:
 3297 0432 61637475 		.ascii	"actualLen\000"
 3297      616C4C65 
 3297      6E00
 3298              	.LASF27:
 3299 043c 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ\000"
 3299      455F4556 
 3299      545F4741 
 3299      505F4155 
 3299      54485F52 
 3300              	.LASF59:
 3301 0453 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_RSP\000"
 3301      455F4556 
 3301      545F4741 
 3301      5454435F 
 3301      52454144 
 3302              	.LASF100:
 3303 046c 4359424C 		.ascii	"CYBLE_GATT_ERR_INVALID_PDU\000"
 3303      455F4741 
 3303      54545F45 
 3303      52525F49 
 3303      4E56414C 
 3304              	.LASF64:
 3305 0487 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_CMD_REQ\000"
 3305      455F4556 
 3305      545F4741 
 3305      5454535F 
 3305      57524954 
 3306              	.LASF152:
 3307 04a5 4359424C 		.ascii	"CYBLE_STATE_DISCONNECTED\000"
 3307      455F5354 
 3307      4154455F 
 3307      44495343 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 81


 3307      4F4E4E45 
 3308              	.LASF32:
 3309 04be 4359424C 		.ascii	"CYBLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 3309      455F4556 
 3309      545F4741 
 3309      50505F41 
 3309      44564552 
 3310              	.LASF11:
 3311 04e6 75696E74 		.ascii	"uint8\000"
 3311      3800
 3312              	.LASF67:
 3313 04ec 4359424C 		.ascii	"CYBLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 3313      455F4556 
 3313      545F4741 
 3313      5454435F 
 3313      45584543 
 3314              	.LASF15:
 3315 050b 646F7562 		.ascii	"double\000"
 3315      6C6500
 3316              	.LASF161:
 3317 0512 61647331 		.ascii	"ads1299_send_byte\000"
 3317      3239395F 
 3317      73656E64 
 3317      5F627974 
 3317      6500
 3318              	.LASF165:
 3319 0524 7265645F 		.ascii	"red_State\000"
 3319      53746174 
 3319      6500
 3320              	.LASF112:
 3321 052e 4359424C 		.ascii	"CYBLE_GATT_ERR_UNSUPPORTED_GROUP_TYPE\000"
 3321      455F4741 
 3321      54545F45 
 3321      52525F55 
 3321      4E535550 
 3322              	.LASF199:
 3323 0554 4379426C 		.ascii	"CyBle_EnterLPM\000"
 3323      655F456E 
 3323      7465724C 
 3323      504D00
 3324              	.LASF13:
 3325 0563 75696E74 		.ascii	"uint32\000"
 3325      333200
 3326              	.LASF180:
 3327 056a 7370695F 		.ascii	"spi_put\000"
 3327      70757400 
 3328              	.LASF99:
 3329 0572 4359424C 		.ascii	"CYBLE_GATT_ERR_WRITE_NOT_PERMITTED\000"
 3329      455F4741 
 3329      54545F45 
 3329      52525F57 
 3329      52495445 
 3330              	.LASF90:
 3331 0595 4359424C 		.ascii	"CYBLE_EVT_MAX\000"
 3331      455F4556 
 3331      545F4D41 
 3331      5800
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 82


 3332              	.LASF170:
 3333 05a3 77725265 		.ascii	"wrReqParam\000"
 3333      71506172 
 3333      616D00
 3334              	.LASF96:
 3335 05ae 4359424C 		.ascii	"CYBLE_GATT_ERR_NONE\000"
 3335      455F4741 
 3335      54545F45 
 3335      52525F4E 
 3335      4F4E4500 
 3336              	.LASF136:
 3337 05c2 62644861 		.ascii	"bdHandle\000"
 3337      6E646C65 
 3337      00
 3338              	.LASF98:
 3339 05cb 4359424C 		.ascii	"CYBLE_GATT_ERR_READ_NOT_PERMITTED\000"
 3339      455F4741 
 3339      54545F45 
 3339      52525F52 
 3339      4541445F 
 3340              	.LASF142:
 3341 05ed 61747472 		.ascii	"attrHandle\000"
 3341      48616E64 
 3341      6C6500
 3342              	.LASF85:
 3343 05f8 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 3343      455F4556 
 3343      545F4C32 
 3343      4341505F 
 3343      43424643 
 3344              	.LASF47:
 3345 061c 4359424C 		.ascii	"CYBLE_EVT_GAP_SCAN_REQ_RECVD\000"
 3345      455F4556 
 3345      545F4741 
 3345      505F5343 
 3345      414E5F52 
 3346              	.LASF127:
 3347 0639 4359424C 		.ascii	"CYBLE_GATT_ERR_ANS_COMMAND_NOT_SUPPORTED\000"
 3347      455F4741 
 3347      54545F45 
 3347      52525F41 
 3347      4E535F43 
 3348              	.LASF141:
 3349 0662 76616C75 		.ascii	"value\000"
 3349      6500
 3350              	.LASF184:
 3351 0668 4379426C 		.ascii	"CyBle_GattsWriteAttributeValue\000"
 3351      655F4761 
 3351      74747357 
 3351      72697465 
 3351      41747472 
 3352              	.LASF203:
 3353 0687 426C6543 		.ascii	"BleCallBack\000"
 3353      616C6C42 
 3353      61636B00 
 3354              	.LASF72:
 3355 0693 4359424C 		.ascii	"CYBLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 83


 3355      455F4556 
 3355      545F4741 
 3355      5454435F 
 3355      53544F50 
 3356              	.LASF8:
 3357 06b5 756E7369 		.ascii	"unsigned int\000"
 3357      676E6564 
 3357      20696E74 
 3357      00
 3358              	.LASF87:
 3359 06c2 4359424C 		.ascii	"CYBLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 3359      455F4556 
 3359      545F4C45 
 3359      5F50494E 
 3359      475F4155 
 3360              	.LASF124:
 3361 06e1 4359424C 		.ascii	"CYBLE_GATT_ERR_INVALID_CRC\000"
 3361      455F4741 
 3361      54545F45 
 3361      52525F49 
 3361      4E56414C 
 3362              	.LASF119:
 3363 06fc 4359424C 		.ascii	"CYBLE_GATTS_ERR_PROCEDURE_ALREADY_IN_PROGRESS\000"
 3363      455F4741 
 3363      5454535F 
 3363      4552525F 
 3363      50524F43 
 3364              	.LASF163:
 3365 072a 61647331 		.ascii	"ads1299_send_byte_no_cs\000"
 3365      3239395F 
 3365      73656E64 
 3365      5F627974 
 3365      655F6E6F 
 3366              	.LASF94:
 3367 0742 4359424C 		.ascii	"CYBLE_BLESS_HIBERNATE\000"
 3367      455F424C 
 3367      4553535F 
 3367      48494245 
 3367      524E4154 
 3368              	.LASF46:
 3369 0758 4359424C 		.ascii	"CYBLE_EVT_GAP_CONN_ESTB\000"
 3369      455F4556 
 3369      545F4741 
 3369      505F434F 
 3369      4E4E5F45 
 3370              	.LASF106:
 3371 0770 4359424C 		.ascii	"CYBLE_GATT_ERR_ATTRIBUTE_NOT_FOUND\000"
 3371      455F4741 
 3371      54545F45 
 3371      52525F41 
 3371      54545249 
 3372              	.LASF95:
 3373 0793 4359424C 		.ascii	"CYBLE_BLESS_INVALID\000"
 3373      455F424C 
 3373      4553535F 
 3373      494E5641 
 3373      4C494400 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 84


 3374              	.LASF54:
 3375 07a7 4359424C 		.ascii	"CYBLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 3375      455F4556 
 3375      545F4741 
 3375      5454435F 
 3375      5843484E 
 3376              	.LASF71:
 3377 07c5 4359424C 		.ascii	"CYBLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 3377      455F4556 
 3377      545F4741 
 3377      5454535F 
 3377      44415441 
 3378              	.LASF74:
 3379 07e9 4359424C 		.ascii	"CYBLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 3379      455F4556 
 3379      545F4741 
 3379      5454435F 
 3379      4C4F4E47 
 3380              	.LASF168:
 3381 080c 6576656E 		.ascii	"event\000"
 3381      7400
 3382              	.LASF107:
 3383 0812 4359424C 		.ascii	"CYBLE_GATT_ERR_ATTRIBUTE_NOT_LONG\000"
 3383      455F4741 
 3383      54545F45 
 3383      52525F41 
 3383      54545249 
 3384              	.LASF19:
 3385 0834 4359424C 		.ascii	"CYBLE_EVT_HOST_INVALID\000"
 3385      455F4556 
 3385      545F484F 
 3385      53545F49 
 3385      4E56414C 
 3386              	.LASF57:
 3387 084b 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_INFO_RSP\000"
 3387      455F4556 
 3387      545F4741 
 3387      5454435F 
 3387      46494E44 
 3388              	.LASF25:
 3389 0869 4359424C 		.ascii	"CYBLE_EVT_MEMORY_REQUEST\000"
 3389      455F4556 
 3389      545F4D45 
 3389      4D4F5259 
 3389      5F524551 
 3390              	.LASF66:
 3391 0882 4359424C 		.ascii	"CYBLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 3391      455F4556 
 3391      545F4741 
 3391      5454535F 
 3391      45584543 
 3392              	.LASF167:
 3393 08a1 75706461 		.ascii	"updateNumber\000"
 3393      74654E75 
 3393      6D626572 
 3393      00
 3394              	.LASF198:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 85


 3395 08ae 4379426C 		.ascii	"CyBle_ProcessEvents\000"
 3395      655F5072 
 3395      6F636573 
 3395      73457665 
 3395      6E747300 
 3396              	.LASF108:
 3397 08c2 4359424C 		.ascii	"CYBLE_GATT_ERR_INSUFFICIENT_ENC_KEY_SIZE\000"
 3397      455F4741 
 3397      54545F45 
 3397      52525F49 
 3397      4E535546 
 3398              	.LASF28:
 3399 08eb 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 3399      455F4556 
 3399      545F4741 
 3399      505F5041 
 3399      53534B45 
 3400              	.LASF133:
 3401 090f 4359424C 		.ascii	"CYBLE_GATT_ERR_PROCEDURE_ALREADY_IN_PROGRESS\000"
 3401      455F4741 
 3401      54545F45 
 3401      52525F50 
 3401      524F4345 
 3402              	.LASF178:
 3403 093c 6E756D62 		.ascii	"numberNotify\000"
 3403      65724E6F 
 3403      74696679 
 3403      00
 3404              	.LASF201:
 3405 0949 6D61696E 		.ascii	"main.c\000"
 3405      2E6300
 3406              	.LASF62:
 3407 0950 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_REQ\000"
 3407      455F4556 
 3407      545F4741 
 3407      5454535F 
 3407      57524954 
 3408              	.LASF48:
 3409 096a 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ_REPLY_ERR\000"
 3409      455F4556 
 3409      545F4741 
 3409      505F4155 
 3409      54485F52 
 3410              	.LASF194:
 3411 098b 4379426C 		.ascii	"CyBle_Start\000"
 3411      655F5374 
 3411      61727400 
 3412              	.LASF56:
 3413 0997 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 3413      455F4556 
 3413      545F4741 
 3413      5454435F 
 3413      52454144 
 3414              	.LASF118:
 3415 09b8 4359424C 		.ascii	"CYBLE_GATT_ERR_HTS_OUT_OF_RANGE\000"
 3415      455F4741 
 3415      54545F45 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 86


 3415      52525F48 
 3415      54535F4F 
 3416              	.LASF172:
 3417 09d8 6379426C 		.ascii	"cyBle_state\000"
 3417      655F7374 
 3417      61746500 
 3418              	.LASF29:
 3419 09e4 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 3419      455F4556 
 3419      545F4741 
 3419      505F5041 
 3419      53534B45 
 3420              	.LASF51:
 3421 0a0a 4359424C 		.ascii	"CYBLE_EVT_GATT_CONNECT_IND\000"
 3421      455F4556 
 3421      545F4741 
 3421      54545F43 
 3421      4F4E4E45 
 3422              	.LASF159:
 3423 0a25 61647331 		.ascii	"ads1299_soft_start_conversion\000"
 3423      3239395F 
 3423      736F6674 
 3423      5F737461 
 3423      72745F63 
 3424              	.LASF137:
 3425 0a43 61747449 		.ascii	"attId\000"
 3425      6400
 3426              	.LASF77:
 3427 0a49 4359424C 		.ascii	"CYBLE_EVT_L2CAP_COMMAND_REJ\000"
 3427      455F4556 
 3427      545F4C32 
 3427      4341505F 
 3427      434F4D4D 
 3428              	.LASF117:
 3429 0a65 4359424C 		.ascii	"CYBLE_GATT_ERR_CPS_INAPPROPRIATE_CONNECTION_PARAMET"
 3429      455F4741 
 3429      54545F45 
 3429      52525F43 
 3429      50535F49 
 3430 0a98 45525300 		.ascii	"ERS\000"
 3431              	.LASF26:
 3432 0a9c 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 3432      455F4556 
 3432      545F4741 
 3432      50435F53 
 3432      43414E5F 
 3433              	.LASF146:
 3434 0ac0 68616E64 		.ascii	"handleValPair\000"
 3434      6C655661 
 3434      6C506169 
 3434      7200
 3435              	.LASF49:
 3436 0ace 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_LOC_P256_KEYS_GEN_AND_SET_COMPLET"
 3436      455F4556 
 3436      545F4741 
 3436      505F534D 
 3436      505F4C4F 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 87


 3437 0b01 4500     		.ascii	"E\000"
 3438              	.LASF78:
 3439 0b03 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_IND\000"
 3439      455F4556 
 3439      545F4C32 
 3439      4341505F 
 3439      43424643 
 3440              	.LASF195:
 3441 0b21 61647331 		.ascii	"ads1299_device_init\000"
 3441      3239395F 
 3441      64657669 
 3441      63655F69 
 3441      6E697400 
 3442              	.LASF181:
 3443 0b35 7370695F 		.ascii	"spi_selectChip\000"
 3443      73656C65 
 3443      63744368 
 3443      697000
 3444              	.LASF158:
 3445 0b44 7370695F 		.ascii	"spi_is_tx_empty\000"
 3445      69735F74 
 3445      785F656D 
 3445      70747900 
 3446              	.LASF18:
 3447 0b54 73697A65 		.ascii	"sizetype\000"
 3447      74797065 
 3447      00
 3448              	.LASF113:
 3449 0b5d 4359424C 		.ascii	"CYBLE_GATT_ERR_INSUFFICIENT_RESOURCE\000"
 3449      455F4741 
 3449      54545F45 
 3449      52525F49 
 3449      4E535546 
 3450              	.LASF144:
 3451 0b82 4359424C 		.ascii	"CYBLE_GATTS_HANDLE_VALUE_NTF_T\000"
 3451      455F4741 
 3451      5454535F 
 3451      48414E44 
 3451      4C455F56 
 3452              	.LASF149:
 3453 0ba1 4359424C 		.ascii	"CYBLE_STATE_INITIALIZING\000"
 3453      455F5354 
 3453      4154455F 
 3453      494E4954 
 3453      49414C49 
 3454              	.LASF31:
 3455 0bba 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_FAILED\000"
 3455      455F4556 
 3455      545F4741 
 3455      505F4155 
 3455      54485F46 
 3456              	.LASF173:
 3457 0bd4 6379426C 		.ascii	"cyBle_connHandle\000"
 3457      655F636F 
 3457      6E6E4861 
 3457      6E646C65 
 3457      00
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 88


 3458              	.LASF63:
 3459 0be5 4359424C 		.ascii	"CYBLE_EVT_GATTC_WRITE_RSP\000"
 3459      455F4556 
 3459      545F4741 
 3459      5454435F 
 3459      57524954 
 3460              	.LASF44:
 3461 0bff 4359424C 		.ascii	"CYBLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 3461      455F4556 
 3461      545F4741 
 3461      50435F44 
 3461      49524543 
 3462              	.LASF42:
 3463 0c20 4359424C 		.ascii	"CYBLE_EVT_GAP_DATA_LENGTH_CHANGE\000"
 3463      455F4556 
 3463      545F4741 
 3463      505F4441 
 3463      54415F4C 
 3464              	.LASF189:
 3465 0c41 7265645F 		.ascii	"red_Write\000"
 3465      57726974 
 3465      6500
 3466              	.LASF177:
 3467 0c4b 7370695F 		.ascii	"spi_rx_data_buffer\000"
 3467      72785F64 
 3467      6174615F 
 3467      62756666 
 3467      657200
 3468              	.LASF104:
 3469 0c5e 4359424C 		.ascii	"CYBLE_GATT_ERR_INSUFFICIENT_AUTHORIZATION\000"
 3469      455F4741 
 3469      54545F45 
 3469      52525F49 
 3469      4E535546 
 3470              	.LASF30:
 3471 0c88 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_COMPLETE\000"
 3471      455F4556 
 3471      545F4741 
 3471      505F4155 
 3471      54485F43 
 3472              	.LASF111:
 3473 0ca4 4359424C 		.ascii	"CYBLE_GATT_ERR_INSUFFICIENT_ENCRYPTION\000"
 3473      455F4741 
 3473      54545F45 
 3473      52525F49 
 3473      4E535546 
 3474              	.LASF183:
 3475 0ccb 7265645F 		.ascii	"red_Read\000"
 3475      52656164 
 3475      00
 3476              	.LASF68:
 3477 0cd4 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 3477      455F4556 
 3477      545F4741 
 3477      5454435F 
 3477      48414E44 
 3478              	.LASF143:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 89


 3479 0cf5 4359424C 		.ascii	"CYBLE_GATT_HANDLE_VALUE_PAIR_T\000"
 3479      455F4741 
 3479      54545F48 
 3479      414E444C 
 3479      455F5641 
 3480              	.LASF79:
 3481 0d14 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 3481      455F4556 
 3481      545F4C32 
 3481      4341505F 
 3481      43424643 
 3482              	.LASF130:
 3483 0d32 4359424C 		.ascii	"CYBLE_GATT_ERR_ANCS_INVALID_PARAMETER\000"
 3483      455F4741 
 3483      54545F45 
 3483      52525F41 
 3483      4E43535F 
 3484              	.LASF55:
 3485 0d58 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 3485      455F4556 
 3485      545F4741 
 3485      5454435F 
 3485      52454144 
 3486              	.LASF14:
 3487 0d7f 666C6F61 		.ascii	"float\000"
 3487      7400
 3488              	.LASF70:
 3489 0d85 4359424C 		.ascii	"CYBLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 3489      455F4556 
 3489      545F4741 
 3489      5454535F 
 3489      48414E44 
 3490              	.LASF160:
 3491 0da6 63686970 		.ascii	"chip_select\000"
 3491      5F73656C 
 3491      65637400 
 3492              	.LASF105:
 3493 0db2 4359424C 		.ascii	"CYBLE_GATT_ERR_PREPARE_WRITE_QUEUE_FULL\000"
 3493      455F4741 
 3493      54545F45 
 3493      52525F50 
 3493      52455041 
 3494              	.LASF186:
 3495 0dda 4379426C 		.ascii	"CyBle_GappStartAdvertisement\000"
 3495      655F4761 
 3495      70705374 
 3495      61727441 
 3495      64766572 
 3496              	.LASF164:
 3497 0df7 74656D70 		.ascii	"tempHandle\000"
 3497      48616E64 
 3497      6C6500
 3498              	.LASF134:
 3499 0e02 4359424C 		.ascii	"CYBLE_GATT_ERR_OUT_OF_RANGE\000"
 3499      455F4741 
 3499      54545F45 
 3499      52525F4F 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 90


 3499      55545F4F 
 3500              	.LASF1:
 3501 0e1e 756E7369 		.ascii	"unsigned char\000"
 3501      676E6564 
 3501      20636861 
 3501      7200
 3502              	.LASF12:
 3503 0e2c 75696E74 		.ascii	"uint16\000"
 3503      313600
 3504              	.LASF40:
 3505 0e33 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 3505      455F4556 
 3505      545F4741 
 3505      505F4B45 
 3505      59505245 
 3506              	.LASF109:
 3507 0e57 4359424C 		.ascii	"CYBLE_GATT_ERR_INVALID_ATTRIBUTE_LEN\000"
 3507      455F4741 
 3507      54545F45 
 3507      52525F49 
 3507      4E56414C 
 3508              	.LASF122:
 3509 0e7c 4359424C 		.ascii	"CYBLE_GATTS_ERR_CCCD_IMPROPERLY_CONFIGURED\000"
 3509      455F4741 
 3509      5454535F 
 3509      4552525F 
 3509      43434344 
 3510              	.LASF175:
 3511 0ea7 67656E65 		.ascii	"generated_numberOld\000"
 3511      72617465 
 3511      645F6E75 
 3511      6D626572 
 3511      4F6C6400 
 3512              	.LASF174:
 3513 0ebb 67656E65 		.ascii	"generated_number\000"
 3513      72617465 
 3513      645F6E75 
 3513      6D626572 
 3513      00
 3514              	.LASF2:
 3515 0ecc 73686F72 		.ascii	"short int\000"
 3515      7420696E 
 3515      7400
 3516              	.LASF171:
 3517 0ed6 636F756E 		.ascii	"counter\000"
 3517      74657200 
 3518              	.LASF69:
 3519 0ede 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 3519      455F4556 
 3519      545F4741 
 3519      5454435F 
 3519      48414E44 
 3520              	.LASF39:
 3521 0eff 4359424C 		.ascii	"CYBLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 3521      455F4556 
 3521      545F4741 
 3521      505F4E55 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 91


 3521      4D455249 
 3522              	.LASF121:
 3523 0f28 4359424C 		.ascii	"CYBLE_GATT_ERR_MISSING_CRC\000"
 3523      455F4741 
 3523      54545F45 
 3523      52525F4D 
 3523      49535349 
 3524              	.LASF88:
 3525 0f43 4359424C 		.ascii	"CYBLE_EVT_HCI_PKT\000"
 3525      455F4556 
 3525      545F4843 
 3525      495F504B 
 3525      5400
 3526              	.LASF176:
 3527 0f55 7370695F 		.ascii	"spi_rx_ads1299_status\000"
 3527      72785F61 
 3527      64733132 
 3527      39395F73 
 3527      74617475 
 3528              	.LASF65:
 3529 0f6b 4359424C 		.ascii	"CYBLE_EVT_GATTS_PREP_WRITE_REQ\000"
 3529      455F4556 
 3529      545F4741 
 3529      5454535F 
 3529      50524550 
 3530              	.LASF154:
 3531 0f8a 41445331 		.ascii	"ADS1299_STATUS_OK\000"
 3531      3239395F 
 3531      53544154 
 3531      55535F4F 
 3531      4B00
 3532              	.LASF188:
 3533 0f9c 70776D5F 		.ascii	"pwm_Stop\000"
 3533      53746F70 
 3533      00
 3534              	.LASF50:
 3535 0fa5 4359424C 		.ascii	"CYBLE_EVT_GATTC_ERROR_RSP\000"
 3535      455F4556 
 3535      545F4741 
 3535      5454435F 
 3535      4552524F 
 3536              	.LASF166:
 3537 0fbf 75706461 		.ascii	"updateLed\000"
 3537      74654C65 
 3537      6400
 3538              	.LASF45:
 3539 0fc9 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 3539      455F4556 
 3539      545F4741 
 3539      505F534D 
 3539      505F4E45 
 3540              	.LASF115:
 3541 0ff0 4359424C 		.ascii	"CYBLE_GATT_ERR_HEART_RATE_CONTROL_POINT_NOT_SUPPORT"
 3541      455F4741 
 3541      54545F45 
 3541      52525F48 
 3541      45415254 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 92


 3542 1023 454400   		.ascii	"ED\000"
 3543              	.LASF16:
 3544 1026 63686172 		.ascii	"char\000"
 3544      00
 3545              	.LASF33:
 3546 102b 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_CONNECTED\000"
 3546      455F4556 
 3546      545F4741 
 3546      505F4445 
 3546      56494345 
 3547              	.LASF17:
 3548 104a 6C6F6E67 		.ascii	"long double\000"
 3548      20646F75 
 3548      626C6500 
 3549              	.LASF92:
 3550 1056 4359424C 		.ascii	"CYBLE_BLESS_SLEEP\000"
 3550      455F424C 
 3550      4553535F 
 3550      534C4545 
 3550      5000
 3551              	.LASF61:
 3552 1068 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_MULTI_RSP\000"
 3552      455F4556 
 3552      545F4741 
 3552      5454435F 
 3552      52454144 
 3553              	.LASF114:
 3554 1087 4359424C 		.ascii	"CYBLE_GATT_ERR_TRIGGER_CODITION_VALUE_NOT_SUPPORTED"
 3554      455F4741 
 3554      54545F45 
 3554      52525F54 
 3554      52494747 
 3555 10ba 00       		.ascii	"\000"
 3556              	.LASF34:
 3557 10bb 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 3557      455F4556 
 3557      545F4741 
 3557      505F4445 
 3557      56494345 
 3558              	.LASF73:
 3559 10dd 4359424C 		.ascii	"CYBLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 3559      455F4556 
 3559      545F4741 
 3559      5454535F 
 3559      52454144 
 3560              	.LASF83:
 3561 1106 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 3561      455F4556 
 3561      545F4C32 
 3561      4341505F 
 3561      43424643 
 3562              	.LASF84:
 3563 1129 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 3563      455F4556 
 3563      545F4C32 
 3563      4341505F 
 3563      43424643 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 93


 3564              	.LASF110:
 3565 114c 4359424C 		.ascii	"CYBLE_GATT_ERR_UNLIKELY_ERROR\000"
 3565      455F4741 
 3565      54545F45 
 3565      52525F55 
 3565      4E4C494B 
 3566              	.LASF131:
 3567 116a 4359424C 		.ascii	"CYBLE_GATT_ERR_ANCS_ACTION_FAILED\000"
 3567      455F4741 
 3567      54545F45 
 3567      52525F41 
 3567      4E43535F 
 3568              	.LASF192:
 3569 118c 436C6F63 		.ascii	"Clock_1_StartEx\000"
 3569      6B5F315F 
 3569      53746172 
 3569      74457800 
 3570              	.LASF187:
 3571 119c 70776D5F 		.ascii	"pwm_Start\000"
 3571      53746172 
 3571      7400
 3572              	.LASF22:
 3573 11a6 4359424C 		.ascii	"CYBLE_EVT_HARDWARE_ERROR\000"
 3573      455F4556 
 3573      545F4841 
 3573      52445741 
 3573      52455F45 
 3574              	.LASF3:
 3575 11bf 73686F72 		.ascii	"short unsigned int\000"
 3575      7420756E 
 3575      7369676E 
 3575      65642069 
 3575      6E7400
 3576              	.LASF41:
 3577 11d2 4359424C 		.ascii	"CYBLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 3577      455F4556 
 3577      545F4741 
 3577      505F4F4F 
 3577      425F4745 
 3578              	.LASF196:
 3579 11fb 43794465 		.ascii	"CyDelay\000"
 3579      6C617900 
 3580              	.LASF116:
 3581 1203 4359424C 		.ascii	"CYBLE_GATT_ERR_USER_DATA_ACCESS_NOT_PERMITTED\000"
 3581      455F4741 
 3581      54545F45 
 3581      52525F55 
 3581      5345525F 
 3582              	.LASF128:
 3583 1231 4359424C 		.ascii	"CYBLE_GATT_ERR_ANCS_UNKNOWN_COMMAND\000"
 3583      455F4741 
 3583      54545F45 
 3583      52525F41 
 3583      4E43535F 
 3584              	.LASF53:
 3585 1255 4359424C 		.ascii	"CYBLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 3585      455F4556 
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 94


 3585      545F4741 
 3585      5454535F 
 3585      58434E48 
 3586              	.LASF202:
 3587 1273 433A5C55 		.ascii	"C:\\Users\\dmr85\\Documents\\PSoC Creator\\EEG_Work"
 3587      73657273 
 3587      5C646D72 
 3587      38355C44 
 3587      6F63756D 
 3588 12a1 73706163 		.ascii	"space\\EEGfirmware\\EEG_Project_Demo.cydsn\000"
 3588      655C4545 
 3588      47666972 
 3588      6D776172 
 3588      655C4545 
 3589              	.LASF169:
 3590 12ca 6576656E 		.ascii	"eventParam\000"
 3590      74506172 
 3590      616D00
 3591              	.LASF153:
 3592 12d5 4359424C 		.ascii	"CYBLE_STATE_T\000"
 3592      455F5354 
 3592      4154455F 
 3592      5400
 3593              	.LASF10:
 3594 12e3 75696E74 		.ascii	"uint8_t\000"
 3594      385F7400 
 3595              	.LASF103:
 3596 12eb 4359424C 		.ascii	"CYBLE_GATT_ERR_INVALID_OFFSET\000"
 3596      455F4741 
 3596      54545F45 
 3596      52525F49 
 3596      4E56414C 
 3597              	.LASF126:
 3598 1309 4359424C 		.ascii	"CYBLE_GATTS_ERR_NETWORK_NOT_AVAILABLE\000"
 3598      455F4741 
 3598      5454535F 
 3598      4552525F 
 3598      4E455457 
 3599              	.LASF150:
 3600 132f 4359424C 		.ascii	"CYBLE_STATE_CONNECTED\000"
 3600      455F5354 
 3600      4154455F 
 3600      434F4E4E 
 3600      45435445 
 3601              	.LASF190:
 3602 1345 4379426C 		.ascii	"CyBle_GattsWriteRsp\000"
 3602      655F4761 
 3602      74747357 
 3602      72697465 
 3602      52737000 
 3603              	.LASF93:
 3604 1359 4359424C 		.ascii	"CYBLE_BLESS_DEEPSLEEP\000"
 3604      455F424C 
 3604      4553535F 
 3604      44454550 
 3604      534C4545 
 3605              	.LASF179:
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 95


 3606 136f 7370695F 		.ascii	"spi_ReadTxStatus\000"
 3606      52656164 
 3606      54785374 
 3606      61747573 
 3606      00
 3607              	.LASF58:
 3608 1380 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 3608      455F4556 
 3608      545F4741 
 3608      5454435F 
 3608      46494E44 
 3609              	.LASF38:
 3610 13a7 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 3610      455F4556 
 3610      545F4741 
 3610      505F4B45 
 3610      59494E46 
 3611              	.LASF80:
 3612 13cb 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 3612      455F4556 
 3612      545F4C32 
 3612      4341505F 
 3612      43424643 
 3613              	.LASF193:
 3614 13ec 436C6F63 		.ascii	"Clock_2_StartEx\000"
 3614      6B5F325F 
 3614      53746172 
 3614      74457800 
 3615              	.LASF86:
 3616 13fc 4359424C 		.ascii	"CYBLE_EVT_PENDING_FLASH_WRITE\000"
 3616      455F4556 
 3616      545F5045 
 3616      4E44494E 
 3616      475F464C 
 3617              	.LASF197:
 3618 141a 61647331 		.ascii	"ads1299_rdata24_generic\000"
 3618      3239395F 
 3618      72646174 
 3618      6132345F 
 3618      67656E65 
 3619              	.LASF76:
 3620 1432 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 3620      455F4556 
 3620      545F4C32 
 3620      4341505F 
 3620      434F4E4E 
 3621              	.LASF204:
 3622 1458 6D61696E 		.ascii	"main\000"
 3622      00
 3623              	.LASF91:
 3624 145d 4359424C 		.ascii	"CYBLE_BLESS_ACTIVE\000"
 3624      455F424C 
 3624      4553535F 
 3624      41435449 
 3624      564500
 3625              	.LASF43:
 3626 1470 4359424C 		.ascii	"CYBLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
ARM GAS  C:\Users\dmr85\AppData\Local\Temp\ccohLdAN.s 			page 96


 3626      455F4556 
 3626      545F4741 
 3626      505F454E 
 3626      48414E43 
 3627              	.LASF135:
 3628 1494 4359424C 		.ascii	"CYBLE_GATT_DB_ATTR_HANDLE_T\000"
 3628      455F4741 
 3628      54545F44 
 3628      425F4154 
 3628      54525F48 
 3629              	.LASF52:
 3630 14b0 4359424C 		.ascii	"CYBLE_EVT_GATT_DISCONNECT_IND\000"
 3630      455F4556 
 3630      545F4741 
 3630      54545F44 
 3630      4953434F 
 3631              	.LASF89:
 3632 14ce 4359424C 		.ascii	"CYBLE_EVT_FLASH_CORRUPT\000"
 3632      455F4556 
 3632      545F464C 
 3632      4153485F 
 3632      434F5252 
 3633              	.LASF162:
 3634 14e6 6F70636F 		.ascii	"opcode\000"
 3634      646500
 3635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
